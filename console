<?php

use Chamilo\Libraries\Architecture\Bootstrap\Bootstrap;
use Chamilo\Libraries\Architecture\ErrorHandler\ExceptionLogger\ExceptionLoggerInterface;
use Chamilo\Libraries\Console;
use Chamilo\Libraries\DependencyInjection\DependencyInjectionContainerBuilder;
use Symfony\Component\Console\Output\ConsoleOutput;

$autoloader = require __DIR__ . '/vendor/autoload.php';

$container = DependencyInjectionContainerBuilder::getInstance()->createContainer();
$container->get(Bootstrap::class)->setup();

/**
 * @var \Chamilo\Libraries\Architecture\ErrorHandler\ExceptionLogger\ExceptionLoggerInterface $exceptionLogger
 */
$exceptionLogger = $container->get('Chamilo\Libraries\Architecture\ErrorHandler\ExceptionLogger');

/** @var \Symfony\Component\Console\Application $console */
$console = $container->get('Chamilo\Libraries\Console');

try
{
    /** @var \Symfony\Component\Console\Helper\HelperSet $helperSet */
    $helperSet = $container->get('Chamilo\Libraries\Console\HelperSet');

    $console->setHelperSet($helperSet);
    $console->setCatchExceptions(false);
    $console->run();
}
catch (Throwable $ex)
{
    $console->renderThrowable($ex, new ConsoleOutput());
    $exceptionLogger->logException($ex, ExceptionLoggerInterface::EXCEPTION_LEVEL_FATAL_ERROR);
}