{"remainingRequest":"D:\\Sites\\branch\\node_modules\\babel-loader\\lib\\index.js!D:\\Sites\\branch\\node_modules\\ts-loader\\index.js??ref--13-2!D:\\Sites\\branch\\src\\Chamilo\\Libraries\\VuePlugins\\src\\Plugins\\ScoreRubric\\Domain\\Rubric.ts","dependencies":[{"path":"D:\\Sites\\branch\\src\\Chamilo\\Libraries\\VuePlugins\\src\\Plugins\\ScoreRubric\\Domain\\Rubric.ts","mtime":1574763316000},{"path":"D:\\Sites\\branch\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Sites\\branch\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Sites\\branch\\node_modules\\ts-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:\\Sites\\branch\\src\\Chamilo\\Libraries\\VuePlugins\\src\\Plugins\\ScoreRubric\\Domain\\Rubric.ts"],"names":[],"mappings":"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","sourcesContent":["import Cluster, {ClusterJsonObject} from \"@/Plugins/ScoreRubric/Domain/Cluster\";\nimport Level, {LevelId, LevelJsonObject} from \"@/Plugins/ScoreRubric/Domain/Level\";\nimport Choice, {ChoiceJsonObject} from \"@/Plugins/ScoreRubric/Domain/Choice\";\nimport Criterium, {CriteriumId} from \"@/Plugins/ScoreRubric/Domain/Criterium\";\nimport Container, {ContainerInterface} from \"@/Plugins/ScoreRubric/Domain/Container\";\n\nexport interface Element {\n    parent: Container | null;\n    title: string;\n\n    getScore(): number;\n}\n\nexport function isElement(object: any): object is Element {\n    return 'parent' in object && 'title' in object;\n}\n\n\nexport function isContainer(object: any): object is ContainerInterface {\n    return 'children' in object && isElement(object);\n}\n\nexport interface RubricChoiceJsonObject {\n    \"criteriumId\": string,\n    \"levelId\": string,\n    \"choice\": ChoiceJsonObject\n}\n\nexport interface RubricJsonObject {\n    useScores: boolean,\n    title: string,\n    levels: LevelJsonObject[],\n    clusters: ClusterJsonObject[],\n    choices: RubricChoiceJsonObject[]\n}\n\nexport default class Rubric extends Container {\n    public useScores: boolean = true;\n    public levels: Level[] = [];\n    public choices: Map<CriteriumId, Map<LevelId, Choice>> = new Map<CriteriumId, Map<LevelId, Choice>>();\n\n    get clusters():Cluster[] {\n        return this.children as Cluster[]; //invariant garded at addChild\n    }\n\n    addCluster(cluster: Cluster) {\n        this.addChild(cluster);\n    }\n\n    removeCluster(cluster: Cluster) {\n        this.removeChild(cluster);\n    }\n\n    protected addChild(element: Element): void {\n        super.addChild(element);\n        this.notifyAddChild(element);\n    }\n\n    protected notifyAddChild(element: Element): void {\n        if(element instanceof Criterium) {\n            this.onCriteriumAdded(element);\n        }\n\n        else if(element instanceof Container) {\n            let addedCriteria = this.getAllCriteria(element);\n            addedCriteria.forEach(criterium => {\n                this.levels.forEach(level =>\n                {\n                    let choice = this.findChoice(criterium, level);\n                    if(!choice)\n                        choice = new Choice(false, \"\");\n                    this.addChoice(choice, criterium.id, level.id);\n                })\n            });\n        }\n        //no more bubbling\n    }\n\n    protected onCriteriumAdded(criterium:Criterium) {\n        this.levels.forEach(level => {\n            //choice already exists for criterium? Could be through json bootstrapping.\n            let choice = this.findChoice(criterium, level);\n            if(!choice)\n                choice = new Choice(false, \"\");\n            this.addChoice(choice, criterium.id, level.id);\n        });\n    }\n\n    protected notifyRemoveChild(container: Container, element: Element): void {\n        let criteriaToBeRemoved = this.getAllCriteria(container);\n        criteriaToBeRemoved.forEach(criterium => this.removeChoicesByCriterium(criterium));\n    }\n\n    toJSON(): RubricJsonObject {\n        return {\n            useScores: this.useScores,\n            title: this.title,\n            levels: this.levels,\n            clusters: this._children.map(cluster => (cluster as Cluster).toJSON()),\n            choices: this.getChoicesJSON()\n        }\n    }\n\n    protected getChoicesJSON(): RubricChoiceJsonObject[]{\n        let choicesArray:RubricChoiceJsonObject[] = [];\n        this.choices.forEach((levelMap, criteriumId) => {\n            levelMap.forEach((choice, levelId) => {\n                choicesArray.push(\n                    {\n                        \"criteriumId\": criteriumId,\n                        \"levelId\": levelId,\n                        \"choice\": choice.toJSON()\n                    }\n                )\n            })\n        } );\n        return choicesArray;\n    }\n\n    static fromJSON(rubric:string|RubricJsonObject):Rubric {\n        let rubricObject: RubricJsonObject;\n        if(typeof rubric === 'string') {\n            rubricObject = JSON.parse(rubric);\n        } else {\n            rubricObject = rubric;\n        }\n\n        let newRubric = new Rubric(rubricObject.title);\n        newRubric.levels.push(...rubricObject.levels.map(level => Level.fromJSON(level)));\n\n        rubricObject.choices.forEach(rubricChoiceJsonObject => {\n            newRubric.addChoice(\n                Choice.fromJSON(rubricChoiceJsonObject.choice),\n                rubricChoiceJsonObject.criteriumId,\n                rubricChoiceJsonObject.levelId,\n                )\n        });\n\n        rubricObject.clusters\n            .map(clusterJsonObject => Cluster.fromJSON(clusterJsonObject))\n            .forEach(cluster => newRubric.addChild(cluster));\n\n        newRubric.useScores = rubricObject.useScores;\n\n        return newRubric;\n    }\n\n    protected addChoice(choice: Choice, criteriumId: CriteriumId, levelId: LevelId){\n        let criteriumChoices = this.choices.get(criteriumId);\n        if (criteriumChoices === undefined) {\n            criteriumChoices = new Map<LevelId, Choice>();\n            this.choices.set(criteriumId, criteriumChoices);\n        }\n        criteriumChoices.set(levelId, choice);\n    }\n\n    protected removeChoicesByCriterium(criterium: Criterium) {\n        this.choices.delete(criterium.id);\n    }\n\n    protected removeChoicesByLevel(level: Level) {\n        Array.from(this.choices.values()).forEach(levelChoices => levelChoices.delete(level.id))\n    }\n\n    protected findChoice(criterium: Criterium, level: Level):Choice|undefined {\n        let criteriumChoices = this.choices.get(criterium.id);\n        if (criteriumChoices === undefined) {\n            return undefined;\n        }\n\n        return criteriumChoices.get(level.id);\n    }\n\n    /**\n     * Invariant: to the outside world a choice is always available for a criterium and level of the rubric.\n     * @param criterium\n     * @param level\n     */\n    public getChoice(criterium: Criterium, level: Level):Choice {\n        let choice = this.findChoice(criterium, level);\n        if(!choice) {\n            throw new Error(`No choice found for criteria: ${criterium} and level: ${level}`);\n        }\n        return choice;\n    }\n\n    public addLevel(level: Level) {\n        this.levels.push(level);\n        this.getAllCriteria().forEach(criterium => {\n            this.addChoice(new Choice(false, \"\"), criterium.id, level.id)\n        })\n    }\n\n    public removeLevel(level: Level) {\n        const index = this.levels.indexOf(level);\n        this.levels.splice(index, 1);\n        this.removeChoicesByLevel(level);\n    }\n\n    public moveLevelDown(level: Level) {\n        this.moveItemInArray(\n            this.levels, this.levels.indexOf(level), this.levels.indexOf(level) + 1\n        )\n    }\n\n    public moveLevelUp(level: Level) {\n        this.moveItemInArray(\n            this.levels, this.levels.indexOf(level), this.levels.indexOf(level) - 1\n        )\n    }\n\n    protected moveItemInArray(array: any[], from: number, to: number) {\n        if (to >= array.length || from >= array.length)\n            return;\n        if (to < 0 || from < 0)\n            return;\n\n        array.splice(to, 0, array.splice(from, 1)[0]);\n    }\n\n    public getChoiceScore(criterium: Criterium, level: Level){\n        let choice = this.getChoice(criterium, level);\n        if(choice.hasFixedScore)\n            return choice.fixedScore;\n\n        return Math.round(criterium.weight * level.score) / 100;\n    }\n\n    public getScore() {\n        return this._children\n            .reduce((accumulator, currentContainer) => accumulator + currentContainer.getScore(), 0);\n    }\n\n    public getAllCriteria(container: Container = this) {\n        const criteria: Criterium[] = [];\n        this.getCriteriaRecursive(container, criteria);\n\n        return criteria;\n    }\n\n    protected getCriteriaRecursive(container: Container, criteria: Criterium[]) {\n        container.children.filter(child => (child instanceof Criterium)).forEach(\n            criterium => criteria.push(criterium as Criterium)\n        );\n\n        container.children.filter(child => isContainer(child)).forEach(\n            childContainer => this.getCriteriaRecursive(childContainer as Container, criteria)\n        )\n    }\n\n}\n"],"sourceRoot":""}]}