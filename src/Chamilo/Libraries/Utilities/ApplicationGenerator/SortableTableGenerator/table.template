<?php

namespace {NAMESPACE};

use common\libraries\ObjectTable;
use common\libraries\ObjectTableFormAction;
use common\libraries\ObjectTableFormActions;
use common\libraries\Translation;
use common\libraries\Utilities;
use common\libraries\Request;

/**
 * @package {L_APPLICATION_NAME}.{L_APPLICATION_NAME}_manager.component.{L_OBJECT_CLASS}_browser
 */
require_once dirname(__FILE__).'/{L_OBJECT_CLASS}_browser_table_data_provider.class.php';
require_once dirname(__FILE__).'/{L_OBJECT_CLASS}_browser_table_column_model.class.php';
require_once dirname(__FILE__).'/{L_OBJECT_CLASS}_browser_table_cell_renderer.class.php';
require_once dirname(__FILE__).'/../../{L_APPLICATION_NAME}_manager.class.php';

/**
 * Table to display a list of {L_OBJECT_CLASSES}
 *
 * @author Sven Vanpoucke
 * @author {AUTHOR}
 */
class {OBJECT_CLASS}BrowserTable extends ObjectTable
{
    /**
     * Constructor
     */
    function __construct($browser, $parameters, $condition)
    {
        $model = new {OBJECT_CLASS}BrowserTableColumnModel();
        $renderer = new {OBJECT_CLASS}BrowserTableCellRenderer($browser);
        $data_provider = new {OBJECT_CLASS}BrowserTableDataProvider($browser, $condition);
        parent :: __construct($data_provider, Utilities :: get_classname_from_namespace(__CLASS__, true), $model, $renderer);
        $this->set_additional_parameters($parameters);

        $actions = new ObjectTableFormActions(__NAMESPACE__);
        $actions->add_form_action(new ObjectTableFormAction({APPLICATION_NAME}Manager :: ACTION_DELETE_{U_OBJECT_CLASS}, Translation :: get('RemoveSelected', null, Utilities :: COMMON_LIBRARIES)));
        $this->set_form_actions($actions);

        $this->set_default_row_count(20);
    }

    function handle_table_action()
    {
        $class = Utilities :: get_classname_from_namespace(__CLASS__, true);
    	$ids = self :: get_selected_ids($class);
    	Request :: set_get({APPLICATION_NAME}Manager :: PARAM_{U_OBJECT_CLASS}, $ids);
    }
}
?>