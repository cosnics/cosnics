<?php

namespace {NAMESPACE};

/**
 * @package application.lib.{L_APPLICATION_NAME}.{L_APPLICATION_NAME}_manager
 */

use common\libraries\WebApplication;

/**
 * A {L_APPLICATION_NAME} manager
 *
 * @author Sven Vanpoucke
 * @author {AUTHOR}
 */
 class {APPLICATION_NAME}Manager extends WebApplication
 {
 	const APPLICATION_NAME = '{L_APPLICATION_NAME}';

	<!-- BEGIN OBJECTS -->
	const PARAM_{OBJECTS.U_OBJECT_CLASS} = '{OBJECTS.L_OBJECT_CLASS}';
	
	const ACTION_DELETE_{OBJECTS.U_OBJECT_CLASS} = '{OBJECTS.L_OBJECT_CLASS}_deleter';
	const ACTION_EDIT_{OBJECTS.U_OBJECT_CLASS} = '{OBJECTS.L_OBJECT_CLASS}_updater';
	const ACTION_CREATE_{OBJECTS.U_OBJECT_CLASS} = '{OBJECTS.L_OBJECT_CLASS}_creator';
	const ACTION_BROWSE_{OBJECTS.U_OBJECT_CLASSES} = '{OBJECTS.L_OBJECT_CLASSES}_browser';
	
	<!-- END OBJECTS -->

	const ACTION_BROWSE = 'browser';
        const DEFAULT_ACTION = self :: ACTION_BROWSE;


	/**
	 * Constructor
	 * @param User $user The current user
	 */
    function __construct($user = null)
    {
    	parent :: __construct($user);
    }
	
	function get_application_name()
	{
		return self :: APPLICATION_NAME;
	}
	
	// Data Retrieving
	
	<!-- BEGIN OBJECTS -->
	function count_{OBJECTS.L_OBJECT_CLASSES}($condition)
	{
		return {APPLICATION_NAME}DataManager :: get_instance()->count_{OBJECTS.L_OBJECT_CLASSES}($condition);
	}
	
	function retrieve_{OBJECTS.L_OBJECT_CLASSES}($condition = null, $offset = null, $count = null, $order_property = null)
	{
		return {APPLICATION_NAME}DataManager :: get_instance()->retrieve_{OBJECTS.L_OBJECT_CLASSES}($condition, $offset, $count, $order_property);
	}
	
 	function retrieve_{OBJECTS.L_OBJECT_CLASS}($id)
	{
		return {APPLICATION_NAME}DataManager :: get_instance()->retrieve_{OBJECTS.L_OBJECT_CLASS}($id);
	}
	
	<!-- END OBJECTS -->
	// Url Creation
	
	<!-- BEGIN OBJECTS -->
	function get_create_{OBJECTS.L_OBJECT_CLASS}_url()
	{
		return $this->get_url(array(self :: PARAM_ACTION => self :: ACTION_CREATE_{OBJECTS.U_OBJECT_CLASS}));
	}
	
	function get_update_{OBJECTS.L_OBJECT_CLASS}_url(${OBJECTS.L_OBJECT_CLASS})
	{
		return $this->get_url(array(self :: PARAM_ACTION => self :: ACTION_EDIT_{OBJECTS.U_OBJECT_CLASS},
								    self :: PARAM_{OBJECTS.U_OBJECT_CLASS} => ${OBJECTS.L_OBJECT_CLASS}->get_id()));
	}
	
 	function get_delete_{OBJECTS.L_OBJECT_CLASS}_url(${OBJECTS.L_OBJECT_CLASS})
	{
		return $this->get_url(array(self :: PARAM_ACTION => self :: ACTION_DELETE_{OBJECTS.U_OBJECT_CLASS},
								    self :: PARAM_{OBJECTS.U_OBJECT_CLASS} => ${OBJECTS.L_OBJECT_CLASS}->get_id()));
	}
	
	function get_browse_{OBJECTS.L_OBJECT_CLASSES}_url()
	{
		return $this->get_url(array(self :: PARAM_ACTION => self :: ACTION_BROWSE_{OBJECTS.U_OBJECT_CLASSES}));
	}
	
	<!-- END OBJECTS -->

	function get_browse_url()
	{
		return $this->get_url(array(self :: PARAM_ACTION => self :: ACTION_BROWSE));
	}

        function get_default_action()
    {
        return self :: DEFAULT_ACTION;
    }
}
?>