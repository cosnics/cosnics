<?php

namespace {NAMESPACE};

use common\libraries\Breadcrumb;
use common\libraries\BreadcrumbTrail;
use common\libraries\Translation;
use common\libraries\Request;
use common\libraries\architecture\Application;

/**
 * @package application.{L_APPLICATION_NAME}.{L_APPLICATION_NAME}.component
 */

/**
 * Component to delete {L_OBJECT_CLASSES} objects
 * @author Sven Vanpoucke
 * @author {AUTHOR}
 */
class {APPLICATION_NAME}Manager{OBJECT_CLASS}DeleterComponent extends {APPLICATION_NAME}Manager
{
    /**
     * Runs this component and displays its output.
     */
    function run()
    {
        $ids = Request :: get({APPLICATION_NAME}Manager :: PARAM_{U_OBJECT_CLASS});
        $failures = 0;

        if (!empty ($ids))
        {
            if (!is_array($ids))
            {
                $ids = array ($ids);
            }

            foreach ($ids as $id)
            {
                ${L_OBJECT_CLASS} = $this->retrieve_{L_OBJECT_CLASS}($id);

                if (!${L_OBJECT_CLASS}->delete())
                {
                    $failures++;
                }
            }

            $message = $this->get_general_result($failures, count($ids), Translation :: get('{OBJECT_CLASS}'),
                    Translation :: get('{OBJECT_CLASSES}'), $type = Application :: RESULT_TYPE_DELETED);

            $this->redirect($message, ($failures ? true : false), array({APPLICATION_NAME}Manager :: PARAM_ACTION => {APPLICATION_NAME}Manager :: ACTION_BROWSE_{U_OBJECT_CLASSES}));
        }
        else
        {
            $this->display_error_page(htmlentities(Translation :: get('No{OBJECT_CLASSES}Selected')));
        }
    }

    function add_additional_breadcrumbs(BreadcrumbTrail $breadcrumbtrail)
    {
    	$breadcrumbtrail->add_help('{L_OBJECT_CLASS}_deleter');
    	$breadcrumbtrail->add(new Breadcrumb($this->get_url(array({APPLICATION_NAME}Manager :: PARAM_ACTION => {APPLICATION_NAME}Manager :: ACTION_BROWSE)), Translation :: get('{APPLICATION_NAME}ManagerBrowserComponent')));
        $breadcrumbtrail->add(new Breadcrumb($this->get_url(array({APPLICATION_NAME}Manager :: PARAM_ACTION => {APPLICATION_NAME}Manager :: ACTION_BROWSE_{U_OBJECT_CLASSES})), Translation :: get('{APPLICATION_NAME}Manager{OBJECT_CLASSES}BrowserComponent')));
    }

    function get_additional_parameters()
    {
    	return array({APPLICATION_NAME}Manager :: PARAM_{U_OBJECT_CLASS});
    }
}
?>