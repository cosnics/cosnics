<?php

namespace {NAMESPACE};

use common\libraries\Breadcrumb;
use common\libraries\BreadcrumbTrail;
use common\libraries\Translation;
use common\libraries\architecture\Application;
use common\libraries\ActionBarRenderer;
use common\libraries\ToolbarItem;
use common\libraries\Theme;
use common\libraries\ConditionProperty;
use common\libraries\Utilities;

/**
 * @package application.{L_APPLICATION_NAME}.{L_APPLICATION_NAME}.component
 */
 

/**
 * {L_APPLICATION_NAME} component which allows the user to browse his {L_OBJECT_CLASSES}
 * @author Sven Vanpoucke
 * @author {AUTHOR}
 */
class {APPLICATION_NAME}Manager{OBJECT_CLASSES}BrowserComponent extends {APPLICATION_NAME}Manager
{
    private $action_bar;
    
    function run()
    {
        $this->action_bar = $this->get_action_bar();
        $this->display_header($trail);

        echo $this->action_bar->as_html();
        echo '<div id="action_bar_browser">';

        echo $this->get_table();

        echo '</div>';
        $this->display_footer();
    }

    function get_action_bar()
    {
        $action_bar = new ActionBarRenderer(ActionBarRenderer :: TYPE_HORIZONTAL);

        $action_bar->set_search_url($this->get_url());
        $action_bar->add_common_action(new ToolbarItem(Translation :: get('Add', null, Utilities :: COMMON_LIBRARIES), Theme :: get_common_image_path() . 'Action/Add.png', $this->get_create_{L_OBJECT_CLASS}_url()));
        $action_bar->add_common_action(new ToolbarItem(Translation :: get('ShowAll', null, Utilities :: COMMON_LIBRARIES), Theme :: get_common_image_path() . 'Action/Browser.png', $this->get_url()));

        return $action_bar;
    }

    function get_table()
    {
        $table = new {OBJECT_CLASS}BrowserTable($this, array(Application :: PARAM_APPLICATION => '{L_APPLICATION_NAME}', Application :: PARAM_ACTION => {APPLICATION_NAME}Manager :: ACTION_BROWSE_{U_OBJECT_CLASSES}), $this->get_condition());
        return $table->as_html();
    }

    function get_condition()
    {
    	$properties[] = new ConditionProperty({OBJECT_CLASS} :: PROPERTY_ID);
    	return $this->action_bar->get_conditions($properties);
    }
        
    function add_additional_breadcrumbs(BreadcrumbTrail $breadcrumbtrail)
    {
    	$breadcrumbtrail->add_help('{L_OBJECT_CLASSES}_browser');
    	$breadcrumbtrail->add(new Breadcrumb($this->get_url(array({APPLICATION_NAME}Manager :: PARAM_ACTION => {APPLICATION_NAME}Manager :: ACTION_BROWSE)), Translation :: get('{APPLICATION_NAME}ManagerBrowserComponent')));
    }

    function get_additional_parameters()
    {
    	return array();
    }

}
?>