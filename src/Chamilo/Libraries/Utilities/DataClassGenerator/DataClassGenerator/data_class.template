<?php
namespace {NAMESPACE};

use common\libraries\Utilities;
use common\libraries\DataClass;

/**
 * {PACKAGE}
 * @author {AUTHOR}
 */
class {OBJECT_CLASS} extends DataClass
{
    const CLASS_NAME = __CLASS__;

    /**
     * {OBJECT_CLASS} properties
     */
    <!-- BEGIN CONSTS -->
    const {CONSTS.PROPERTY_CONST} = '{CONSTS.PROPERTY_NAME}';
    <!-- END CONSTS -->

    /**
     * Get the default properties
     * @param multitype:string $extended_property_names
     * @return multitype:string The property names.
     */
    static function get_default_property_names($extended_property_names = array())
    {
    	<!-- BEGIN DEFAULT_PROPERTY -->
        $extended_property_names[] = self :: {DEFAULT_PROPERTY.PROPERTY_CONST};
        <!-- END DEFAULT_PROPERTY -->

        return parent :: get_default_property_names($extended_property_names);
    }

    /**
     * Get the data class data manager
     * @return {APPLICATION_NAME}DataManagerInterface
     */
    function get_data_manager()
    {
        return {APPLICATION_NAME}DataManager :: get_instance();
    }

    <!-- BEGIN PROPERTY -->
    /**
     * Returns the {PROPERTY.PROPERTY_NAME} of this {OBJECT_CLASS}.
     * @return {PROPERTY.PROPERTY_TYPE} The {PROPERTY.PROPERTY_NAME}.
     */
    function get_{PROPERTY.PROPERTY_NAME}()
    {
        return $this->get_default_property(self :: {PROPERTY.PROPERTY_CONST});
    }

    /**
     * Sets the {PROPERTY.PROPERTY_NAME} of this {OBJECT_CLASS}.
     * @param {PROPERTY.PROPERTY_TYPE} ${PROPERTY.PROPERTY_NAME}
     */
    function set_{PROPERTY.PROPERTY_NAME}(${PROPERTY.PROPERTY_NAME})
    {
        $this->set_default_property(self :: {PROPERTY.PROPERTY_CONST}, ${PROPERTY.PROPERTY_NAME});
    }
    <!-- END PROPERTY -->

    /**
     * @return string The table name of the data class
     */
    static function get_table_name()
    {
        return Utilities :: get_classname_from_namespace(self :: CLASS_NAME, true);
    }
}