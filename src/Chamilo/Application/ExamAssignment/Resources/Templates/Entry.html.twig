{% extends "Chamilo\\Application\\ExamAssignment:Base.html.twig" %}
    {% set appContext = 'Chamilo\\Application\\ExamAssignment' %}
    {% block main %}
        <style>
            .not-allowed-alert {
                margin-top: 5em;
            }

            .error-strong {
                color: #945351;
            }

            .btn.mod-return-success {
                background-color: #d0e2ca;
                border-color: #aed0a9;
                color: #356936;
                font-size: 13px;
                margin-top: .25em;
                padding: 3px 8px;
            }
            .btn-success.mod-fail {
                font-size: 13px;
                margin-top: 5px;
                padding: 2px 6px;
            }
        </style>
        <main>
            {% if ALLOWED_TO_VIEW_ASSIGNMENT %}
                {% set alerting_success = DETAILS.has_finished %}
                {% set alerting_fail = not DETAILS.has_finished and not DETAILS.can_submit %}
                {% set alerting = alerting_success or alerting_fail %}
                {% set alerting_entries = DETAILS.has_finished %}
                {% set alerting_add_extra_entries = alerting_entries and DETAILS.can_submit and not RETRY_MODE %}
                {% set alerting_autofeedback = alerting and DETAILS.assignment.get_automatic_feedback_text() %}
                {% set alerting_info = alerting_entries or alerting_autofeedback %}
                {% if alerting %}
                    {% if alerting_success and not RETRY_MODE %}
                        <div class="alert alert-success mod-current-exam">
                            <div class="container">
                                <section class="main-content mod-entry mod-feedback">
                                    We hebben je inzending goed ontvangen. We hebben in totaal {{ ' ' ~ DETAILS.entries|length }} bestand(en) ontvangen van jou.
                                    <div><a class="btn mod-return-success" href="{{ LIST_URL }}">Keer terug naar de lijst van opdrachten</a></div>
                                </section>
                            </div>
                        </div>
                    {% elseif alerting_fail %}
                        <div class="alert alert-danger mod-current-exam">
                            <div class="container">
                                <section class="main-content mod-entry mod-feedback">
                                    We hebben van jou geen inzendingen ontvangen. Het is ook niet langer mogelijk om deze opdracht in te dienen omdat de tijd verstreken is.
                                    <div><a class="btn btn-success mod-fail" href="{{ LIST_URL }}">Keer terug naar de lijst van opdrachten</a></div>
                                </section>
                            </div>
                        </div>
                    {% endif %}
                {% if alerting_info %}
                <div{% if RETRY_MODE %} class="main-feedback-wrap"{% endif %}>
                    <div class="container">
                        <div class="main-content mod-entry">
                            <div class="main-feedback">
                                {% if alerting_entries %}
                                    <section class="main-files-received">
                                        <h2 class="current-exam-main-title mod-files-received">{% if RETRY_MODE %}Reeds ontvangen bestanden:{% else %}Ontvangen bestanden:{% endif %}</h2>
                                        <ol class="files-received-list">
                                            {% for ENTRY in DETAILS.entries %}
                                                <li>{{ ENTRY.description }}</li>
                                            {% endfor %}
                                        </ol>
                                        {% if alerting_add_extra_entries %}
                                            <a class="btn btn-action mod-add-extra" href="{{ CURRENT_URL }}&retry=1">Voeg extra bestanden toe aan je inzending</a>
                                        {% endif %}
                                    </section>
                                {% endif %}
                                {% if alerting_autofeedback %}
                                    <section class="u-col">
                                        <h2 class="current-exam-main-title mod-auto-feedback">Bericht van de docent:</h2>
                                        {{ DETAILS.assignment.get_automatic_feedback_text()|raw }}
                                    </section>
                                {% endif %}
                            </div>
                        </div>
                    </div>
                </div>
                {% endif %}
                {% endif %}
            {% else %}
                <div class="alert alert-danger mod-current-exam">
                    <div class="container">
                        <section class="main-content mod-entry mod-feedback">
                            {% if ASSIGNMENT_VIEW_STATUS == constant('Chamilo\\Application\\ExamAssignment\\Domain\\AssignmentViewStatus::STATUS_WRONG_CODE')  %}
                                Je hebt een <strong class="error-strong">foutieve code</strong> ingevuld. Ga naar de vorige pagina en probeer opnieuw!
                            {% elseif ASSIGNMENT_VIEW_STATUS == constant('Chamilo\\Application\\ExamAssignment\\Domain\\AssignmentViewStatus::STATUS_NO_RIGHTS') %}
                                Je beschikt niet over de juiste rechten om deze opdracht te bekijken. Gelieve contact op te nemen met de titularis van deze opdracht.
                            {% elseif ASSIGNMENT_VIEW_STATUS == constant('Chamilo\\Application\\ExamAssignment\\Domain\\AssignmentViewStatus::STATUS_ASSIGNMENT_NOT_IN_PROGRESS') %}
                                De opdracht is momenteel niet actief.<br>De opdracht is actief vanaf
                                <strong class="error-strong">{{ DETAILS.assignment.get_start_time|date("d/m/Y - H:i") }}</strong> en loopt tot
                                <strong class="error-strong">{{ DETAILS.assignment.get_end_time|date("d/m/Y - H:i") }}</strong>.
                            {% elseif ASSIGNMENT_VIEW_STATUS == constant('Chamilo\\Application\\ExamAssignment\\Domain\\AssignmentViewStatus::STATUS_CORRUPT_DATA') %}
                                Er is een onbekende fout opgetreden. Probeer het later opnieuw. Indien deze fout zich blijft voor doen neem je contact op met de beheerder van het platform.
                            {% endif %}
                            <div><a class="btn btn-success mod-fail" href="{{ LIST_URL }}">Keer terug naar de lijst van opdrachten</a></div>
                        </section>
                    </div>
                </div>
            {% endif %}
            {% if ALLOWED_TO_VIEW_ASSIGNMENT %}
            <div class="container">
                <div class="main-content mod-entry mod-current-exam {% if RETRY_MODE %} mod-extra{% endif %}">
                    {% if DETAILS.can_submit and (not DETAILS.has_finished or RETRY_MODE) %}
                        {% if RETRY_MODE %}<h1 class="current-exam-title-add-extra">Voeg extra bestanden toe aan je inzending.</h1>{% endif %}
                        <section>
                            <h1 class="current-exam-title">{{ DETAILS.assignment.get_title() }}</h1>
                            {% set description = DETAILS.assignment.get_description() %}
                            <div class="current-exam-info{% if not description %} mod-no-description{% endif %}">
                                <ul class="current-exam-info-main">
                                    <li>{{ DETAILS.course.get_title() }} (<span class="course-visual-code">{{ DETAILS.course.get_visual_code() }}</span>)</li>
                                    <li>{{ DETAILS.titular.get_firstname() ~ ' ' ~ DETAILS.titular.get_lastname() }}</li>
                                    {% set start_time = DETAILS.assignment.get_start_time %}
                                    <li><span>Aanvang:</span> <time datetime="{{ start_time|date("c") }}" class="exam-timestamp">{{ start_time|date("d") }}<span
                                                    class="dmy-separator">/</span>{{ start_time|date("m") }}<span class="dmy-separator">/</span>{{ start_time|date("Y") }} &ndash; {{ ' ' ~ start_time|date("H:i") }}</time></li>
                                </ul>
                                {% set end_time = DETAILS.assignment.get_end_time %}
                                <div class="current-exam-info-time"><span>Tijd tot:</span><time datetime="{{ end_time|date("c") }}" class="exam-timestamp mod-strong">{{ end_time|date("d") }}<span
                                                class="dmy-separator-strong">/</span>{{ end_time|date("m") }}<span
                                                class="dmy-separator-strong">/</span>{{ end_time|date("Y") }}
                                        &ndash; {{ ' ' ~ end_time|date("H:i") }}</time></div>
                            </div>
                        </section>
                        <section class="current-exam-info-description">
                            <h2 class="current-exam-main-title mod-assignment">Opgave:</h2>
                            {% if description %}{{ description|raw }}{% endif %}
                            <ul class="current-exam-files-download">
                                {% for ATTACHMENT, ATTACHMENT_URL in DETAILS.attachments %}
                                    <li><a href="{{ ATTACHMENT_URL }}"><i class="fa fa-download" aria-hidden="true"></i>{{ ' ' ~ ATTACHMENT }}</a></li>
                                {% endfor %}
                            </ul>
                        </section>
                        <section class="current-exam-upload-section">
                            <h2 class="current-exam-main-title mod-upload">{% if RETRY_MODE %}Voeg extra bestanden toe aan je inzending:{% else%}Indienen:{% endif %}</h2>
                            <div id="file-upload-container" class="current-exam-upload-area">
                                <!-- This is supposed to be the fallback but it doesn't seem to work -->
                                <div id="file-upload-input" class="file-upload-input" style="display: none">
                                    <div>
                                        <div class="element"><input name="file" type="file"></div>
                                        <div class="form_feedback"></div>
                                    </div>
                                </div>
                                <div class="element">
                                    <div id="file-upload" class="file-upload">
                                        <div class="file-previews files" id="file-previews">
                                            <div id="file-template" class="file-info-wrapper">
                                                <div class="file-info">
                                                    <span class="file-info-icon glyphicon glyphicon-file"></span>
                                                    <div class="file-name-wrap">
                                                        <h3 class="file-name" data-dz-name></h3>
                                                        <strong class="error text-danger" data-dz-errormessage></strong>
                                                    </div>
                                                    <button data-dz-remove class="btn btn-sm btn-default delete">
                                                        <i class="glyphicon glyphicon-trash" aria-hidden="true"></i> <span>{{ 'Delete'|trans({}, appContext) }}</span>
                                                    </button>
                                                </div>
                                                <div>
                                                    <div class="progress mod-file progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100"
                                                         aria-valuenow="0">
                                                        <div class="progress-bar progress-bar-success" style="width: 0%;" data-dz-uploadprogress></div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="panel-body mod-file-upload dz-clickable">
                                            <i class="upload-area-icon fa fa-upload" aria-hidden="true"></i>
                                            {{ 'DropFileHereMessage'|trans({}, appContext) }}
                                        </div>
                                    </div>
                                </div>
                                <div class="form_feedback">
                                </div>
                            </div>
                            <div class="current-exam-upload-reminder">Let op! Kijk goed na of je niets vergeten bent.</div>
                            <button id="btn-upload" class="btn btn-action mod-upload">Laad bestanden op</button>
                            <script type="text/javascript" src="{{ JQUERY_FILE_UPLOAD_SCRIPT_PATH }}"></script>
                            <script type="text/javascript">
                                $(document).ready(function () {

                                    const uploadUrl = '{{ UPLOAD_URL|raw }}';
                                    const publicationId = {{ DETAILS.publication.id }};

                                    function initDragDrop() {
                                        /* Prevent drag & drop outside of drop zone */
                                        window.addEventListener('dragover', function (e) {
                                            e = e || event;
                                            e.preventDefault();
                                        }, false);
                                        window.addEventListener('drop', function (e) {
                                            e = e || event;
                                            e.preventDefault();
                                        }, false);
                                    }

                                    initDragDrop();

                                    dropzoneCallbacks.chamilo = {};
                                    dropzoneCallbacks.chamilo.application = {};
                                    dropzoneCallbacks.chamilo.application.exam_assignment = exam_assignment = {
                                        isSubmitting: false,

                                        init: function (environment) {
                                            const dropzone = environment.dropzone;

                                            dropzone.options.parallelUploads = 1;

                                            dropzone.on('processing', function () {
                                                $('#btn-upload').prop('disabled', true);
                                                console.log('Processing queue...');
                                                dropzone.options.autoProcessQueue = true;
                                            });

                                            dropzone.on('queuecomplete', function () {
                                                /**
                                                 * The queuecomplete is also called when a file is selected but never accepted (e.g. a movie file).
                                                 * We only want to handle the queue complete when we click the submit button.
                                                 */
                                                if (!exam_assignment.isSubmitting) {
                                                    console.log(dropzone.getQueuedFiles());
                                                    return;
                                                }

                                                dropzone.options.autoProcessQueue = false;

                                                console.log('Trying to redirect...');

                                                // Either a redirect happens or some error took place that still needs correcting.
                                                if (!exam_assignment.redirectAfterSubmit(environment)) {
                                                    $.each(dropzone.files, function (_, file) {
                                                        $(file.previewElement).find('.progress-bar').css('width', '0%');
                                                    });
                                                    $('#btn-upload').prop('disabled', false);
                                                    exam_assignment.isSubmitting = false;
                                                    console.log('Warning: Cannot redirect, still errors present.');
                                                }
                                            });

                                            $('#btn-upload').on('click', function (evt) {
                                                evt.preventDefault();

                                                // Clear any messages on errors (except movie files) and put them back in the queue.
                                                $.each(dropzone.files, function (_, file) {
                                                    if (file.status === Dropzone.ERROR && file.accepted) {
                                                        file.status = Dropzone.QUEUED;
                                                        $(file.previewElement).find('.error.text-danger').text('');
                                                        $(file.previewElement).removeClass('dz-processing').removeClass('dz-error').removeClass('dz-complete');
                                                    }
                                                });

                                                exam_assignment.isSubmitting = true;

                                                /**
                                                 * If you remove an error file or if there is still an unaccepted file, the queuecomplete
                                                 * event is not triggered so we need to redirect manually if the queue is complete. This
                                                 * is only necessary when the button is clicked again and there are no files being processed anymore.
                                                 * e.g. two file were chosen, one file was successful and one had an error and has been removed.
                                                 */

                                                if (dropzone.getQueuedFiles().length === 0) {
                                                    exam_assignment.redirectAfterSubmit(environment);
                                                } else {
                                                    dropzone.processQueue();
                                                }
                                            });
                                        },

                                        acceptFile: function (environment, file, done) {
                                            if (file.type.indexOf('video/') !== -1) {
                                                done('Video bestanden zijn niet toegelaten. Dit bestand zal niet mee worden opgeladen bij het indienen van de opdracht.');
                                            } else {
                                                done();
                                                //$('#btn-upload').prop('disabled', false);
                                            }
                                        },

                                        removeFile: function (environment) {
                                            /*if (environment.dropzone.getQueuedFiles().length === 0) {
                                                $('#btn-upload').prop('disabled', true);
                                            }*/
                                        },

                                        processRequest: function (environment, file, xhrObject, formData) {
                                            formData.append('publicationId', publicationId);
                                        },

                                        getServerResponse: function (environment, file) {
                                            if (file.status === Dropzone.SUCCESS) {
                                                $(file.previewElement).find('.btn.delete').remove();
                                                $(file.previewElement).find('.file-name-wrap')
                                                    .after('<div class="file-uploaded">' + 'Ontvangen' +'</div>');
                                            }
                                        },

                                        redirectAfterSubmit: function (environment) {
                                            let canRedirect = true;

                                            /**
                                             * Files that are never accepted like move files come in the error state but can be ignored for the redirect because
                                             * they will never be uploaded and should not intervene with the upload of other files
                                             */
                                            $.each(environment.dropzone.files, function (_, file) {
                                                if (file.accepted && file.status === Dropzone.ERROR) {
                                                    canRedirect = false;
                                                }
                                            });

                                            if (canRedirect) {
                                                window.location.href = '{{ CURRENT_URL|raw }}';
                                            }

                                            return canRedirect;
                                        }
                                    };

                                    $('#file-upload-container').fileUpload({
                                        autoProcessQueue: false,
                                        uploadUrl: uploadUrl,
                                        initCallbackFunction: 'chamilo.application.exam_assignment.init',
                                        acceptCallbackFunction: 'chamilo.application.exam_assignment.acceptFile',
                                        removedfileCallbackFunction: 'chamilo.application.exam_assignment.removeFile',
                                        sendingCallbackFunction: 'chamilo.application.exam_assignment.processRequest',
                                        successCallbackFunction: 'chamilo.application.exam_assignment.getServerResponse'
                                    });
                                });
                            </script>
                        </section>
                    {% endif %}
                </div>
            </div>
            {% endif %}
        </main>
    {% endblock %}
