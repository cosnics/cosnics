{% extends "Chamilo\\Application\\ExamAssignment:Base.html.twig" %}
    {% set appContext = 'Chamilo\\Application\\ExamAssignment' %}
    {% block main %}
        <style>
            .not-allowed-alert {
                margin-top: 5em;
            }

            .error-strong {
                color: #406e8e;
            }
        </style>
        <main>
            <div class="container">
                {% if not ALLOWED_TO_VIEW_ASSIGNMENT %}
                    <div class="main-content">
                        <div class="alert alert-danger not-allowed-alert">
                            {% if ASSIGNMENT_VIEW_STATUS == constant('Chamilo\\Application\\ExamAssignment\\Domain\\AssignmentViewStatus::STATUS_WRONG_CODE')  %}
                                Je hebt een <strong class="error-strong">foutieve code</strong> ingevuld. Ga naar de vorige pagina en probeer opnieuw!
                            {% elseif ASSIGNMENT_VIEW_STATUS == constant('Chamilo\\Application\\ExamAssignment\\Domain\\AssignmentViewStatus::STATUS_NO_RIGHTS') %}
                                Je beschikt niet over de juiste rechten om deze opdracht te bekijken. Gelieve contact op te nemen met de titularis van deze opdracht.
                            {% elseif ASSIGNMENT_VIEW_STATUS == constant('Chamilo\\Application\\ExamAssignment\\Domain\\AssignmentViewStatus::STATUS_ASSIGNMENT_NOT_IN_PROGRESS') %}
                                De opdracht is momenteel niet actief. De opdracht is actief vanaf
                                <strong class="error-strong">{{ DETAILS.assignment.get_start_time|date("d/m/Y - H:i") }}</strong> en loopt tot
                                <strong class="error-strong">{{ DETAILS.assignment.get_end_time|date("d/m/Y - H:i") }}</strong>.
                            {% elseif ASSIGNMENT_VIEW_STATUS == constant('Chamilo\\Application\\ExamAssignment\\Domain\\AssignmentViewStatus::STATUS_CORRUPT_DATA') %}
                                Er is een onbekende fout opgetreden. Probeer het later opnieuw. Indien deze fout zich blijft voor doen neem je contact op met de beheerder van het platform.
                            {% endif %}
                        </div>
                    </div>
                {% else %}
                    <div class="main-content mod-current-exam">
                        {% if DETAILS.has_finished %}
                        <div class="alert alert-success">
                            <h4>We hebben je inzending goed ontvangen. We hebben in totaal&nbsp;{{ DETAILS.entries|length }}&nbsp;bestand(en) ontvangen van jou.</h4>
                        </div>
                        <ol style="margin-top: 1em; margin-bottom: 0;">
                            {% for ENTRY in DETAILS.entries %}
                                <li>{{ ENTRY.description }}</li>
                            {% endfor %}
                        </ol>
                        {% endif %}

                        {% if not DETAILS.has_finished and not DETAILS.can_submit %}
                            <div class="alert alert-danger">
                                We hebben van jou geen inzendingen ontvangen. Het is ook niet langer mogelijk om deze opdracht in te dienen omdat de tijd verstreken is.
                            </div>
                        {% endif %}

                        {% if (DETAILS.has_finished or DETAILS.can_sumbit) and DETAILS.assignment.get_automatic_feedback_text() %}
                            <div class="alert alert-info">
                                <h4>Bericht van de docent:</h4>
                                {{ DETAILS.assignment.get_automatic_feedback_text()|raw }}
                            </div>
                        {% endif %}

                        {% if DETAILS.has_finished and DETAILS.can_submit and not RETRY_MODE%}
                            <div class="text-center">
                                <a class="btn btn-primary" href="{{ CURRENT_URL }}&retry=1">Voeg extra bestanden toe aan je inzending</a>
                            </div>
                        {% endif %}

                        {% if RETRY_MODE %}
                            <h1 class="text-center" style="margin: 1em 0;">Voeg extra bestanden toe aan je inzending</h1>
                        {% endif %}

                        {% if DETAILS.can_submit and (not DETAILS.has_finished or RETRY_MODE) %}
                            <h1 class="current-exam-title">{{ DETAILS.assignment.get_title() }}</h1>
                            {% set description = DETAILS.assignment.get_description() %}
                            <div class="current-exam-info{% if not description %} mod-no-description{% endif %}">
                                <ul class="current-exam-info-main">
                                    <li>{{ DETAILS.course.get_title() }} (<span class="course-visual-code">{{ DETAILS.course.get_visual_code() }}</span>)</li>
                                    <li>{{ DETAILS.titular.get_firstname() }}&nbsp;{{ DETAILS.titular.get_lastname() }}</li>
                                    {% set start_time = DETAILS.assignment.get_start_time %}
                                    <li><span>Aanvang:</span> <strong class="exam-timestamp">{{ start_time|date("d") }}<span
                                                    class="dmy-separator">/</span>{{ start_time|date("m") }}<span class="dmy-separator">/</span>{{ start_time|date("Y") }} <i
                                                    class="datetime-separator fa fa-minus"
                                                    aria-hidden="true"></i> {{ start_time|date("H:i") }}</strong></li>
                                </ul>
                                <div class="current-exam-info-time">
                                    <ul class="current-exam-info-time-end">
                                        {% set end_time = DETAILS.assignment.get_end_time %}
                                        <li class="time-item"><span>Tijd tot:</span><strong class="exam-timestamp mod-strong">{{ end_time|date("d") }}<span
                                                        class="dmy-separator-strong">/</span>{{ end_time|date("m") }}<span
                                                        class="dmy-separator-strong">/</span>{{ end_time|date("Y") }}
                                                - {{ end_time|date("H:i") }}</strong></li>
                                    </ul>
                                </div>
                            </div>
                            {% if description %}
                                <div class="current-exam-info-description">
                                    <h2 class="current-exam-info-description-title">{{ 'Description'|trans({}, appContext) }}:</h2>
                                    {{ description|raw }}
                                </div>
                            {% endif %}
                            <div class="current-exam-main">
                                <div class="current-exam-essentials">
                                    <h2 class="current-exam-main-title mod-files">Bestanden:</h2>
                                    <ul class="current-exam-files-download">
                                        {% for ATTACHMENT, ATTACHMENT_URL in DETAILS.attachments %}
                                            <li><a href="{{ ATTACHMENT_URL }}">{{ ATTACHMENT }}</a></li>
                                        {% endfor %}
                                    </ul>
                                </div>
                                <div class="current-exam-upload-section">
                                    <h2 class="current-exam-main-title mod-upload">Indienen:</h2>
                                    <div id="file-upload-container" class="current-exam-upload-area">
                                        <div id="file-upload-input" style="display: none;">
                                            <div class="form-row row ">
                                                <div class="col-xs-12 col-sm-4 col-md-3 col-lg-2 form-label">
                                                    {{ 'FileName'|trans({}, appContext) }}
                                                </div>
                                                <div class="col-xs-12 col-sm-8 col-md-9 col-lg-10 formw">
                                                    <div class="element"><input name="file" type="file"></div>
                                                    <div class="form_feedback"></div>
                                                </div>
                                                <div class="clear">&nbsp;</div>
                                            </div>
                                        </div>
                                        <div class="element">
                                            <div id="file-upload" class="file-upload">
                                                <div class="file-previews files" id="file-previews">
                                                    <div id="file-template" class="file-info-wrapper">
                                                        <div class="file-info">
                                                            <span class="file-info-icon glyphicon glyphicon-file"></span>
                                                            <div class="file-name-wrap" style="display:flex;flex-direction:column;">
                                                                <h3 class="file-name" data-dz-name></h3>
                                                                <strong class="error text-danger" data-dz-errormessage></strong>
                                                            </div>
                                                            <button data-dz-remove class="btn btn-sm btn-default delete">
                                                                <i class="glyphicon glyphicon-trash"></i> <span>{{ 'Delete'|trans({}, appContext) }}</span>
                                                            </button>
                                                        </div>
                                                        <div>
                                                            <div class="progress mod-file progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100"
                                                                 aria-valuenow="0">
                                                                <div class="progress-bar progress-bar-success" style="width: 0%;" data-dz-uploadprogress></div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="panel-body mod-file-upload dz-clickable">
                                                    <span class="upload-area-icon fa fa-upload"></span>
                                                    {{ 'DropFileHereMessage'|trans({}, appContext) }}
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form_feedback">
                                        </div>
                                    </div>
                                    <div class="current-exam-upload-reminder">Let op! Kijk goed na of je niets vergeten bent.</div>
                                    <button id="btn-upload" class="btn btn-action mod-upload">Dien examenopdracht in</button>
                                    <script type="text/javascript" src="{{ JQUERY_FILE_UPLOAD_SCRIPT_PATH }}"></script>
                                    <script type="text/javascript">
                                        $(document).ready(function () {

                                            let uploadUrl = '{{ UPLOAD_URL|raw }}';
                                            let publicationId = {{ DETAILS.publication.id }};

                                            function initDragDrop() {
                                                /* Prevent drag & drop outside of drop zone */
                                                window.addEventListener('dragover', function (e) {
                                                    e = e || event;
                                                    e.preventDefault();
                                                }, false);
                                                window.addEventListener('drop', function (e) {
                                                    e = e || event;
                                                    e.preventDefault();
                                                }, false);
                                            }

                                            initDragDrop();

                                            dropzoneCallbacks.chamilo = {};
                                            dropzoneCallbacks.chamilo.application = {};
                                            dropzoneCallbacks.chamilo.application.exam_assignment = {
                                                isSubmitting: false,
                                                init: function (environment) {
                                                    environment.dropzone.options.parallelUploads = 1;

                                                    environment.dropzone.on('processing', function () {
                                                        $('#btn-upload').prop('disabled', true);
                                                        console.log('processing');
                                                        environment.dropzone.options.autoProcessQueue = true;
                                                    });

                                                    /*environment.dropzone.on('error', function() {
                                                        console.log('dropzone error');
                                                        console.log(arguments);
                                                    });*/

                                                    environment.dropzone.on('queuecomplete', function () {
                                                        /**
                                                         * The queuecomplete is also called when a file is selected but never accepted (e.g. a movie file)
                                                         * We only want to handle the queue complete when we click the submit button
                                                         */
                                                        if(!dropzoneCallbacks.chamilo.application.exam_assignment.isSubmitting) {
                                                            console.log(environment.dropzone.getQueuedFiles());
                                                            return;
                                                        }

                                                        environment.dropzone.options.autoProcessQueue = false;

                                                        if (!dropzoneCallbacks.chamilo.application.exam_assignment.redirectAfterSubmit(environment)) {
                                                            $.each(environment.dropzone.files, function (_, file) {
                                                                $(file.previewElement).find('.progress-bar')[0].style.width = '0%';
                                                            });
                                                            $('#btn-upload').prop('disabled', false);
                                                            dropzoneCallbacks.chamilo.application.exam_assignment.isSubmitting = false;
                                                            console.log('still errors, cannot redirect');
                                                        }
                                                    });

                                                $('#btn-upload').on('click', function (evt) {
                                                    evt.preventDefault();
                                                    $.each(environment.dropzone.files, function(_, file) {
                                                        if (file.status === Dropzone.ERROR && file.accepted) {
                                                            file.status = Dropzone.QUEUED;
                                                            $($(file.previewElement).find('.error.text-danger')[0]).text('');
                                                            $(file.previewElement).removeClass('dz-processing').removeClass('dz-error').removeClass('dz-complete');
                                                        }
                                                    });

                                                    dropzoneCallbacks.chamilo.application.exam_assignment.isSubmitting = true;

                                                    /**
                                                     * If you remove an error file or if there is still an unaccepted file, the queuecomplete
                                                     * event is not triggered so we need to redirect manually if the queue is complete. This
                                                     * is only necessary when the button is clicked again and there are no files being processed anymore.
                                                     * e.g. two file were chosen, one file was successful and one had an error and has been removed.
                                                     */

                                                    if(environment.dropzone.getQueuedFiles().length === 0) {
                                                        dropzoneCallbacks.chamilo.application.exam_assignment.redirectAfterSubmit(environment);
                                                    } else {
                                                        environment.dropzone.processQueue();
                                                    }
                                                })
                                            },
                                            redirectAfterSubmit: function(environment) {
                                                let canRedirect = true;

                                                /**
                                                 * Files that are never accepted like move files come in the error state but can be ignored for the redirect because
                                                 * they will never be uploaded and should not intervene with the upload of other files
                                                 */
                                                $.each(environment.dropzone.files, function(_, file) {
                                                    if(file.accepted && file.status === Dropzone.ERROR) {
                                                        canRedirect = false;
                                                        return false;
                                                    }
                                                });

                                                if (canRedirect) {
                                                    console.log('redirect');
                                                    window.location.href = '{{ CURRENT_URL|raw }}';
                                                    return true;
                                                }

                                                return false;
                                            },
                                            getServerResponse: function (environment, file, serverResponse) {
                                                console.log({environment, file, serverResponse});
                                                if (file.status === Dropzone.SUCCESS) {
                                                    $(file.previewElement).find('.btn.delete').remove();
                                                    $(file.previewElement).find('.file-name-wrap')
                                                        .after('<div class="file-uploaded">' + 'Opgeladen' +'</div>');
                                                } else {
                                                    console.log('STATUS is' + file.status);
                                                }
                                            },
                                            processRequest: function (environment, file, xhrObject, formData) {
                                                formData.append('publicationId', publicationId);
                                            },
                                            acceptFile: function(environment, file, done) {
                                                if(file.type.indexOf('video/') !== -1) {
                                                    done('Video bestanden zijn niet toegelaten. Dit bestand zal niet mee worden opgeladen bij het indienen van de opdracht.');
                                                }
                                                else { done(); }
                                            }
                                        };

                                            $('#file-upload-container').fileUpload({
                                                autoProcessQueue: false,
                                                uploadUrl: uploadUrl,
                                                successCallbackFunction: 'chamilo.application.exam_assignment.getServerResponse',
                                                sendingCallbackFunction: 'chamilo.application.exam_assignment.processRequest',
                                                initCallbackFunction: 'chamilo.application.exam_assignment.init',
                                                acceptCallbackFunction: 'chamilo.application.exam_assignment.acceptFile'
                                            });

                                            // var uploader = Dropzone.forElement('#file-upload');
                                            // //uploader.options.params = { publicationId: publicationId };
                                            //
                                            // uploader.on('processing', function() {
                                            //     uploader.options.autoProcessQueue = true;
                                            // });
                                            //
                                            // uploader.on('queuecomplete', function() {
                                            //     uploader.options.autoProcessQueue = false;
                                            //     console.log('complete');
                                            // });

                                            // function handleUpload() {
                                            //     uploader.processQueue();
                                            // }
                                            //
                                            // $('#btn-upload').on('click', handleUpload);
                                        });
                                    </script>
                                </div>
                            </div>
                        {% endif %}
                    </div>
                {% endif %}

                {% if not RETRY_MODE and (DETAILS.has_finished or not DETAILS.can_submit or not ALLOWED_TO_VIEW_ASSIGNMENT) %}
                    <div class="text-center">
                        <a class="btn btn-success" href="{{ LIST_URL }}">Keer terug naar de lijst van opdrachten</a>
                    </div>
                {% endif %}
            </div>
        </main>
    {% endblock %}
