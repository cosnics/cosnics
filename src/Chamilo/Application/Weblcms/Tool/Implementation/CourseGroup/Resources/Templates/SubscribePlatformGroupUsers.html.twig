{{ HEADER|raw }}

{% set appContext = 'Chamilo\\Application\\Weblcms\\Tool\\Implementation\\CourseGroup' %}

{% form_theme FORM 'bootstrap_3_horizontal_layout.html.twig' %}

{{ getJavascript('Plugin/VueJS/vue.js', 'Chamilo\\Libraries') }}
{{ getJavascript('Plugin/VueJS/polyfill.min.js', 'Chamilo\\Libraries') }}
{{ getJavascript('Plugin/VueJS/BootstrapVue/bootstrap-vue.js', 'Chamilo\\Libraries') }}
{{ getJavascript('Plugin/VueJS/VueResource/vue-resource.min.js', 'Chamilo\\Libraries') }}

{{ getCss('Plugin/VueJS/BootstrapVue/bootstrap-vue.min.css', 'Chamilo\\Configuration') }}
{{ getCss('../../Javascript/Plugin/Fancytree/dist/skin-awesome/ui.fancytree.min.css', 'Chamilo\\Libraries') }}

{% include 'Chamilo\\Core\\Group:PlatformGroupSelector.html.twig' %}

<div class="subscribe-platform-group-users">
    {{ form_start(FORM) }}

    <div class="form-group">
        <label for="create_platform_group_team_name" class="col-sm-2 control-label required">{{ 'PlatformGroups'|trans({}, appContext) }}</label>
        <div class="platform-group-selector col-sm-10">
            <platform-group-selector
                    :platform-groups="platformGroups"
                    :get-group-children-url="getGroupChildrenUrl"
                    v-on:selection-changed="selectionChanged"
            ></platform-group-selector>
        </div>
    </div>

    {{ form_row(FORM.platform_groups, {'attr': {':value': 'selectedPlatformGroupIds'}}) }}


    <div class="form-group">
        <div class="col-sm-10 col-sm-push-2">
            <button type="submit" class="btn btn-primary" :disabled="!canCreate()">
                {{ 'SubscribePlatformGroupUsers'|trans({}, appContext) }}
            </button>
        </div>
    </div>

    {{ form_end(FORM) }}
</div>

<script type="text/javascript">
    (function () {
        $(document).ready(function () {

            var platformGroups = {{ PLATFORM_GROUPS_JSON|raw }};
            var getGroupChildrenUrl = '{{ GET_GROUP_CHILDREN_URL|raw }}';

            new Vue({
                el: '.subscribe-platform-group-users',
                data: {
                    platformGroups: platformGroups,
                    getGroupChildrenUrl: getGroupChildrenUrl,
                    selectedGroups: []
                },
                methods: {
                    selectionChanged: function(selectedGroups) {
                        this.selectedGroups = selectedGroups;
                    },
                    canCreate: function () {
                        return this.selectedGroups.length > 0;
                    },
                },
                computed: {
                    selectedPlatformGroupIds: function() {
                        var platformGroupIds = [];
                        this.selectedGroups.forEach(function(group) {
                            platformGroupIds.push(group.id);
                        });

                        return JSON.stringify(platformGroupIds);
                    }
                }
            });

        });
    })();
</script>

{{ FOOTER|raw }}
