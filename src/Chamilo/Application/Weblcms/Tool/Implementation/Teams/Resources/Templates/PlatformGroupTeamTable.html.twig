{% set appContext = 'Chamilo\\Application\\Weblcms\\Tool\\Implementation\\Teams' %}

{{ getJavascript('Plugin/VueJS/vue.js', 'Chamilo\\Libraries') }}
{{ getJavascript('Plugin/VueJS/polyfill.min.js', 'Chamilo\\Libraries') }}
{{ getJavascript('Plugin/VueJS/BootstrapVue/bootstrap-vue.js', 'Chamilo\\Libraries') }}
{{ getJavascript('Plugin/VueJS/VueResource/vue-resource.min.js', 'Chamilo\\Libraries') }}

{{ getCss('Plugin/VueJS/BootstrapVue/bootstrap-vue.min.css', 'Chamilo\\Configuration') }}

<style>
    .platform-group-table {
        margin-top: 30px;
    }

    .platform-group-table tbody tr td {
        vertical-align: middle;
    }

    .platform-group-table .actions-column {
        text-align: center;
        width: 20px;
        white-space: nowrap;
    }
</style>

<div class="platform-group-team-browser">

    {% if IS_TEACHER %}
        <a href="{{ CREATE_PLATFORM_GROUP_TEAM_URL }}" class="btn btn-default">{{ 'CreatePlatformGroupTeam'|trans({}, appContext) }}</a>
    {% endif %}

    <b-table class="platform-group-table" striped bordered :items="platformGroups" :fields="fields" :filter="filterText"
             show-empty empty-text="{{ 'NoSearchResults'|trans({}, 'Chamilo\\Libraries') }}"
             empty-filtered-text="{{ 'NoSearchResults'|trans({}, 'Chamilo\\Libraries') }}"
    >
        <template slot="name" slot-scope="data">
            <a :href="visitTeamUrl(data.item)">{{ '{{ data.item.name }}' }}</a>
        </template>
        <template slot="platform_groups" slot-scope="data">
            <select class="form-control input-sm" name="platform_groups">
                <option v-for="platformGroup in data.item.groups">
                    {{ '{{ platformGroup.name }}' }} ({{ '{{ platformGroup.code }}' }})
                </option>
            </select>
        </template>
        <template slot="actions" slot-scope="data">

            <a :href="visitTeamUrl(data.item)" type="button" class="btn btn-default btn-sm">{{ 'VisitTeam'|trans({}, appContext) }}</a>

            {% if IS_TEACHER %}
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-default dropdown-toggle btn-sm" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        {{ 'Synchronize'|trans({}, appContext) }}
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu dropdown-menu-right">
                        <li><a :href="addUsersUrl(data.item)">{{ 'AddUsersNotInTeam'|trans({}, appContext) }}</a></li>
                        <li><a :href="removeUsersUrl(data.item)">{{ 'RemoveUsersNotInGroups'|trans({}, appContext) }}</a></li>
                        <li class="divider"></li>
                        <li><a :href="editTeamUrl(data.item)">{{ 'EditPlatformGroupTeam'|trans({}, appContext) }}</a></li>
                    </ul>
                </div>
            {% endif %}

        </template>
    </b-table>
</div>

<script type="text/javascript">
    (function () {

        var fields = {
            'name': {
                'label': '{{ 'PlatformGroupTeamName'|trans({}, appContext) }}',
                'sortable': true
            },
            'platform_groups': {
                'label': '{{ 'PlatformGroups'|trans({}, appContext) }}',
                'sortable': false
            },
            'actions': {
                'label': '',
                'class': 'actions-column'
            }
        };

        var platformGroups = {{ PLATFORM_GROUP_TEAMS_JSON|raw }};
        var visitTeamUrlTemplate = '{{ VISIT_PLATFORM_GROUP_TEAM_URL|raw }}';
        var addUsersUrlTemplate = '{{ SUBSCRIBE_PLATFORM_GROUP_TEAM_USERS_URL|raw }}';
        var removeUsersUrlTemplate = '{{ REMOVE_TEAM_USERS_NOT_IN_GROUPS_URL|raw }}';
        var editTeamUrl = '{{ EDIT_PLATFORM_GROUP_TEAM_URL|raw }}';
        var updateLocalTeamNamesUrl = '{{ UPDATE_LOCAL_TEAM_NAMES_AJAX_URL|raw }}';

        $(window).on('load', function () {
            new Vue({
                el: '.platform-group-team-browser',
                data: {
                    filterText: null,
                    platformGroups: platformGroups,
                    fields: fields,
                    visitTeamUrlTemplate: visitTeamUrlTemplate,
                    addUsersUrlTemplate: addUsersUrlTemplate,
                    removeUsersUrlTemplate: removeUsersUrlTemplate,
                    editTeamUrlTemplate: editTeamUrl,
                    updateLocalTeamNamesUrl: updateLocalTeamNamesUrl
                },
                methods: {
                    visitTeamUrl: function(team) {
                        return this.addTeamToUrl(this.visitTeamUrlTemplate, team);
                    },
                    addUsersUrl: function(team) {
                        return this.addTeamToUrl(this.addUsersUrlTemplate, team);
                    },
                    removeUsersUrl: function(team) {
                        return this.addTeamToUrl(this.removeUsersUrlTemplate, team);
                    },
                    editTeamUrl: function(team) {
                        return this.addTeamToUrl(this.editTeamUrlTemplate, team);
                    },
                    addTeamToUrl: function(urlTemplate, team) {
                        return urlTemplate.replace('__PLATFORM_GROUP_TEAM_ID__', team.id);
                    }
                },
                mounted: function() {
                    var vueInstance = this;

                    var ids = [];
                    this.platformGroups.forEach(function(platformGroupTeam) {
                        ids.push(platformGroupTeam.id);
                    });

                    var formData = new FormData();
                    formData.append('PlatformGroupTeamIds', JSON.stringify(ids));

                    vueInstance.$http.post(vueInstance.updateLocalTeamNamesUrl, formData).then(function (response) {
                        if(response.body)
                        {
                            vueInstance.platformGroups.forEach(function(platformGroupTeam) {
                                if(response.body[platformGroupTeam.id])
                                {
                                    platformGroupTeam.name = response.body[platformGroupTeam.id];
                                }
                            });

                            vueInstance.$forceUpdate();

                        }
                    });

                }
            });
        });
    })();
</script>
