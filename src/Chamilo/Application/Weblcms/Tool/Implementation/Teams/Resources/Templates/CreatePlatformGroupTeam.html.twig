{{ HEADER|raw }}

{% set appContext = 'Chamilo\\Application\\Weblcms\\Tool\\Implementation\\Teams' %}
{% form_theme FORM 'bootstrap_3_horizontal_layout.html.twig' %}

{{ getJavascript('Plugin/VueJS/vue.js', 'Chamilo\\Libraries') }}
{{ getJavascript('Plugin/VueJS/polyfill.min.js', 'Chamilo\\Libraries') }}
{{ getJavascript('Plugin/VueJS/BootstrapVue/bootstrap-vue.js', 'Chamilo\\Libraries') }}
{{ getJavascript('Plugin/VueJS/VueResource/vue-resource.min.js', 'Chamilo\\Libraries') }}

{{ getCss('Plugin/VueJS/BootstrapVue/bootstrap-vue.min.css', 'Chamilo\\Configuration') }}
{{ getCss('../../Javascript/Plugin/Fancytree/dist/skin-awesome/ui.fancytree.min.css', 'Chamilo\\Libraries') }}

<style>
    .platform-group-selector {
        padding-top: 7px;
    }

    .selected-parent-groups {
        margin-bottom: 10px;
    }

    .group-title {
        margin-left: 10px;
    }

    table.fancytree-container tbody tr td,
    table.fancytree-container thead tr th {
        padding: 10px 17px;
    }

    .fancytree-icon,
    .fancytree-checkbox {
        font-size: 15px;
    }

    .selected-platform-groups {
        margin-left: -5px;
        margin-top: 20px;
    }

    .selected-platform-group {
        margin: 0 5px;
        padding: 6px;
        background-color: #17a2b8;
        border-radius: 4px;
        color: white;
    }

    .deselect-node {
        margin-left: 10px;
        cursor: pointer;
    }

    .fancytree-clickable {
        cursor: pointer;
    }

</style>

<div class="platform-group-team-creator">
    {{ form_start(FORM) }}

    <div class="form-group">
        <label for="create_platform_group_team_name" class="col-sm-2 control-label required">{{ 'PlatformGroups'|trans({}, appContext) }}</label>
        <div class="platform-group-selector col-sm-10">
            <table id="platform-group-tree" class="table table-striped fancytree-colorize-selected">
                <colgroup>
                    <col width="30px"></col>
                    <col width="*"></col>
                    <col width="*"></col>
                </colgroup>
                <thead>
                <tr>
                    <th></th>
                    <th>{{ 'Name'|trans({}, 'Chamilo\\Core\\Group') }}</th>
                    <th>{{ 'Code'|trans({}, 'Chamilo\\Core\\Group') }}</th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <td></td>
                    <td class="fancytree-clickable"></td>
                    <td></td>
                </tr>
                </tbody>
            </table>

            <div class="selected-platform-groups">
                <span class="selected-platform-group" v-for="selectedTreeNode in selectedTreeNodes">
                    {{ '{{ selectedTreeNode.data.selectedLabel }}' }} <span @click="deselectNode(selectedTreeNode)" class="fa fa-times deselect-node"></span>
                </span>
            </div>
        </div>
    </div>

    {{ form_row(FORM.name, {'attr': {"v-model": 'teamName'}}) }}
    {{ form_row(FORM.platform_groups, {'attr': {':value': 'selectedPlatformGroupIds'}}) }}


    <div class="form-group">
        <div class="col-sm-10 col-sm-push-2">
            <button type="submit" class="btn btn-primary" :disabled="!canCreate()">{{ 'CreatePlatformGroupTeam'|trans({}, appContext) }}</button>
        </div>
    </div>

    {{ form_end(FORM) }}
</div>

<script type="text/javascript">
    (function () {
        $(document).ready(function () {

            var platformGroups = {{ PLATFORM_GROUPS_JSON|raw }};
            var getGroupChildrenUrl = '{{ GET_GROUP_CHILDREN_URL|raw }}';
            var courseMetadata = '{{ TEAM_NAME_COURSE_METADATA }}';

            new Vue({
                el: '.platform-group-team-creator',
                data: {
                    platformGroups: platformGroups,
                    selectedTreeNodes: [],
                    teamName: ''
                },
                methods: {
                    deselectNode: function (selectedTreeNode) {
                        selectedTreeNode.setSelected(false);
                    },
                    canCreate: function () {
                        if (this.selectedTreeNodes.length === 0) {
                            return false;
                        }

                        return this.teamName.length > 0;
                    }
                },
                computed: {
                    selectedPlatformGroupIds: function() {
                        var platformGroupIds = [];
                        this.selectedTreeNodes.forEach(function(treeNode) {
                            platformGroupIds.push(treeNode.key);
                        });

                        return JSON.stringify(platformGroupIds);
                    }
                },
                mounted: function () {
                    var vueInstance = this;

                    var convertData = function (groups) {
                        var treeData = [];

                        groups.forEach(function (group) {
                            treeData.push({
                                title: group.name,
                                key: group.id,
                                folder: true,
                                lazy: group.has_children,
                                code: group.code,
                                selectedLabel: group.name + ' (' + group.code + ') '
                            });
                        });
                        return treeData;
                    };

                    $('#platform-group-tree').fancytree({
                        source: function (event, data) {
                            return vueInstance.platformGroups;
                        },
                        lazyLoad: function (event, data) {
                            data.result = {
                                url: getGroupChildrenUrl,
                                data: {'groupId': data.node.key},
                                cache: false,
                                method: 'POST'
                            };
                        },
                        postProcess: function (event, data) {
                            data.result = convertData(data.response);
                        },
                        checkbox: true,
                        selectMode: 2,
                        glyph: {
                            preset: 'awesome4',
                            map: {}
                        },
                        extensions: ['glyph', 'table'],
                        table: {
                            checkboxColumnIdx: 0,
                            nodeColumnIdx: 1,
                            indentation: 30
                        },
                        renderColumns: function (event, data) {
                            var node = data.node;
                            var $tdList = $(node.tr).find(">td");

                            $tdList.eq(2).text(node.data.code);
                        },
                        select: function (event, data) {
                            vueInstance.selectedTreeNodes = data.tree.getSelectedNodes();

                            if (vueInstance.selectedTreeNodes.length === 1) {
                                vueInstance.teamName = vueInstance.selectedTreeNodes[0].title + ' - ' + courseMetadata
                            }

                            if (vueInstance.selectedTreeNodes.length === 0) {
                                vueInstance.teamName = '';
                            }
                        },
                        clickFolderMode: 2,
                        icon: false
                    });


                }
            });

        });
    })();
</script>

{{ FOOTER|raw }}