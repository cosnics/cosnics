<?php
namespace Chamilo\Application\Weblcms\Tool\Implementation\Assessment\Table;

use Chamilo\Application\Weblcms\Storage\DataClass\ContentObjectPublication;
use Chamilo\Application\Weblcms\Tool\Manager;
use Chamilo\Core\Repository\ContentObject\Hotpotatoes\Storage\DataClass\Hotpotatoes;
use Chamilo\Core\Repository\Storage\DataClass\ContentObject;
use Chamilo\Libraries\Format\Table\Column\TableColumn;
use Chamilo\Libraries\Format\Table\FormAction\TableActions;
use Chamilo\Libraries\Format\Table\TableResultPosition;

/**
 * @package Chamilo\Application\Weblcms\Tool\Implementation\Assessment\Table
 * @author  Hans De Bisschop <hans.de.bisschop@ehb.be>
 */
class ObjectPublicationTableRenderer extends \Chamilo\Application\Weblcms\Table\ObjectPublicationTableRenderer
{
    public function getTableActions(): TableActions
    {
        $tableActions = parent::getTableActions();
        $tableActions->setNamespace(__NAMESPACE__);

        return $tableActions;
    }

    protected function initializeColumns(): void
    {
        parent::initializeColumns();

        $this->addColumn(
            $this->getDataClassPropertyTableColumnFactory()->getColumn(
                ContentObject::class, ContentObject::PROPERTY_TYPE
            )
        );
    }

    protected function renderCell(TableColumn $column, TableResultPosition $resultPosition, $publication): string
    {
        switch ($column->get_name())
        {
            case ContentObject::PROPERTY_TYPE :
            {
                $type = $this->getTranslator()->trans('TypeName', [], $publication[ContentObject::PROPERTY_TYPE]);

                if ($publication[ContentObjectPublication::PROPERTY_HIDDEN])
                {
                    return '<span style="color: gray">' . $type . '</span>';
                }
                else
                {
                    return $type;
                }
            }
            case ContentObject::PROPERTY_TITLE :
            {
                if ($publication[ContentObject::PROPERTY_TYPE] == Hotpotatoes::class)
                {
                    $details_url = $this->getUrlGenerator()->fromRequest(
                        [
                            Manager::PARAM_PUBLICATION_ID => $publication[ContentObjectPublication::PROPERTY_ID],
                            Manager::PARAM_ACTION => Manager::ACTION_DISPLAY_COMPLEX_CONTENT_OBJECT
                        ]
                    );

                    return '<a href="' . $details_url . '">' . $publication[ContentObject::PROPERTY_TITLE] . '</a>';
                }
            }
        }

        return parent::renderCell($column, $resultPosition, $publication); // TODO: Change the autogenerated stub
    }

}