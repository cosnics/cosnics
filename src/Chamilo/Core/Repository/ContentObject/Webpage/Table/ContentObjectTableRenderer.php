<?php
namespace Chamilo\Core\Repository\ContentObject\Webpage\Table;

use Chamilo\Core\Repository\ContentObject\Webpage\Storage\DataClass\Webpage;
use Chamilo\Core\Repository\Service\ContentObjectActionRenderer;
use Chamilo\Core\Repository\Workspace\Service\RightsService;
use Chamilo\Core\Repository\Workspace\Storage\DataClass\Workspace;
use Chamilo\Core\User\Service\UserService;
use Chamilo\Core\User\Storage\DataClass\User;
use Chamilo\Libraries\Architecture\Application\Routing\UrlGenerator;
use Chamilo\Libraries\File\FilesystemTools;
use Chamilo\Libraries\Format\Table\Column\DataClassPropertyTableColumnFactory;
use Chamilo\Libraries\Format\Table\Column\TableColumn;
use Chamilo\Libraries\Format\Table\ListHtmlTableRenderer;
use Chamilo\Libraries\Format\Table\Pager;
use Chamilo\Libraries\Format\Table\TableResultPosition;
use Chamilo\Libraries\Utilities\DatetimeUtilities;
use Chamilo\Libraries\Utilities\StringUtilities;
use Symfony\Component\Translation\Translator;

/**
 * @package Chamilo\Core\Repository\ContentObject\Webpage\Tables
 * @author  Hans De Bisschop <hans.de.bisschop@ehb.be>
 */
class ContentObjectTableRenderer extends \Chamilo\Core\Repository\Table\ContentObjectTableRenderer
{
    protected FilesystemTools $filesystemTools;

    public function __construct(
        Workspace $workspace, User $user, RightsService $rightsService, DatetimeUtilities $datetimeUtilities,
        ContentObjectActionRenderer $contentObjectActionRenderer, StringUtilities $stringUtilities,
        UserService $userService, Translator $translator, UrlGenerator $urlGenerator,
        ListHtmlTableRenderer $htmlTableRenderer, Pager $pager,
        DataClassPropertyTableColumnFactory $dataClassPropertyTableColumnFactory, FilesystemTools $filesystemTools
    )
    {
        $this->filesystemTools = $filesystemTools;

        parent::__construct(
            $workspace, $user, $rightsService, $datetimeUtilities, $contentObjectActionRenderer, $stringUtilities,
            $userService, $translator, $urlGenerator, $htmlTableRenderer, $pager, $dataClassPropertyTableColumnFactory
        );
    }

    public function getFilesystemTools(): FilesystemTools
    {
        return $this->filesystemTools;
    }

    protected function initializeColumns(): void
    {
        $this->addColumn(
            $this->getDataClassPropertyTableColumnFactory()->getColumn(Webpage::class, Webpage::PROPERTY_EXTENSION)
        );
        $this->addColumn(
            $this->getDataClassPropertyTableColumnFactory()->getColumn(Webpage::class, Webpage::PROPERTY_FILESIZE)
        );

        parent::initializeColumns();
    }

    /**
     * @param \Chamilo\Libraries\Format\Table\Column\TableColumn $column
     * @param \Chamilo\Libraries\Format\Table\TableResultPosition $resultPosition
     * @param \Chamilo\Core\Repository\ContentObject\Webpage\Storage\DataClass\Webpage $contentObject
     *
     * @return string
     * @throws \Exception
     */
    protected function renderCell(TableColumn $column, TableResultPosition $resultPosition, $contentObject): string
    {
        if ($column->get_name() == Webpage::PROPERTY_FILESIZE)
        {
            return $this->getFilesystemTools()->formatFileSize((int) $contentObject->get_filesize());
        }

        return parent::renderCell($column, $resultPosition, $contentObject); // TODO: Change the autogenerated stub
    }

}