<?php
namespace Chamilo\Core\Repository\ContentObject\File\Table;

use Chamilo\Core\Repository\ContentObject\File\Storage\DataClass\File;
use Chamilo\Libraries\File\Filesystem;
use Chamilo\Libraries\Format\Table\Column\TableColumn;
use Chamilo\Libraries\Format\Table\TableResultPosition;

/**
 * @package Chamilo\Core\Repository\ContentObject\Webpage\Tables
 * @author  Hans De Bisschop <hans.de.bisschop@ehb.be>
 */
class ContentObjectTableRenderer extends \Chamilo\Core\Repository\Table\ContentObjectTableRenderer
{
    protected function initializeColumns(): void
    {
        $this->addColumn(
            $this->getDataClassPropertyTableColumnFactory()->getColumn(File::class, File::PROPERTY_EXTENSION)
        );
        $this->addColumn(
            $this->getDataClassPropertyTableColumnFactory()->getColumn(File::class, File::PROPERTY_FILESIZE)
        );

        parent::initializeColumns();
    }

    /**
     * @param \Chamilo\Libraries\Format\Table\Column\TableColumn $column
     * @param \Chamilo\Libraries\Format\Table\TableResultPosition $resultPosition
     * @param \Chamilo\Core\Repository\ContentObject\File\Storage\DataClass\File $contentObject
     *
     * @return string
     * @throws \Exception
     */
    protected function renderCell(TableColumn $column, TableResultPosition $resultPosition, $contentObject): string
    {
        if ($column->get_name() == File::PROPERTY_FILESIZE)
        {
            return Filesystem::format_file_size($contentObject->get_filesize());
        }

        return parent::renderCell($column, $resultPosition, $contentObject); // TODO: Change the autogenerated stub
    }

}