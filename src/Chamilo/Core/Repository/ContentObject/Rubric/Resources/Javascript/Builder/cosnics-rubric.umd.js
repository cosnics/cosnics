(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("vue-swatches"), require("vue"));
	else if(typeof define === 'function' && define.amd)
		define(["vue-swatches", ], factory);
	else if(typeof exports === 'object')
		exports["cosnics-rubric"] = factory(require("vue-swatches"), require("vue"));
	else
		root["cosnics-rubric"] = factory(root["vue-swatches"], root["Vue"]);
})((typeof self !== 'undefined' ? self : this), function(__WEBPACK_EXTERNAL_MODULE__897__, __WEBPACK_EXTERNAL_MODULE__203__) {
return /******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 461:
/***/ (function(module) {

module.exports = function (Component) {
  Component.options.__i18n = Component.options.__i18n || []
  Component.options.__i18n.push('{"en":{"bold":"bold","bold-strong":"Bold / Strong emphasis","close":"Close","first-item":"A first item","first-paragraph":"A first paragraph","formatting-help":"Formatting help","formatting-intro":"The Markdown techniques below can be used for formatting level descriptions","is":"is","italic":"italicized","italic-emphasis":"Italic / Emphasis","lists":"Lists","numbered-lists":"Numbered lists","paragraphs":"Paragraphs","paragraphs-explain":"Enter two new lines to create a new paragraph.","second-item":"A second item","second-paragraph":"A second paragraph","third-item":"A third item","this-text":"This text"},"fr":{"bold":"gras","bold-strong":"Gras / Grande emphase","close":"Fermer","first-item":"Un premier élément","first-paragraph":"Un premier paragraphe","formatting-help":"Aide de mise en forme","formatting-intro":"On peut utiliser les techniques Markdown ci-dessous pour mettre en forme les descriptions de niveau","is":"est","italic":"italique","italic-emphasis":"Italique / Emphase","lists":"Listes","numbered-lists":"Listes numérotées","paragraphs":"Paragraphes","paragraphs-explain":"Sauter deux lignes pour commencer un nouveau paragraphe.","second-item":"Un deuxième élément","second-paragraph":"Un deuxième paragraphe","third-item":"Un troisième élément","this-text":"Ce texte"},"nl":{"bold":"vetgedrukt","bold-strong":"Vetgedrukt / Sterke nadruk","close":"Sluiten","first-item":"Een eerste item","first-paragraph":"Een eerste paragraaf","formatting-help":"Opmaakhulp","formatting-intro":"De volgende Markdown-technieken kan je gebruiken om niveauomschrijvingen op te maken","is":"is","italic":"schuingedrukt","italic-emphasis":"Schuin / Nadruk","lists":"Lijsten","numbered-lists":"Genummerde lijsten","paragraphs":"Paragrafen","paragraphs-explain":"Voeg twee regels in om een nieuwe paragraaf te maken.","second-item":"Een tweede item","second-paragraph":"Een tweede paragraaf","third-item":"Een derde item","this-text":"Deze tekst"}}')
  delete Component.options._Ctor
}


/***/ }),

/***/ 641:
/***/ (function(module) {

module.exports = function (Component) {
  Component.options.__i18n = Component.options.__i18n || []
  Component.options.__i18n.push('{"en":{"enter-level-description":"Enter level description"},"fr":{"enter-level-description":"Entrer une description de niveau"},"nl":{"enter-level-description":"Voer een niveauomschrijving in"}}')
  delete Component.options._Ctor
}


/***/ }),

/***/ 231:
/***/ (function(module) {

module.exports = function (Component) {
  Component.options.__i18n = Component.options.__i18n || []
  Component.options.__i18n.push('{"en":{"points":"points"},"fr":{"points":"points"},"nl":{"points":"punten"}}')
  delete Component.options._Ctor
}


/***/ }),

/***/ 85:
/***/ (function(module) {

module.exports = function (Component) {
  Component.options.__i18n = Component.options.__i18n || []
  Component.options.__i18n.push('{"en":{"add-level":"Add Level","cancel":"Cancel","default":"Default","default-info":"Optional choice field. The level assigned by default to a criterium.","default-trunc":"Def.","enter-level-description":"Enter level description","level":"Level","points":"Points","range":"Range","remove":"Remove","remove-level":"Remove level {item}"},"fr":{"add-level":"Ajouter un niveau","cancel":"Annuler","default":"Norme","default-info":"Contrôle de choix optionnel. Le niveau attribué par défaut à un critère.","default-trunc":"Nrm.","enter-level-description":"Entrer une description de niveau","level":"Niveau","points":"Points","range":"Range","remove":"Supprimer","remove-level":"Supprimer le niveau {item}"},"nl":{"add-level":"Niveau toevoegen","cancel":"Annuleer","default":"Standaard","default-info":"Optioneel keuzeveld. Het niveau dat standaard wordt toegekend aan een criterium.","default-trunc":"Std.","enter-level-description":"Voer een niveauomschrijving in","level":"Niveau","points":"Punten","range":"Bereik","remove":"Verwijder","remove-level":"Niveau {item} verwijderen"}}')
  delete Component.options._Ctor
}


/***/ }),

/***/ 397:
/***/ (function(module) {

module.exports = function (Component) {
  Component.options.__i18n = Component.options.__i18n || []
  Component.options.__i18n.push('{"en":{"levels":"Levels","weights-per-total":"Weights relative to total score","with-scores":"With scores","without-scores":"Without scores"},"fr":{"levels":"Niveaux","with-scores":"Avec scores","without-scores":"Sans scores"},"nl":{"levels":"Niveaus","weights-per-total":"Gewichten relatief t.o.v. totaalscore","with-scores":"Met scores","without-scores":"Zonder scores"}}')
  delete Component.options._Ctor
}


/***/ }),

/***/ 963:
/***/ (function(module) {

module.exports = function (Component) {
  Component.options.__i18n = Component.options.__i18n || []
  Component.options.__i18n.push('{"en":{"move-up":"Move up","move-down":"Move down","remove":"Remove"},"nl":{"move-up":"Verplaats naar boven","move-down":"Verplaats naar beneden","remove":"Verwijder"}}')
  delete Component.options._Ctor
}


/***/ }),

/***/ 445:
/***/ (function(module) {

module.exports = function (Component) {
  Component.options.__i18n = Component.options.__i18n || []
  Component.options.__i18n.push('{"en":{"change-into-category":"Change into categorie","color-picker":"Color Picker","edit":"Edit","edit-title":"Edit title","list-of-criteria":"List of criteria","open-menu":"Open menu","remove":"Remove","title-category":"Title of category"},"fr":{"change-into-category":"Transformer en catégorie","color-picker":"Pipette à Couleurs","edit":"Modifier","edit-title":"Modifier le titre","list-of-criteria":"Liste des critères","open-menu":"Ouvrer le menu","remove":"Supprimer","title-category":"Titre de la catégorie"},"nl":{"change-into-category":"Wijzig naar categorie","color-picker":"Kleurenkiezer","edit":"Wijzig","edit-title":"Wijzig titel","list-of-criteria":"Lijst met criteria","open-menu":"Open menu","remove":"Verwijder","title-category":"Titel voor categorie"}}')
  delete Component.options._Ctor
}


/***/ }),

/***/ 849:
/***/ (function(module) {

module.exports = function (Component) {
  Component.options.__i18n = Component.options.__i18n || []
  Component.options.__i18n.push('{"en":{"edit":"Edit","edit-title":"Edit title","open-menu":"Open menu","remove":"Remove","title-subsection":"Title of subsection"},"fr":{"edit":"Modifier","edit-title":"Modifier le titre","open-menu":"Ouvrer le menu","remove":"Supprimer","title-subsection":"Titre de la sous-section"},"nl":{"edit":"Wijzig","edit-title":"Wijzig titel","open-menu":"Open menu","remove":"Verwijder","title-subsection":"Titel voor onderverdeling"}}')
  delete Component.options._Ctor
}


/***/ }),

/***/ 266:
/***/ (function(module) {

module.exports = function (Component) {
  Component.options.__i18n = Component.options.__i18n || []
  Component.options.__i18n.push('{"en":{"back-to-rubric":"Back to rubric","cancel-custom-levels":"Cancel custom levels","close":"Close","criterium":"Criterium","formatting":"Formatting","use-custom-levels":"Use custom levels","weight":"Weight"},"fr":{"back-to-rubric":"Retour à la rubrique","cancel-custom-levels":"Annuler niveaux personnalisés","close":"Fermer","criterium":"Critère","formatting":"Mise en forme","use-custom-levels":"Utiliser des niveaux personnalisés","weight":"Poids"},"nl":{"back-to-rubric":"Terug naar rubric","cancel-custom-levels":"Annuleer aangepaste niveaus","close":"Sluiten","criterium":"Criterium","formatting":"Opmaakhulp","use-custom-levels":"Gebruik aangepaste niveaus","weight":"Gewicht"}}')
  delete Component.options._Ctor
}


/***/ }),

/***/ 758:
/***/ (function(module) {

module.exports = function (Component) {
  Component.options.__i18n = Component.options.__i18n || []
  Component.options.__i18n.push('{"en":{"enter-level-description":"Enter level description","fixed-score":"This level has a fixed score for this level. Click to remove."},"fr":{"enter-level-description":"Entrer une description de niveau","fixed-score":"Ce critère a une note fixe pour ce niveau. Cliquez pour l\u0027annuler."},"nl":{"enter-level-description":"Voer een niveauomschrijving in","fixed-score":"Dit criterium heeft een overschreven vaste score voor dit niveau. Klik om dit ongedaan te maken."}}')
  delete Component.options._Ctor
}


/***/ }),

/***/ 652:
/***/ (function(module) {

module.exports = function (Component) {
  Component.options.__i18n = Component.options.__i18n || []
  Component.options.__i18n.push('{"en":{"edit":"Edit","edit-title":"Edit title","details":"Details","open-menu":"Open menu","remove":"Remove","title-criterium":"Title of criterium"},"fr":{"edit":"Modifier","edit-title":"Modifier le titre","details":"Détails","open-menu":"Ouvrer le menu","remove":"Supprimer","title-criterium":"Titre du critère"},"nl":{"edit":"Wijzig","edit-title":"Wijzig titel","details":"Details","open-menu":"Open menu","remove":"Verwijder","title-criterium":"Titel voor criterium"}}')
  delete Component.options._Ctor
}


/***/ }),

/***/ 437:
/***/ (function(module) {

module.exports = function (Component) {
  Component.options.__i18n = Component.options.__i18n || []
  Component.options.__i18n.push('{"en":{"cancel":"Cancel","ok":"OK"},"fr":{"cancel":"Annuler","ok":"D\u0027accord"},"nl":{"cancel":"Annuleer","ok":"OK"}}')
  delete Component.options._Ctor
}


/***/ }),

/***/ 917:
/***/ (function(module) {

module.exports = function (Component) {
  Component.options.__i18n = Component.options.__i18n || []
  Component.options.__i18n.push('{"en":{"add":"Add","add-category":"Add new category","title-new-category":"Title of new category"},"fr":{"add":"Ajouter","add-category":"Ajouter une catégorie","title-new-category":"Titre de la nouvelle catégorie"},"nl":{"add":"Voeg Toe","add-category":"Categorie toevoegen","title-new-category":"Titel voor nieuwe categorie"}}')
  delete Component.options._Ctor
}


/***/ }),

/***/ 478:
/***/ (function(module) {

module.exports = function (Component) {
  Component.options.__i18n = Component.options.__i18n || []
  Component.options.__i18n.push('{"en":{"add":"Add","add-subsection":"Add new subsection","title-new-subsection":"Title of new subsection"},"fr":{"add":"Ajouter","add-subsection":"Ajouter une sous-section","title-new-subsection":"Titre de la nouvelle sous-section"},"nl":{"add":"Voeg Toe","add-subsection":"Onderdeel toevoegen","title-new-subsection":"Titel voor nieuwe onderverdeling"}}')
  delete Component.options._Ctor
}


/***/ }),

/***/ 653:
/***/ (function(module) {

module.exports = function (Component) {
  Component.options.__i18n = Component.options.__i18n || []
  Component.options.__i18n.push('{"en":{"add":"Add","add-criterium":"Add new criterium","title-new-criterium":"Title of new criterium"},"fr":{"add":"Ajouter","add-criterium":"Ajouter un critère","title-new-criterium":"Titre du nouveau critère"},"nl":{"add":"Voeg Toe","add-criterium":"Criterium toevoegen","title-new-criterium":"Titel voor nieuw criterium"}}')
  delete Component.options._Ctor
}


/***/ }),

/***/ 867:
/***/ (function(module) {

module.exports = function (Component) {
  Component.options.__i18n = Component.options.__i18n || []
  Component.options.__i18n.push('{"en":{"cancel":"Cancel","Category":"category","Cluster":"subsection","Criterium":"criterium","remove":"Remove","remove-criteria":"Remove criteria","remove-item":"Remove {item}"},"fr":{"cancel":"Annuler","Category":"la catégorie","Cluster":"la sous-section","Criterium":"le critère","remove":"Supprimer","remove-criteria":"Supprimer la liste des critères","remove-item":"Supprimer {item}"},"nl":{"cancel":"Annuleer","Category":"Categorie","Cluster":"Onderverdeling","Criterium":"Criterium","remove":"Verwijder","remove-criteria":"Criteria verwijderen","remove-item":"{item} verwijderen"}}')
  delete Component.options._Ctor
}


/***/ }),

/***/ 173:
/***/ (function(module) {

module.exports = function (Component) {
  Component.options.__i18n = Component.options.__i18n || []
  Component.options.__i18n.push('{"en":{"new-criteria-list":"New list of criteria","no-criteria-yet":"No criteria yet","subsections":"Subsections"},"fr":{"new-criteria-list":"Nouvelle liste de critères","no-criteria-yet":"Pas de critères ajoutés","subsections":"Sous-sections"},"nl":{"new-criteria-list":"Nieuwe lijst met criteria","no-criteria-yet":"Nog geen criteria toegevoegd","subsections":"Onderverdelingen"}}')
  delete Component.options._Ctor
}


/***/ }),

/***/ 236:
/***/ (function(module) {

module.exports = function (Component) {
  Component.options.__i18n = Component.options.__i18n || []
  Component.options.__i18n.push('{"en":{"split-view":"Split View"},"fr":{"split-view":"Vue Partagé"},"nl":{"split-view":"Split View"}}')
  delete Component.options._Ctor
}


/***/ }),

/***/ 331:
/***/ (function(module) {

module.exports = function (Component) {
  Component.options.__i18n = Component.options.__i18n || []
  Component.options.__i18n.push('{"en":{"num-changes":"1 change | {count} changes","all-saved":"All changes saved"},"fr":{"num-changes":"1 modification | {count} modifications","all-saved":"Modifications enregistrées"},"nl":{"num-changes":"1 wijziging | {count} wijzigingen","all-saved":"Wijzigingen opgeslagen"}}')
  delete Component.options._Ctor
}


/***/ }),

/***/ 633:
/***/ (function(module) {

module.exports = function (Component) {
  Component.options.__i18n = Component.options.__i18n || []
  Component.options.__i18n.push('{"en":{"adjusted-score":"Adjusted score","deselect":"Deselect","no-description":"No description","points":"points"},"fr":{"adjusted-score":"Score personnalisé","deselect":"Désélectionner","no-description":"Pas de description","points":"points"},"nl":{"adjusted-score":"Aangepaste score","deselect":"Deselecteer","no-description":"Geen omschrijving","points":"punten"}}')
  delete Component.options._Ctor
}


/***/ }),

/***/ 243:
/***/ (function(module) {

module.exports = function (Component) {
  Component.options.__i18n = Component.options.__i18n || []
  Component.options.__i18n.push('{"en":{"date-time-at":"at","level":"Level","no-level":"No level given","no-score":"No score","score-weight":"Score on grand total with the given weight"},"fr":{"date-time-at":"à","level":"Niveau","no-level":"No level given","no-score":"No score","score-weight":"Score sur le total général avec le poids donné"},"nl":{"date-time-at":"om","level":"Niveau","no-level":"geen niveau opgegeven","no-score":"geen score","score-weight":"Score op eindtotaal met het gegeven gewicht"}}')
  delete Component.options._Ctor
}


/***/ }),

/***/ 501:
/***/ (function(module) {

module.exports = function (Component) {
  Component.options.__i18n = Component.options.__i18n || []
  Component.options.__i18n.push('{"en":{"close":"Close","no-results":"No results to display.","only-feedback":"Show only results with feedback","weight":"Weight"},"fr":{"close":"Fermer","no-results":"Aucun résultat à afficher.","only-feedback":"Seulement des résultats avec feedback","weight":"Poids"},"nl":{"close":"Sluiten","no-results":"Geen resultaten om weer te geven.","only-feedback":"Alleen resultaten met feedback","weight":"Gewicht"}}')
  delete Component.options._Ctor
}


/***/ }),

/***/ 503:
/***/ (function(module) {

module.exports = function (Component) {
  Component.options.__i18n = Component.options.__i18n || []
  Component.options.__i18n.push('{"en":{"builder":"Builder","level-descriptions":"Level descriptions","levels":"Levels","error-conflict":"The server responded with an error due to a conflict. Probably someone else is working on the same rubric at this time. Please refresh the page and try again.","error-forbidden":"The server responded with an error. Possibly your last change(s) haven\u0027t been saved correctly. Please refresh the page and try again.","error-notfound":"The server responded with an error. Possibly your last change(s) haven\u0027t been saved correctly. Please refresh the page and try again.","error-timeout":"The server is taking too long to respond. Possibly your last change(s) haven\u0027t been saved correctly. Please refresh the page and try again.","error-unknown":"An unknown error happened. Possibly your last change(s) haven\u0027t been saved. Please refresh the page and try again.","preview":"Preview","use-scores":"Use Scores","weights-system-msg":"<p>Beste Gebruiker</p><p>We ontwikkelden een nieuwe manier van werken met de gewichten binnen een rubric. Lees onderstaande informatie en maak je keuze.</p><table style=\\"border: 1px solid #cbcbcb;margin-bottom: 16px;\\"><thead style=\\"border-bottom: 1px solid #cbcbcb\\"><tr><th style=\\"padding: .5rem\\">Oude gewichtensysteem</th><th style=\\"padding: .5rem;border-left: 1px solid #cbcbcb;\\">Nieuwe gewichtensysteem</th></tr></thead><tbody><tr><td style=\\"padding: .5rem;vertical-align:top;\\"><p>Je gebruikt een gewicht om een bepaald criterium een andere score te geven dan de standaardscore.</p><br><p>Bijvoorbeeld:</p></td><td style=\\"padding: .5rem;vertical-align:top;border-left: 1px solid #cbcbcb;\\"><p>Je gebruikt een gewicht om aan te duiden hoeveel een bepaald criterium meetelt op het eindtotaal.</p><br><p>Bijvoorbeeld: Criterium A telt mee voor 50% van het eindtotaal.</p></td></tr></tbody></table><p>Het nieuwe systeem werkt niet langer met absolute scores maar met procentuele scores waardoor de berekening van de scores een pak eenvoudiger wordt.</p><img style=\\"width:100%;margin: 0 0 10px;\\" src=\\"{imgurl}\\" alt=\\"Nieuwe gewichtensysteem\\" /><p>Omdat je in deze rubric reeds gebruik maakt van het oude systeem van gewichten kan je ervoor kiezen om het oude systeem te blijven gebruiken of over te stappen op het nieuwe systeem. We raden je aan om gebruik te maken van het nieuwe systeem omdat dit systeem eenvoudiger is in gebruik.</p><p>Belangrijk!<br>- Wanneer je hier kiest voor het nieuwe gewichtensysteem dien je de gewichten opnieuw in te stellen.<br>- Bij het maken van een nieuwe rubric is er geen mogelijkheid om het oude gewichtensysteem te gebruiken en zal je dus automatisch in het nieuwe systeem werken.</p><p>Maak hier je keuze:</p>","move-new":"Move to new weights system","keep-old":"Keep old system","new-weights-system":"Attention! New weights system!"},"fr":{"builder":"Construire","level-descriptions":"Descriptions de niveau","levels":"Niveaux","preview":"Aperçu","use-scores":"Utiliser les Scores"},"nl":{"builder":"Bouwen","level-descriptions":"Niveauomschrijvingen","levels":"Niveaus","error-conflict":"Serverfout vanwege een conflict. Misschien werkt iemand aan dezelfde rubric op dit ogenblik. Gelieve de pagina te herladen en opnieuw te proberen.","error-forbidden":"Serverfout. Mogelijk werden je wijzigingen niet (correct) opgeslagen. Gelieve de pagina te herladen en opnieuw te proberen.","error-notfound":"Serverfout. Mogelijk werden je wijzigingen niet (correct) opgeslagen. Gelieve de pagina te herladen en opnieuw te proberen.","error-timeout":"De server doet er te lang over om te antwoorden. Mogelijk werden je wijzigingen niet (correct) opgeslagen. Gelieve de pagina te herladen en opnieuw te proberen.","error-unknown":"Je laatste wijzigingen werden mogelijk niet opgeslagen vanwege een onbekende fout. Gelieve de pagina te herladen en opnieuw te proberen.","preview":"Preview","use-scores":"Gebruik Scores","move-new":"Overstappen naar het nieuwe systeem","keep-old":"Bij het oude systeem blijven","new-weights-system":"Opgelet! Nieuw gewichtensysteem!"}}')
  delete Component.options._Ctor
}


/***/ }),

/***/ 362:
/***/ (function(module) {

module.exports = function (Component) {
  Component.options.__i18n = Component.options.__i18n || []
  Component.options.__i18n.push('{"en":{"formatting":"Formatting","weight":"Weight"},"fr":{"formatting":"Mise en forme","weight":"Poids"},"nl":{"formatting":"Opmaakhulp","weight":"Gewicht"}}')
  delete Component.options._Ctor
}


/***/ }),

/***/ 936:
/***/ (function(module) {

module.exports = function (Component) {
  Component.options.__i18n = Component.options.__i18n || []
  Component.options.__i18n.push('{"en":{"expand-all":"Expand all","extra-feedback":"Enter extra feedback","feedback":"Feedback","no-description":"No description","points":"points","rubric":"Rubric","select-level":"Select a level","show-default-descriptions":"Show all level descriptions and feedback","show-default-description":"Show level descriptions and feedback","subsection":"Subsection","total":"Total","weight":"Weight"},"fr":{"expand-all":"Agrandir tout","extra-feedback":"Feed-back supplémentaire","feedback":"Feed-back","no-description":"Pas de description","points":"points","rubric":"Rubrique","select-level":"Selectionnez un niveau","show-default-descriptions":"Afficher toutes descriptions de niveau et feed-back","show-default-description":"Afficher descriptions de niveau et feed-back","subsection":"Sous-section","total":"Total","weight":"Poids"},"nl":{"expand-all":"Alles uitklappen","extra-feedback":"Geef bijkomende feedback","feedback":"Feedback","no-description":"Geen omschrijving","points":"punten","rubric":"Rubric","select-level":"Selecteer een niveau","show-default-descriptions":"Toon alle niveauomschrijvingen en feedback","show-default-description":"Toon niveauomschrijvingen en feedback","subsection":"Onderdeel","total":"Totaal","weight":"Gewicht"}}')
  delete Component.options._Ctor
}


/***/ }),

/***/ 657:
/***/ (function(module) {

module.exports = function (Component) {
  Component.options.__i18n = Component.options.__i18n || []
  Component.options.__i18n.push('{"en":{"select":"Select"},"fr":{"select":"Sélectionnez"},"nl":{"select":"Selecteer"}}')
  delete Component.options._Ctor
}


/***/ }),

/***/ 573:
/***/ (function(module) {

module.exports = function (Component) {
  Component.options.__i18n = Component.options.__i18n || []
  Component.options.__i18n.push('{"en":{"create-from-existing-rubric":"Create a new rubric based on an existing result","extra-feedback":"Extra feedback","no-results-available":"There are no results yet for this rubric.","numbers-display":"Numbers display","rubric":"Rubric","select":"Select","total":"Total","weight":"Weight"},"fr":{"create-from-existing-rubric":"Créer une nouvelle rubrique basée sur un resultat existant","extra-feedback":"Feed-back supplémentaire","no-results-available":"Aucun résultat trouvé pour ce rubric.","numbers-display":"Affichage des chiffres","rubric":"Rubrique","select":"Sélectionnez","total":"Total","weight":"Poids"},"nl":{"create-from-existing-rubric":"Nieuwe rubric aanmaken op basis van een bestaand resultaat","extra-feedback":"Extra feedback","no-results-available":"Er zijn nog geen resultaten voor deze rubric beschikbaar.","numbers-display":"Cijferweergave","rubric":"Rubric","select":"Selecteer","total":"Totaal","weight":"Gewicht"}}')
  delete Component.options._Ctor
}


/***/ }),

/***/ 914:
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// addapted from the document.currentScript polyfill by Adam Miller
// MIT license
// source: https://github.com/amiller-gh/currentScript-polyfill

// added support for Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1620505

(function (root, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
}(typeof self !== 'undefined' ? self : this, function () {
  function getCurrentScript () {
    var descriptor = Object.getOwnPropertyDescriptor(document, 'currentScript')
    // for chrome
    if (!descriptor && 'currentScript' in document && document.currentScript) {
      return document.currentScript
    }

    // for other browsers with native support for currentScript
    if (descriptor && descriptor.get !== getCurrentScript && document.currentScript) {
      return document.currentScript
    }
  
    // IE 8-10 support script readyState
    // IE 11+ & Firefox support stack trace
    try {
      throw new Error();
    }
    catch (err) {
      // Find the second match for the "at" string to get file src url from stack.
      var ieStackRegExp = /.*at [^(]*\((.*):(.+):(.+)\)$/ig,
        ffStackRegExp = /@([^@]*):(\d+):(\d+)\s*$/ig,
        stackDetails = ieStackRegExp.exec(err.stack) || ffStackRegExp.exec(err.stack),
        scriptLocation = (stackDetails && stackDetails[1]) || false,
        line = (stackDetails && stackDetails[2]) || false,
        currentLocation = document.location.href.replace(document.location.hash, ''),
        pageSource,
        inlineScriptSourceRegExp,
        inlineScriptSource,
        scripts = document.getElementsByTagName('script'); // Live NodeList collection
  
      if (scriptLocation === currentLocation) {
        pageSource = document.documentElement.outerHTML;
        inlineScriptSourceRegExp = new RegExp('(?:[^\\n]+?\\n){0,' + (line - 2) + '}[^<]*<script>([\\d\\D]*?)<\\/script>[\\d\\D]*', 'i');
        inlineScriptSource = pageSource.replace(inlineScriptSourceRegExp, '$1').trim();
      }
  
      for (var i = 0; i < scripts.length; i++) {
        // If ready state is interactive, return the script tag
        if (scripts[i].readyState === 'interactive') {
          return scripts[i];
        }
  
        // If src matches, return the script tag
        if (scripts[i].src === scriptLocation) {
          return scripts[i];
        }
  
        // If inline source matches, return the script tag
        if (
          scriptLocation === currentLocation &&
          scripts[i].innerHTML &&
          scripts[i].innerHTML.trim() === inlineScriptSource
        ) {
          return scripts[i];
        }
      }
  
      // If no match, return null
      return null;
    }
  };

  return getCurrentScript
}));


/***/ }),

/***/ 678:
/***/ (function(module) {

/**
 * Returns a function, that, as long as it continues to be invoked, will not
 * be triggered. The function will be called after it stops being called for
 * N milliseconds. If `immediate` is passed, trigger the function on the
 * leading edge, instead of the trailing. The function also has a property 'clear' 
 * that is a function which will clear the timer to prevent previously scheduled executions. 
 *
 * @source underscore.js
 * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/
 * @param {Function} function to wrap
 * @param {Number} timeout in ms (`100`)
 * @param {Boolean} whether to execute at the beginning (`false`)
 * @api public
 */
function debounce(func, wait, immediate){
  var timeout, args, context, timestamp, result;
  if (null == wait) wait = 100;

  function later() {
    var last = Date.now() - timestamp;

    if (last < wait && last >= 0) {
      timeout = setTimeout(later, wait - last);
    } else {
      timeout = null;
      if (!immediate) {
        result = func.apply(context, args);
        context = args = null;
      }
    }
  };

  var debounced = function(){
    context = this;
    args = arguments;
    timestamp = Date.now();
    var callNow = immediate && !timeout;
    if (!timeout) timeout = setTimeout(later, wait);
    if (callNow) {
      result = func.apply(context, args);
      context = args = null;
    }

    return result;
  };

  debounced.clear = function() {
    if (timeout) {
      clearTimeout(timeout);
      timeout = null;
    }
  };
  
  debounced.flush = function() {
    if (timeout) {
      result = func.apply(context, args);
      context = args = null;
      
      clearTimeout(timeout);
      timeout = null;
    }
  };

  return debounced;
};

// Adds compatibility for ES modules
debounce.debounce = debounce;

module.exports = debounce;


/***/ }),

/***/ 248:
/***/ (function(module) {

/*! @license DOMPurify 3.0.8 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.0.8/LICENSE */

(function (global, factory) {
   true ? module.exports = factory() :
  0;
})(this, (function () { 'use strict';

  const {
    entries,
    setPrototypeOf,
    isFrozen,
    getPrototypeOf,
    getOwnPropertyDescriptor
  } = Object;
  let {
    freeze,
    seal,
    create
  } = Object; // eslint-disable-line import/no-mutable-exports
  let {
    apply,
    construct
  } = typeof Reflect !== 'undefined' && Reflect;
  if (!freeze) {
    freeze = function freeze(x) {
      return x;
    };
  }
  if (!seal) {
    seal = function seal(x) {
      return x;
    };
  }
  if (!apply) {
    apply = function apply(fun, thisValue, args) {
      return fun.apply(thisValue, args);
    };
  }
  if (!construct) {
    construct = function construct(Func, args) {
      return new Func(...args);
    };
  }
  const arrayForEach = unapply(Array.prototype.forEach);
  const arrayPop = unapply(Array.prototype.pop);
  const arrayPush = unapply(Array.prototype.push);
  const stringToLowerCase = unapply(String.prototype.toLowerCase);
  const stringToString = unapply(String.prototype.toString);
  const stringMatch = unapply(String.prototype.match);
  const stringReplace = unapply(String.prototype.replace);
  const stringIndexOf = unapply(String.prototype.indexOf);
  const stringTrim = unapply(String.prototype.trim);
  const regExpTest = unapply(RegExp.prototype.test);
  const typeErrorCreate = unconstruct(TypeError);

  /**
   * Creates a new function that calls the given function with a specified thisArg and arguments.
   *
   * @param {Function} func - The function to be wrapped and called.
   * @returns {Function} A new function that calls the given function with a specified thisArg and arguments.
   */
  function unapply(func) {
    return function (thisArg) {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      return apply(func, thisArg, args);
    };
  }

  /**
   * Creates a new function that constructs an instance of the given constructor function with the provided arguments.
   *
   * @param {Function} func - The constructor function to be wrapped and called.
   * @returns {Function} A new function that constructs an instance of the given constructor function with the provided arguments.
   */
  function unconstruct(func) {
    return function () {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      return construct(func, args);
    };
  }

  /**
   * Add properties to a lookup table
   *
   * @param {Object} set - The set to which elements will be added.
   * @param {Array} array - The array containing elements to be added to the set.
   * @param {Function} transformCaseFunc - An optional function to transform the case of each element before adding to the set.
   * @returns {Object} The modified set with added elements.
   */
  function addToSet(set, array) {
    let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;
    if (setPrototypeOf) {
      // Make 'in' and truthy checks like Boolean(set.constructor)
      // independent of any properties defined on Object.prototype.
      // Prevent prototype setters from intercepting set as a this value.
      setPrototypeOf(set, null);
    }
    let l = array.length;
    while (l--) {
      let element = array[l];
      if (typeof element === 'string') {
        const lcElement = transformCaseFunc(element);
        if (lcElement !== element) {
          // Config presets (e.g. tags.js, attrs.js) are immutable.
          if (!isFrozen(array)) {
            array[l] = lcElement;
          }
          element = lcElement;
        }
      }
      set[element] = true;
    }
    return set;
  }

  /**
   * Clean up an array to harden against CSPP
   *
   * @param {Array} array - The array to be cleaned.
   * @returns {Array} The cleaned version of the array
   */
  function cleanArray(array) {
    for (let index = 0; index < array.length; index++) {
      if (getOwnPropertyDescriptor(array, index) === undefined) {
        array[index] = null;
      }
    }
    return array;
  }

  /**
   * Shallow clone an object
   *
   * @param {Object} object - The object to be cloned.
   * @returns {Object} A new object that copies the original.
   */
  function clone(object) {
    const newObject = create(null);
    for (const [property, value] of entries(object)) {
      if (getOwnPropertyDescriptor(object, property) !== undefined) {
        if (Array.isArray(value)) {
          newObject[property] = cleanArray(value);
        } else if (value && typeof value === 'object' && value.constructor === Object) {
          newObject[property] = clone(value);
        } else {
          newObject[property] = value;
        }
      }
    }
    return newObject;
  }

  /**
   * This method automatically checks if the prop is function or getter and behaves accordingly.
   *
   * @param {Object} object - The object to look up the getter function in its prototype chain.
   * @param {String} prop - The property name for which to find the getter function.
   * @returns {Function} The getter function found in the prototype chain or a fallback function.
   */
  function lookupGetter(object, prop) {
    while (object !== null) {
      const desc = getOwnPropertyDescriptor(object, prop);
      if (desc) {
        if (desc.get) {
          return unapply(desc.get);
        }
        if (typeof desc.value === 'function') {
          return unapply(desc.value);
        }
      }
      object = getPrototypeOf(object);
    }
    function fallbackValue(element) {
      console.warn('fallback value for', element);
      return null;
    }
    return fallbackValue;
  }

  const html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);

  // SVG
  const svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);
  const svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);

  // List of SVG elements that are disallowed by default.
  // We still need to know them so that we can do namespace
  // checks properly in case one wants to add them to
  // allow-list.
  const svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);
  const mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);

  // Similarly to SVG, we want to know all MathML elements,
  // even those that we disallow by default.
  const mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);
  const text = freeze(['#text']);

  const html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns', 'slot']);
  const svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);
  const mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);
  const xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);

  // eslint-disable-next-line unicorn/better-regex
  const MUSTACHE_EXPR = seal(/\{\{[\w\W]*|[\w\W]*\}\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode
  const ERB_EXPR = seal(/<%[\w\W]*|[\w\W]*%>/gm);
  const TMPLIT_EXPR = seal(/\${[\w\W]*}/gm);
  const DATA_ATTR = seal(/^data-[\-\w.\u00B7-\uFFFF]/); // eslint-disable-line no-useless-escape
  const ARIA_ATTR = seal(/^aria-[\-\w]+$/); // eslint-disable-line no-useless-escape
  const IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i // eslint-disable-line no-useless-escape
  );

  const IS_SCRIPT_OR_DATA = seal(/^(?:\w+script|data):/i);
  const ATTR_WHITESPACE = seal(/[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g // eslint-disable-line no-control-regex
  );

  const DOCTYPE_NAME = seal(/^html$/i);

  var EXPRESSIONS = /*#__PURE__*/Object.freeze({
    __proto__: null,
    MUSTACHE_EXPR: MUSTACHE_EXPR,
    ERB_EXPR: ERB_EXPR,
    TMPLIT_EXPR: TMPLIT_EXPR,
    DATA_ATTR: DATA_ATTR,
    ARIA_ATTR: ARIA_ATTR,
    IS_ALLOWED_URI: IS_ALLOWED_URI,
    IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,
    ATTR_WHITESPACE: ATTR_WHITESPACE,
    DOCTYPE_NAME: DOCTYPE_NAME
  });

  const getGlobal = function getGlobal() {
    return typeof window === 'undefined' ? null : window;
  };

  /**
   * Creates a no-op policy for internal use only.
   * Don't export this function outside this module!
   * @param {TrustedTypePolicyFactory} trustedTypes The policy factory.
   * @param {HTMLScriptElement} purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).
   * @return {TrustedTypePolicy} The policy created (or null, if Trusted Types
   * are not supported or creating the policy failed).
   */
  const _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {
    if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {
      return null;
    }

    // Allow the callers to control the unique policy name
    // by adding a data-tt-policy-suffix to the script element with the DOMPurify.
    // Policy creation with duplicate names throws in Trusted Types.
    let suffix = null;
    const ATTR_NAME = 'data-tt-policy-suffix';
    if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {
      suffix = purifyHostElement.getAttribute(ATTR_NAME);
    }
    const policyName = 'dompurify' + (suffix ? '#' + suffix : '');
    try {
      return trustedTypes.createPolicy(policyName, {
        createHTML(html) {
          return html;
        },
        createScriptURL(scriptUrl) {
          return scriptUrl;
        }
      });
    } catch (_) {
      // Policy creation failed (most likely another DOMPurify script has
      // already run). Skip creating the policy, as this will only cause errors
      // if TT are enforced.
      console.warn('TrustedTypes policy ' + policyName + ' could not be created.');
      return null;
    }
  };
  function createDOMPurify() {
    let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();
    const DOMPurify = root => createDOMPurify(root);

    /**
     * Version label, exposed for easier checks
     * if DOMPurify is up to date or not
     */
    DOMPurify.version = '3.0.8';

    /**
     * Array of elements that DOMPurify removed during sanitation.
     * Empty if nothing was removed.
     */
    DOMPurify.removed = [];
    if (!window || !window.document || window.document.nodeType !== 9) {
      // Not running in a browser, provide a factory function
      // so that you can pass your own Window
      DOMPurify.isSupported = false;
      return DOMPurify;
    }
    let {
      document
    } = window;
    const originalDocument = document;
    const currentScript = originalDocument.currentScript;
    const {
      DocumentFragment,
      HTMLTemplateElement,
      Node,
      Element,
      NodeFilter,
      NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,
      HTMLFormElement,
      DOMParser,
      trustedTypes
    } = window;
    const ElementPrototype = Element.prototype;
    const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');
    const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');
    const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');
    const getParentNode = lookupGetter(ElementPrototype, 'parentNode');

    // As per issue #47, the web-components registry is inherited by a
    // new document created via createHTMLDocument. As per the spec
    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)
    // a new empty registry is used when creating a template contents owner
    // document, so we use that as our parent document to ensure nothing
    // is inherited.
    if (typeof HTMLTemplateElement === 'function') {
      const template = document.createElement('template');
      if (template.content && template.content.ownerDocument) {
        document = template.content.ownerDocument;
      }
    }
    let trustedTypesPolicy;
    let emptyHTML = '';
    const {
      implementation,
      createNodeIterator,
      createDocumentFragment,
      getElementsByTagName
    } = document;
    const {
      importNode
    } = originalDocument;
    let hooks = {};

    /**
     * Expose whether this browser supports running the full DOMPurify.
     */
    DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;
    const {
      MUSTACHE_EXPR,
      ERB_EXPR,
      TMPLIT_EXPR,
      DATA_ATTR,
      ARIA_ATTR,
      IS_SCRIPT_OR_DATA,
      ATTR_WHITESPACE
    } = EXPRESSIONS;
    let {
      IS_ALLOWED_URI: IS_ALLOWED_URI$1
    } = EXPRESSIONS;

    /**
     * We consider the elements and attributes below to be safe. Ideally
     * don't add any new ones but feel free to remove unwanted ones.
     */

    /* allowed element names */
    let ALLOWED_TAGS = null;
    const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);

    /* Allowed attribute names */
    let ALLOWED_ATTR = null;
    const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);

    /*
     * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.
     * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)
     * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)
     * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.
     */
    let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {
      tagNameCheck: {
        writable: true,
        configurable: false,
        enumerable: true,
        value: null
      },
      attributeNameCheck: {
        writable: true,
        configurable: false,
        enumerable: true,
        value: null
      },
      allowCustomizedBuiltInElements: {
        writable: true,
        configurable: false,
        enumerable: true,
        value: false
      }
    }));

    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */
    let FORBID_TAGS = null;

    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */
    let FORBID_ATTR = null;

    /* Decide if ARIA attributes are okay */
    let ALLOW_ARIA_ATTR = true;

    /* Decide if custom data attributes are okay */
    let ALLOW_DATA_ATTR = true;

    /* Decide if unknown protocols are okay */
    let ALLOW_UNKNOWN_PROTOCOLS = false;

    /* Decide if self-closing tags in attributes are allowed.
     * Usually removed due to a mXSS issue in jQuery 3.0 */
    let ALLOW_SELF_CLOSE_IN_ATTR = true;

    /* Output should be safe for common template engines.
     * This means, DOMPurify removes data attributes, mustaches and ERB
     */
    let SAFE_FOR_TEMPLATES = false;

    /* Decide if document with <html>... should be returned */
    let WHOLE_DOCUMENT = false;

    /* Track whether config is already set on this instance of DOMPurify. */
    let SET_CONFIG = false;

    /* Decide if all elements (e.g. style, script) must be children of
     * document.body. By default, browsers might move them to document.head */
    let FORCE_BODY = false;

    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html
     * string (or a TrustedHTML object if Trusted Types are supported).
     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead
     */
    let RETURN_DOM = false;

    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html
     * string  (or a TrustedHTML object if Trusted Types are supported) */
    let RETURN_DOM_FRAGMENT = false;

    /* Try to return a Trusted Type object instead of a string, return a string in
     * case Trusted Types are not supported  */
    let RETURN_TRUSTED_TYPE = false;

    /* Output should be free from DOM clobbering attacks?
     * This sanitizes markups named with colliding, clobberable built-in DOM APIs.
     */
    let SANITIZE_DOM = true;

    /* Achieve full DOM Clobbering protection by isolating the namespace of named
     * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.
     *
     * HTML/DOM spec rules that enable DOM Clobbering:
     *   - Named Access on Window (§7.3.3)
     *   - DOM Tree Accessors (§3.1.5)
     *   - Form Element Parent-Child Relations (§4.10.3)
     *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)
     *   - HTMLCollection (§4.2.10.2)
     *
     * Namespace isolation is implemented by prefixing `id` and `name` attributes
     * with a constant string, i.e., `user-content-`
     */
    let SANITIZE_NAMED_PROPS = false;
    const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';

    /* Keep element content when removing element? */
    let KEEP_CONTENT = true;

    /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead
     * of importing it into a new Document and returning a sanitized copy */
    let IN_PLACE = false;

    /* Allow usage of profiles like html, svg and mathMl */
    let USE_PROFILES = {};

    /* Tags to ignore content of when KEEP_CONTENT is true */
    let FORBID_CONTENTS = null;
    const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);

    /* Tags that are safe for data: URIs */
    let DATA_URI_TAGS = null;
    const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);

    /* Attributes safe for values like "javascript:" */
    let URI_SAFE_ATTRIBUTES = null;
    const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);
    const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
    const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';
    const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';
    /* Document namespace */
    let NAMESPACE = HTML_NAMESPACE;
    let IS_EMPTY_INPUT = false;

    /* Allowed XHTML+XML namespaces */
    let ALLOWED_NAMESPACES = null;
    const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);

    /* Parsing of strict XHTML documents */
    let PARSER_MEDIA_TYPE = null;
    const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];
    const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';
    let transformCaseFunc = null;

    /* Keep a reference to config to pass to hooks */
    let CONFIG = null;

    /* Ideally, do not touch anything below this line */
    /* ______________________________________________ */

    const formElement = document.createElement('form');
    const isRegexOrFunction = function isRegexOrFunction(testValue) {
      return testValue instanceof RegExp || testValue instanceof Function;
    };

    /**
     * _parseConfig
     *
     * @param  {Object} cfg optional config literal
     */
    // eslint-disable-next-line complexity
    const _parseConfig = function _parseConfig() {
      let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      if (CONFIG && CONFIG === cfg) {
        return;
      }

      /* Shield configuration object from tampering */
      if (!cfg || typeof cfg !== 'object') {
        cfg = {};
      }

      /* Shield configuration object from prototype pollution */
      cfg = clone(cfg);
      PARSER_MEDIA_TYPE =
      // eslint-disable-next-line unicorn/prefer-includes
      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;

      // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.
      transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;

      /* Set configuration parameters */
      ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;
      ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;
      ALLOWED_NAMESPACES = 'ALLOWED_NAMESPACES' in cfg ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;
      URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES),
      // eslint-disable-line indent
      cfg.ADD_URI_SAFE_ATTR,
      // eslint-disable-line indent
      transformCaseFunc // eslint-disable-line indent
      ) // eslint-disable-line indent
      : DEFAULT_URI_SAFE_ATTRIBUTES;
      DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS),
      // eslint-disable-line indent
      cfg.ADD_DATA_URI_TAGS,
      // eslint-disable-line indent
      transformCaseFunc // eslint-disable-line indent
      ) // eslint-disable-line indent
      : DEFAULT_DATA_URI_TAGS;
      FORBID_CONTENTS = 'FORBID_CONTENTS' in cfg ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;
      FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};
      FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};
      USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;
      ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true
      ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true
      ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false
      ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true
      SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false
      WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false
      RETURN_DOM = cfg.RETURN_DOM || false; // Default false
      RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false
      RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false
      FORCE_BODY = cfg.FORCE_BODY || false; // Default false
      SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true
      SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false
      KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true
      IN_PLACE = cfg.IN_PLACE || false; // Default false
      IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;
      NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;
      CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};
      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {
        CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;
      }
      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {
        CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;
      }
      if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {
        CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;
      }
      if (SAFE_FOR_TEMPLATES) {
        ALLOW_DATA_ATTR = false;
      }
      if (RETURN_DOM_FRAGMENT) {
        RETURN_DOM = true;
      }

      /* Parse profile info */
      if (USE_PROFILES) {
        ALLOWED_TAGS = addToSet({}, text);
        ALLOWED_ATTR = [];
        if (USE_PROFILES.html === true) {
          addToSet(ALLOWED_TAGS, html$1);
          addToSet(ALLOWED_ATTR, html);
        }
        if (USE_PROFILES.svg === true) {
          addToSet(ALLOWED_TAGS, svg$1);
          addToSet(ALLOWED_ATTR, svg);
          addToSet(ALLOWED_ATTR, xml);
        }
        if (USE_PROFILES.svgFilters === true) {
          addToSet(ALLOWED_TAGS, svgFilters);
          addToSet(ALLOWED_ATTR, svg);
          addToSet(ALLOWED_ATTR, xml);
        }
        if (USE_PROFILES.mathMl === true) {
          addToSet(ALLOWED_TAGS, mathMl$1);
          addToSet(ALLOWED_ATTR, mathMl);
          addToSet(ALLOWED_ATTR, xml);
        }
      }

      /* Merge configuration parameters */
      if (cfg.ADD_TAGS) {
        if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {
          ALLOWED_TAGS = clone(ALLOWED_TAGS);
        }
        addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);
      }
      if (cfg.ADD_ATTR) {
        if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {
          ALLOWED_ATTR = clone(ALLOWED_ATTR);
        }
        addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);
      }
      if (cfg.ADD_URI_SAFE_ATTR) {
        addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);
      }
      if (cfg.FORBID_CONTENTS) {
        if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {
          FORBID_CONTENTS = clone(FORBID_CONTENTS);
        }
        addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);
      }

      /* Add #text in case KEEP_CONTENT is set to true */
      if (KEEP_CONTENT) {
        ALLOWED_TAGS['#text'] = true;
      }

      /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */
      if (WHOLE_DOCUMENT) {
        addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);
      }

      /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */
      if (ALLOWED_TAGS.table) {
        addToSet(ALLOWED_TAGS, ['tbody']);
        delete FORBID_TAGS.tbody;
      }
      if (cfg.TRUSTED_TYPES_POLICY) {
        if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {
          throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a "createHTML" hook.');
        }
        if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {
          throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a "createScriptURL" hook.');
        }

        // Overwrite existing TrustedTypes policy.
        trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;

        // Sign local variables required by `sanitize`.
        emptyHTML = trustedTypesPolicy.createHTML('');
      } else {
        // Uninitialized policy, attempt to initialize the internal dompurify policy.
        if (trustedTypesPolicy === undefined) {
          trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);
        }

        // If creating the internal policy succeeded sign internal variables.
        if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {
          emptyHTML = trustedTypesPolicy.createHTML('');
        }
      }

      // Prevent further manipulation of configuration.
      // Not available in IE8, Safari 5, etc.
      if (freeze) {
        freeze(cfg);
      }
      CONFIG = cfg;
    };
    const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);
    const HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'desc', 'title', 'annotation-xml']);

    // Certain elements are allowed in both SVG and HTML
    // namespace. We need to specify them explicitly
    // so that they don't get erroneously deleted from
    // HTML namespace.
    const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);

    /* Keep track of all possible SVG and MathML tags
     * so that we can perform the namespace checks
     * correctly. */
    const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);
    const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);

    /**
     * @param  {Element} element a DOM element whose namespace is being checked
     * @returns {boolean} Return false if the element has a
     *  namespace that a spec-compliant parser would never
     *  return. Return true otherwise.
     */
    const _checkValidNamespace = function _checkValidNamespace(element) {
      let parent = getParentNode(element);

      // In JSDOM, if we're inside shadow DOM, then parentNode
      // can be null. We just simulate parent in this case.
      if (!parent || !parent.tagName) {
        parent = {
          namespaceURI: NAMESPACE,
          tagName: 'template'
        };
      }
      const tagName = stringToLowerCase(element.tagName);
      const parentTagName = stringToLowerCase(parent.tagName);
      if (!ALLOWED_NAMESPACES[element.namespaceURI]) {
        return false;
      }
      if (element.namespaceURI === SVG_NAMESPACE) {
        // The only way to switch from HTML namespace to SVG
        // is via <svg>. If it happens via any other tag, then
        // it should be killed.
        if (parent.namespaceURI === HTML_NAMESPACE) {
          return tagName === 'svg';
        }

        // The only way to switch from MathML to SVG is via`
        // svg if parent is either <annotation-xml> or MathML
        // text integration points.
        if (parent.namespaceURI === MATHML_NAMESPACE) {
          return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);
        }

        // We only allow elements that are defined in SVG
        // spec. All others are disallowed in SVG namespace.
        return Boolean(ALL_SVG_TAGS[tagName]);
      }
      if (element.namespaceURI === MATHML_NAMESPACE) {
        // The only way to switch from HTML namespace to MathML
        // is via <math>. If it happens via any other tag, then
        // it should be killed.
        if (parent.namespaceURI === HTML_NAMESPACE) {
          return tagName === 'math';
        }

        // The only way to switch from SVG to MathML is via
        // <math> and HTML integration points
        if (parent.namespaceURI === SVG_NAMESPACE) {
          return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];
        }

        // We only allow elements that are defined in MathML
        // spec. All others are disallowed in MathML namespace.
        return Boolean(ALL_MATHML_TAGS[tagName]);
      }
      if (element.namespaceURI === HTML_NAMESPACE) {
        // The only way to switch from SVG to HTML is via
        // HTML integration points, and from MathML to HTML
        // is via MathML text integration points
        if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {
          return false;
        }
        if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {
          return false;
        }

        // We disallow tags that are specific for MathML
        // or SVG and should never appear in HTML namespace
        return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);
      }

      // For XHTML and XML documents that support custom namespaces
      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {
        return true;
      }

      // The code should never reach this place (this means
      // that the element somehow got namespace that is not
      // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).
      // Return false just in case.
      return false;
    };

    /**
     * _forceRemove
     *
     * @param  {Node} node a DOM node
     */
    const _forceRemove = function _forceRemove(node) {
      arrayPush(DOMPurify.removed, {
        element: node
      });
      try {
        // eslint-disable-next-line unicorn/prefer-dom-node-remove
        node.parentNode.removeChild(node);
      } catch (_) {
        node.remove();
      }
    };

    /**
     * _removeAttribute
     *
     * @param  {String} name an Attribute name
     * @param  {Node} node a DOM node
     */
    const _removeAttribute = function _removeAttribute(name, node) {
      try {
        arrayPush(DOMPurify.removed, {
          attribute: node.getAttributeNode(name),
          from: node
        });
      } catch (_) {
        arrayPush(DOMPurify.removed, {
          attribute: null,
          from: node
        });
      }
      node.removeAttribute(name);

      // We void attribute values for unremovable "is"" attributes
      if (name === 'is' && !ALLOWED_ATTR[name]) {
        if (RETURN_DOM || RETURN_DOM_FRAGMENT) {
          try {
            _forceRemove(node);
          } catch (_) {}
        } else {
          try {
            node.setAttribute(name, '');
          } catch (_) {}
        }
      }
    };

    /**
     * _initDocument
     *
     * @param  {String} dirty a string of dirty markup
     * @return {Document} a DOM, filled with the dirty markup
     */
    const _initDocument = function _initDocument(dirty) {
      /* Create a HTML document */
      let doc = null;
      let leadingWhitespace = null;
      if (FORCE_BODY) {
        dirty = '<remove></remove>' + dirty;
      } else {
        /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */
        const matches = stringMatch(dirty, /^[\r\n\t ]+/);
        leadingWhitespace = matches && matches[0];
      }
      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {
        // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)
        dirty = '<html xmlns="http://www.w3.org/1999/xhtml"><head></head><body>' + dirty + '</body></html>';
      }
      const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;
      /*
       * Use the DOMParser API by default, fallback later if needs be
       * DOMParser not work for svg when has multiple root element.
       */
      if (NAMESPACE === HTML_NAMESPACE) {
        try {
          doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);
        } catch (_) {}
      }

      /* Use createHTMLDocument in case DOMParser is not available */
      if (!doc || !doc.documentElement) {
        doc = implementation.createDocument(NAMESPACE, 'template', null);
        try {
          doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;
        } catch (_) {
          // Syntax error if dirtyPayload is invalid xml
        }
      }
      const body = doc.body || doc.documentElement;
      if (dirty && leadingWhitespace) {
        body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);
      }

      /* Work on whole document or just its body */
      if (NAMESPACE === HTML_NAMESPACE) {
        return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];
      }
      return WHOLE_DOCUMENT ? doc.documentElement : body;
    };

    /**
     * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.
     *
     * @param  {Node} root The root element or node to start traversing on.
     * @return {NodeIterator} The created NodeIterator
     */
    const _createNodeIterator = function _createNodeIterator(root) {
      return createNodeIterator.call(root.ownerDocument || root, root,
      // eslint-disable-next-line no-bitwise
      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, null);
    };

    /**
     * _isClobbered
     *
     * @param  {Node} elm element to check for clobbering attacks
     * @return {Boolean} true if clobbered, false if safe
     */
    const _isClobbered = function _isClobbered(elm) {
      return elm instanceof HTMLFormElement && (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function' || typeof elm.hasChildNodes !== 'function');
    };

    /**
     * Checks whether the given object is a DOM node.
     *
     * @param  {Node} object object to check whether it's a DOM node
     * @return {Boolean} true is object is a DOM node
     */
    const _isNode = function _isNode(object) {
      return typeof Node === 'function' && object instanceof Node;
    };

    /**
     * _executeHook
     * Execute user configurable hooks
     *
     * @param  {String} entryPoint  Name of the hook's entry point
     * @param  {Node} currentNode node to work on with the hook
     * @param  {Object} data additional hook parameters
     */
    const _executeHook = function _executeHook(entryPoint, currentNode, data) {
      if (!hooks[entryPoint]) {
        return;
      }
      arrayForEach(hooks[entryPoint], hook => {
        hook.call(DOMPurify, currentNode, data, CONFIG);
      });
    };

    /**
     * _sanitizeElements
     *
     * @protect nodeName
     * @protect textContent
     * @protect removeChild
     *
     * @param   {Node} currentNode to check for permission to exist
     * @return  {Boolean} true if node was killed, false if left alive
     */
    const _sanitizeElements = function _sanitizeElements(currentNode) {
      let content = null;

      /* Execute a hook if present */
      _executeHook('beforeSanitizeElements', currentNode, null);

      /* Check if element is clobbered or can clobber */
      if (_isClobbered(currentNode)) {
        _forceRemove(currentNode);
        return true;
      }

      /* Now let's check the element's type and name */
      const tagName = transformCaseFunc(currentNode.nodeName);

      /* Execute a hook if present */
      _executeHook('uponSanitizeElement', currentNode, {
        tagName,
        allowedTags: ALLOWED_TAGS
      });

      /* Detect mXSS attempts abusing namespace confusion */
      if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\w]/g, currentNode.innerHTML) && regExpTest(/<[/\w]/g, currentNode.textContent)) {
        _forceRemove(currentNode);
        return true;
      }

      /* Remove element if anything forbids its presence */
      if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {
        /* Check if we have a custom element to handle */
        if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {
          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {
            return false;
          }
          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {
            return false;
          }
        }

        /* Keep content except for bad-listed elements */
        if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {
          const parentNode = getParentNode(currentNode) || currentNode.parentNode;
          const childNodes = getChildNodes(currentNode) || currentNode.childNodes;
          if (childNodes && parentNode) {
            const childCount = childNodes.length;
            for (let i = childCount - 1; i >= 0; --i) {
              parentNode.insertBefore(cloneNode(childNodes[i], true), getNextSibling(currentNode));
            }
          }
        }
        _forceRemove(currentNode);
        return true;
      }

      /* Check whether element has a valid namespace */
      if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {
        _forceRemove(currentNode);
        return true;
      }

      /* Make sure that older browsers don't get fallback-tag mXSS */
      if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\/no(script|embed|frames)/i, currentNode.innerHTML)) {
        _forceRemove(currentNode);
        return true;
      }

      /* Sanitize element content to be template-safe */
      if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {
        /* Get the element's text content */
        content = currentNode.textContent;
        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {
          content = stringReplace(content, expr, ' ');
        });
        if (currentNode.textContent !== content) {
          arrayPush(DOMPurify.removed, {
            element: currentNode.cloneNode()
          });
          currentNode.textContent = content;
        }
      }

      /* Execute a hook if present */
      _executeHook('afterSanitizeElements', currentNode, null);
      return false;
    };

    /**
     * _isValidAttribute
     *
     * @param  {string} lcTag Lowercase tag name of containing element.
     * @param  {string} lcName Lowercase attribute name.
     * @param  {string} value Attribute value.
     * @return {Boolean} Returns true if `value` is valid, otherwise false.
     */
    // eslint-disable-next-line complexity
    const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {
      /* Make sure attribute cannot clobber */
      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {
        return false;
      }

      /* Allow valid data-* attributes: At least one character after "-"
          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)
          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)
          We don't need to check the value; it's always URI safe. */
      if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {
        if (
        // First condition does a very basic check if a) it's basically a valid custom element tagname AND
        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck
        _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||
        // Alternative, second condition checks if it's an `is`-attribute, AND
        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
        lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {
          return false;
        }
        /* Check value is safe. First, is attr inert? If so, is safe */
      } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {
        return false;
      } else ;
      return true;
    };

    /**
     * _isBasicCustomElement
     * checks if at least one dash is included in tagName, and it's not the first char
     * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name
     *
     * @param {string} tagName name of the tag of the node to sanitize
     * @returns {boolean} Returns true if the tag name meets the basic criteria for a custom element, otherwise false.
     */
    const _isBasicCustomElement = function _isBasicCustomElement(tagName) {
      return tagName.indexOf('-') > 0;
    };

    /**
     * _sanitizeAttributes
     *
     * @protect attributes
     * @protect nodeName
     * @protect removeAttribute
     * @protect setAttribute
     *
     * @param  {Node} currentNode to sanitize
     */
    const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {
      /* Execute a hook if present */
      _executeHook('beforeSanitizeAttributes', currentNode, null);
      const {
        attributes
      } = currentNode;

      /* Check if we have attributes; if not we might have a text node */
      if (!attributes) {
        return;
      }
      const hookEvent = {
        attrName: '',
        attrValue: '',
        keepAttr: true,
        allowedAttributes: ALLOWED_ATTR
      };
      let l = attributes.length;

      /* Go backwards over all attributes; safely remove bad ones */
      while (l--) {
        const attr = attributes[l];
        const {
          name,
          namespaceURI,
          value: attrValue
        } = attr;
        const lcName = transformCaseFunc(name);
        let value = name === 'value' ? attrValue : stringTrim(attrValue);

        /* Execute a hook if present */
        hookEvent.attrName = lcName;
        hookEvent.attrValue = value;
        hookEvent.keepAttr = true;
        hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set
        _executeHook('uponSanitizeAttribute', currentNode, hookEvent);
        value = hookEvent.attrValue;
        /* Did the hooks approve of the attribute? */
        if (hookEvent.forceKeepAttr) {
          continue;
        }

        /* Remove attribute */
        _removeAttribute(name, currentNode);

        /* Did the hooks approve of the attribute? */
        if (!hookEvent.keepAttr) {
          continue;
        }

        /* Work around a security issue in jQuery 3.0 */
        if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\/>/i, value)) {
          _removeAttribute(name, currentNode);
          continue;
        }

        /* Sanitize attribute content to be template-safe */
        if (SAFE_FOR_TEMPLATES) {
          arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {
            value = stringReplace(value, expr, ' ');
          });
        }

        /* Is `value` valid for this attribute? */
        const lcTag = transformCaseFunc(currentNode.nodeName);
        if (!_isValidAttribute(lcTag, lcName, value)) {
          continue;
        }

        /* Full DOM Clobbering protection via namespace isolation,
         * Prefix id and name attributes with `user-content-`
         */
        if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {
          // Remove the attribute with this value
          _removeAttribute(name, currentNode);

          // Prefix the value and later re-create the attribute with the sanitized value
          value = SANITIZE_NAMED_PROPS_PREFIX + value;
        }

        /* Handle attributes that require Trusted Types */
        if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {
          if (namespaceURI) ; else {
            switch (trustedTypes.getAttributeType(lcTag, lcName)) {
              case 'TrustedHTML':
                {
                  value = trustedTypesPolicy.createHTML(value);
                  break;
                }
              case 'TrustedScriptURL':
                {
                  value = trustedTypesPolicy.createScriptURL(value);
                  break;
                }
            }
          }
        }

        /* Handle invalid data-* attribute set by try-catching it */
        try {
          if (namespaceURI) {
            currentNode.setAttributeNS(namespaceURI, name, value);
          } else {
            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. "x-schema". */
            currentNode.setAttribute(name, value);
          }
          arrayPop(DOMPurify.removed);
        } catch (_) {}
      }

      /* Execute a hook if present */
      _executeHook('afterSanitizeAttributes', currentNode, null);
    };

    /**
     * _sanitizeShadowDOM
     *
     * @param  {DocumentFragment} fragment to iterate over recursively
     */
    const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {
      let shadowNode = null;
      const shadowIterator = _createNodeIterator(fragment);

      /* Execute a hook if present */
      _executeHook('beforeSanitizeShadowDOM', fragment, null);
      while (shadowNode = shadowIterator.nextNode()) {
        /* Execute a hook if present */
        _executeHook('uponSanitizeShadowNode', shadowNode, null);

        /* Sanitize tags and elements */
        if (_sanitizeElements(shadowNode)) {
          continue;
        }

        /* Deep shadow DOM detected */
        if (shadowNode.content instanceof DocumentFragment) {
          _sanitizeShadowDOM(shadowNode.content);
        }

        /* Check attributes, sanitize if necessary */
        _sanitizeAttributes(shadowNode);
      }

      /* Execute a hook if present */
      _executeHook('afterSanitizeShadowDOM', fragment, null);
    };

    /**
     * Sanitize
     * Public method providing core sanitation functionality
     *
     * @param {String|Node} dirty string or DOM node
     * @param {Object} cfg object
     */
    // eslint-disable-next-line complexity
    DOMPurify.sanitize = function (dirty) {
      let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      let body = null;
      let importedNode = null;
      let currentNode = null;
      let returnNode = null;
      /* Make sure we have a string to sanitize.
        DO NOT return early, as this will return the wrong type if
        the user has requested a DOM object rather than a string */
      IS_EMPTY_INPUT = !dirty;
      if (IS_EMPTY_INPUT) {
        dirty = '<!-->';
      }

      /* Stringify, in case dirty is an object */
      if (typeof dirty !== 'string' && !_isNode(dirty)) {
        if (typeof dirty.toString === 'function') {
          dirty = dirty.toString();
          if (typeof dirty !== 'string') {
            throw typeErrorCreate('dirty is not a string, aborting');
          }
        } else {
          throw typeErrorCreate('toString is not a function');
        }
      }

      /* Return dirty HTML if DOMPurify cannot run */
      if (!DOMPurify.isSupported) {
        return dirty;
      }

      /* Assign config vars */
      if (!SET_CONFIG) {
        _parseConfig(cfg);
      }

      /* Clean up removed elements */
      DOMPurify.removed = [];

      /* Check if dirty is correctly typed for IN_PLACE */
      if (typeof dirty === 'string') {
        IN_PLACE = false;
      }
      if (IN_PLACE) {
        /* Do some early pre-sanitization to avoid unsafe root nodes */
        if (dirty.nodeName) {
          const tagName = transformCaseFunc(dirty.nodeName);
          if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {
            throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');
          }
        }
      } else if (dirty instanceof Node) {
        /* If dirty is a DOM element, append to an empty document to avoid
           elements being stripped by the parser */
        body = _initDocument('<!---->');
        importedNode = body.ownerDocument.importNode(dirty, true);
        if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {
          /* Node is already a body, use as is */
          body = importedNode;
        } else if (importedNode.nodeName === 'HTML') {
          body = importedNode;
        } else {
          // eslint-disable-next-line unicorn/prefer-dom-node-append
          body.appendChild(importedNode);
        }
      } else {
        /* Exit directly if we have nothing to do */
        if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&
        // eslint-disable-next-line unicorn/prefer-includes
        dirty.indexOf('<') === -1) {
          return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;
        }

        /* Initialize the document to work on */
        body = _initDocument(dirty);

        /* Check we have a DOM node from the data */
        if (!body) {
          return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';
        }
      }

      /* Remove first element node (ours) if FORCE_BODY is set */
      if (body && FORCE_BODY) {
        _forceRemove(body.firstChild);
      }

      /* Get node iterator */
      const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);

      /* Now start iterating over the created document */
      while (currentNode = nodeIterator.nextNode()) {
        /* Sanitize tags and elements */
        if (_sanitizeElements(currentNode)) {
          continue;
        }

        /* Shadow DOM detected, sanitize it */
        if (currentNode.content instanceof DocumentFragment) {
          _sanitizeShadowDOM(currentNode.content);
        }

        /* Check attributes, sanitize if necessary */
        _sanitizeAttributes(currentNode);
      }

      /* If we sanitized `dirty` in-place, return it. */
      if (IN_PLACE) {
        return dirty;
      }

      /* Return sanitized string or DOM */
      if (RETURN_DOM) {
        if (RETURN_DOM_FRAGMENT) {
          returnNode = createDocumentFragment.call(body.ownerDocument);
          while (body.firstChild) {
            // eslint-disable-next-line unicorn/prefer-dom-node-append
            returnNode.appendChild(body.firstChild);
          }
        } else {
          returnNode = body;
        }
        if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {
          /*
            AdoptNode() is not used because internal state is not reset
            (e.g. the past names map of a HTMLFormElement), this is safe
            in theory but we would rather not risk another attack vector.
            The state that is cloned by importNode() is explicitly defined
            by the specs.
          */
          returnNode = importNode.call(originalDocument, returnNode, true);
        }
        return returnNode;
      }
      let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;

      /* Serialize doctype if allowed */
      if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {
        serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\n' + serializedHTML;
      }

      /* Sanitize final string template-safe */
      if (SAFE_FOR_TEMPLATES) {
        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {
          serializedHTML = stringReplace(serializedHTML, expr, ' ');
        });
      }
      return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;
    };

    /**
     * Public method to set the configuration once
     * setConfig
     *
     * @param {Object} cfg configuration object
     */
    DOMPurify.setConfig = function () {
      let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      _parseConfig(cfg);
      SET_CONFIG = true;
    };

    /**
     * Public method to remove the configuration
     * clearConfig
     *
     */
    DOMPurify.clearConfig = function () {
      CONFIG = null;
      SET_CONFIG = false;
    };

    /**
     * Public method to check if an attribute value is valid.
     * Uses last set config, if any. Otherwise, uses config defaults.
     * isValidAttribute
     *
     * @param  {String} tag Tag name of containing element.
     * @param  {String} attr Attribute name.
     * @param  {String} value Attribute value.
     * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.
     */
    DOMPurify.isValidAttribute = function (tag, attr, value) {
      /* Initialize shared config vars if necessary. */
      if (!CONFIG) {
        _parseConfig({});
      }
      const lcTag = transformCaseFunc(tag);
      const lcName = transformCaseFunc(attr);
      return _isValidAttribute(lcTag, lcName, value);
    };

    /**
     * AddHook
     * Public method to add DOMPurify hooks
     *
     * @param {String} entryPoint entry point for the hook to add
     * @param {Function} hookFunction function to execute
     */
    DOMPurify.addHook = function (entryPoint, hookFunction) {
      if (typeof hookFunction !== 'function') {
        return;
      }
      hooks[entryPoint] = hooks[entryPoint] || [];
      arrayPush(hooks[entryPoint], hookFunction);
    };

    /**
     * RemoveHook
     * Public method to remove a DOMPurify hook at a given entryPoint
     * (pops it from the stack of hooks if more are present)
     *
     * @param {String} entryPoint entry point for the hook to remove
     * @return {Function} removed(popped) hook
     */
    DOMPurify.removeHook = function (entryPoint) {
      if (hooks[entryPoint]) {
        return arrayPop(hooks[entryPoint]);
      }
    };

    /**
     * RemoveHooks
     * Public method to remove all DOMPurify hooks at a given entryPoint
     *
     * @param  {String} entryPoint entry point for the hooks to remove
     */
    DOMPurify.removeHooks = function (entryPoint) {
      if (hooks[entryPoint]) {
        hooks[entryPoint] = [];
      }
    };

    /**
     * RemoveAllHooks
     * Public method to remove all DOMPurify hooks
     */
    DOMPurify.removeAllHooks = function () {
      hooks = {};
    };
    return DOMPurify;
  }
  var purify = createDOMPurify();

  return purify;

}));
//# sourceMappingURL=purify.js.map


/***/ }),

/***/ 547:
/***/ (function(module) {

"use strict";


var has = Object.prototype.hasOwnProperty
  , prefix = '~';

/**
 * Constructor to create a storage for our `EE` objects.
 * An `Events` instance is a plain object whose properties are event names.
 *
 * @constructor
 * @private
 */
function Events() {}

//
// We try to not inherit from `Object.prototype`. In some engines creating an
// instance in this way is faster than calling `Object.create(null)` directly.
// If `Object.create(null)` is not supported we prefix the event names with a
// character to make sure that the built-in object properties are not
// overridden or used as an attack vector.
//
if (Object.create) {
  Events.prototype = Object.create(null);

  //
  // This hack is needed because the `__proto__` property is still inherited in
  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.
  //
  if (!new Events().__proto__) prefix = false;
}

/**
 * Representation of a single event listener.
 *
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} [once=false] Specify if the listener is a one-time listener.
 * @constructor
 * @private
 */
function EE(fn, context, once) {
  this.fn = fn;
  this.context = context;
  this.once = once || false;
}

/**
 * Add a listener for a given event.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} once Specify if the listener is a one-time listener.
 * @returns {EventEmitter}
 * @private
 */
function addListener(emitter, event, fn, context, once) {
  if (typeof fn !== 'function') {
    throw new TypeError('The listener must be a function');
  }

  var listener = new EE(fn, context || emitter, once)
    , evt = prefix ? prefix + event : event;

  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;
  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);
  else emitter._events[evt] = [emitter._events[evt], listener];

  return emitter;
}

/**
 * Clear event by name.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} evt The Event name.
 * @private
 */
function clearEvent(emitter, evt) {
  if (--emitter._eventsCount === 0) emitter._events = new Events();
  else delete emitter._events[evt];
}

/**
 * Minimal `EventEmitter` interface that is molded against the Node.js
 * `EventEmitter` interface.
 *
 * @constructor
 * @public
 */
function EventEmitter() {
  this._events = new Events();
  this._eventsCount = 0;
}

/**
 * Return an array listing the events for which the emitter has registered
 * listeners.
 *
 * @returns {Array}
 * @public
 */
EventEmitter.prototype.eventNames = function eventNames() {
  var names = []
    , events
    , name;

  if (this._eventsCount === 0) return names;

  for (name in (events = this._events)) {
    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);
  }

  if (Object.getOwnPropertySymbols) {
    return names.concat(Object.getOwnPropertySymbols(events));
  }

  return names;
};

/**
 * Return the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Array} The registered listeners.
 * @public
 */
EventEmitter.prototype.listeners = function listeners(event) {
  var evt = prefix ? prefix + event : event
    , handlers = this._events[evt];

  if (!handlers) return [];
  if (handlers.fn) return [handlers.fn];

  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {
    ee[i] = handlers[i].fn;
  }

  return ee;
};

/**
 * Return the number of listeners listening to a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Number} The number of listeners.
 * @public
 */
EventEmitter.prototype.listenerCount = function listenerCount(event) {
  var evt = prefix ? prefix + event : event
    , listeners = this._events[evt];

  if (!listeners) return 0;
  if (listeners.fn) return 1;
  return listeners.length;
};

/**
 * Calls each of the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Boolean} `true` if the event had listeners, else `false`.
 * @public
 */
EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
  var evt = prefix ? prefix + event : event;

  if (!this._events[evt]) return false;

  var listeners = this._events[evt]
    , len = arguments.length
    , args
    , i;

  if (listeners.fn) {
    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);

    switch (len) {
      case 1: return listeners.fn.call(listeners.context), true;
      case 2: return listeners.fn.call(listeners.context, a1), true;
      case 3: return listeners.fn.call(listeners.context, a1, a2), true;
      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;
      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
    }

    for (i = 1, args = new Array(len -1); i < len; i++) {
      args[i - 1] = arguments[i];
    }

    listeners.fn.apply(listeners.context, args);
  } else {
    var length = listeners.length
      , j;

    for (i = 0; i < length; i++) {
      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);

      switch (len) {
        case 1: listeners[i].fn.call(listeners[i].context); break;
        case 2: listeners[i].fn.call(listeners[i].context, a1); break;
        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;
        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;
        default:
          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {
            args[j - 1] = arguments[j];
          }

          listeners[i].fn.apply(listeners[i].context, args);
      }
    }
  }

  return true;
};

/**
 * Add a listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.on = function on(event, fn, context) {
  return addListener(this, event, fn, context, false);
};

/**
 * Add a one-time listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.once = function once(event, fn, context) {
  return addListener(this, event, fn, context, true);
};

/**
 * Remove the listeners of a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn Only remove the listeners that match this function.
 * @param {*} context Only remove the listeners that have this context.
 * @param {Boolean} once Only remove one-time listeners.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {
  var evt = prefix ? prefix + event : event;

  if (!this._events[evt]) return this;
  if (!fn) {
    clearEvent(this, evt);
    return this;
  }

  var listeners = this._events[evt];

  if (listeners.fn) {
    if (
      listeners.fn === fn &&
      (!once || listeners.once) &&
      (!context || listeners.context === context)
    ) {
      clearEvent(this, evt);
    }
  } else {
    for (var i = 0, events = [], length = listeners.length; i < length; i++) {
      if (
        listeners[i].fn !== fn ||
        (once && !listeners[i].once) ||
        (context && listeners[i].context !== context)
      ) {
        events.push(listeners[i]);
      }
    }

    //
    // Reset the array, or remove it completely if we have no more listeners.
    //
    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;
    else clearEvent(this, evt);
  }

  return this;
};

/**
 * Remove all listeners, or those of the specified event.
 *
 * @param {(String|Symbol)} [event] The event name.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
  var evt;

  if (event) {
    evt = prefix ? prefix + event : event;
    if (this._events[evt]) clearEvent(this, evt);
  } else {
    this._events = new Events();
    this._eventsCount = 0;
  }

  return this;
};

//
// Alias methods names because people roll like that.
//
EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
EventEmitter.prototype.addListener = EventEmitter.prototype.on;

//
// Expose the prefix.
//
EventEmitter.prefixed = prefix;

//
// Allow `EventEmitter` to be imported as module namespace.
//
EventEmitter.EventEmitter = EventEmitter;

//
// Expose the module.
//
if (true) {
  module.exports = EventEmitter;
}


/***/ }),

/***/ 306:
/***/ (function(module) {

"use strict";

module.exports = (promise, onFinally) => {
	onFinally = onFinally || (() => {});

	return promise.then(
		val => new Promise(resolve => {
			resolve(onFinally());
		}).then(() => val),
		err => new Promise(resolve => {
			resolve(onFinally());
		}).then(() => {
			throw err;
		})
	);
};


/***/ }),

/***/ 781:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;

__webpack_unused_export__ = ({ value: true });
const EventEmitter = __webpack_require__(547);
const p_timeout_1 = __webpack_require__(499);
const priority_queue_1 = __webpack_require__(906);
// eslint-disable-next-line @typescript-eslint/no-empty-function
const empty = () => { };
const timeoutError = new p_timeout_1.TimeoutError();
/**
Promise queue with concurrency control.
*/
class PQueue extends EventEmitter {
    constructor(options) {
        var _a, _b, _c, _d;
        super();
        this._intervalCount = 0;
        this._intervalEnd = 0;
        this._pendingCount = 0;
        this._resolveEmpty = empty;
        this._resolveIdle = empty;
        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions
        options = Object.assign({ carryoverConcurrencyCount: false, intervalCap: Infinity, interval: 0, concurrency: Infinity, autoStart: true, queueClass: priority_queue_1.default }, options);
        if (!(typeof options.intervalCap === 'number' && options.intervalCap >= 1)) {
            throw new TypeError(`Expected \`intervalCap\` to be a number from 1 and up, got \`${(_b = (_a = options.intervalCap) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : ''}\` (${typeof options.intervalCap})`);
        }
        if (options.interval === undefined || !(Number.isFinite(options.interval) && options.interval >= 0)) {
            throw new TypeError(`Expected \`interval\` to be a finite number >= 0, got \`${(_d = (_c = options.interval) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''}\` (${typeof options.interval})`);
        }
        this._carryoverConcurrencyCount = options.carryoverConcurrencyCount;
        this._isIntervalIgnored = options.intervalCap === Infinity || options.interval === 0;
        this._intervalCap = options.intervalCap;
        this._interval = options.interval;
        this._queue = new options.queueClass();
        this._queueClass = options.queueClass;
        this.concurrency = options.concurrency;
        this._timeout = options.timeout;
        this._throwOnTimeout = options.throwOnTimeout === true;
        this._isPaused = options.autoStart === false;
    }
    get _doesIntervalAllowAnother() {
        return this._isIntervalIgnored || this._intervalCount < this._intervalCap;
    }
    get _doesConcurrentAllowAnother() {
        return this._pendingCount < this._concurrency;
    }
    _next() {
        this._pendingCount--;
        this._tryToStartAnother();
        this.emit('next');
    }
    _resolvePromises() {
        this._resolveEmpty();
        this._resolveEmpty = empty;
        if (this._pendingCount === 0) {
            this._resolveIdle();
            this._resolveIdle = empty;
            this.emit('idle');
        }
    }
    _onResumeInterval() {
        this._onInterval();
        this._initializeIntervalIfNeeded();
        this._timeoutId = undefined;
    }
    _isIntervalPaused() {
        const now = Date.now();
        if (this._intervalId === undefined) {
            const delay = this._intervalEnd - now;
            if (delay < 0) {
                // Act as the interval was done
                // We don't need to resume it here because it will be resumed on line 160
                this._intervalCount = (this._carryoverConcurrencyCount) ? this._pendingCount : 0;
            }
            else {
                // Act as the interval is pending
                if (this._timeoutId === undefined) {
                    this._timeoutId = setTimeout(() => {
                        this._onResumeInterval();
                    }, delay);
                }
                return true;
            }
        }
        return false;
    }
    _tryToStartAnother() {
        if (this._queue.size === 0) {
            // We can clear the interval ("pause")
            // Because we can redo it later ("resume")
            if (this._intervalId) {
                clearInterval(this._intervalId);
            }
            this._intervalId = undefined;
            this._resolvePromises();
            return false;
        }
        if (!this._isPaused) {
            const canInitializeInterval = !this._isIntervalPaused();
            if (this._doesIntervalAllowAnother && this._doesConcurrentAllowAnother) {
                const job = this._queue.dequeue();
                if (!job) {
                    return false;
                }
                this.emit('active');
                job();
                if (canInitializeInterval) {
                    this._initializeIntervalIfNeeded();
                }
                return true;
            }
        }
        return false;
    }
    _initializeIntervalIfNeeded() {
        if (this._isIntervalIgnored || this._intervalId !== undefined) {
            return;
        }
        this._intervalId = setInterval(() => {
            this._onInterval();
        }, this._interval);
        this._intervalEnd = Date.now() + this._interval;
    }
    _onInterval() {
        if (this._intervalCount === 0 && this._pendingCount === 0 && this._intervalId) {
            clearInterval(this._intervalId);
            this._intervalId = undefined;
        }
        this._intervalCount = this._carryoverConcurrencyCount ? this._pendingCount : 0;
        this._processQueue();
    }
    /**
    Executes all queued functions until it reaches the limit.
    */
    _processQueue() {
        // eslint-disable-next-line no-empty
        while (this._tryToStartAnother()) { }
    }
    get concurrency() {
        return this._concurrency;
    }
    set concurrency(newConcurrency) {
        if (!(typeof newConcurrency === 'number' && newConcurrency >= 1)) {
            throw new TypeError(`Expected \`concurrency\` to be a number from 1 and up, got \`${newConcurrency}\` (${typeof newConcurrency})`);
        }
        this._concurrency = newConcurrency;
        this._processQueue();
    }
    /**
    Adds a sync or async task to the queue. Always returns a promise.
    */
    async add(fn, options = {}) {
        return new Promise((resolve, reject) => {
            const run = async () => {
                this._pendingCount++;
                this._intervalCount++;
                try {
                    const operation = (this._timeout === undefined && options.timeout === undefined) ? fn() : p_timeout_1.default(Promise.resolve(fn()), (options.timeout === undefined ? this._timeout : options.timeout), () => {
                        if (options.throwOnTimeout === undefined ? this._throwOnTimeout : options.throwOnTimeout) {
                            reject(timeoutError);
                        }
                        return undefined;
                    });
                    resolve(await operation);
                }
                catch (error) {
                    reject(error);
                }
                this._next();
            };
            this._queue.enqueue(run, options);
            this._tryToStartAnother();
            this.emit('add');
        });
    }
    /**
    Same as `.add()`, but accepts an array of sync or async functions.

    @returns A promise that resolves when all functions are resolved.
    */
    async addAll(functions, options) {
        return Promise.all(functions.map(async (function_) => this.add(function_, options)));
    }
    /**
    Start (or resume) executing enqueued tasks within concurrency limit. No need to call this if queue is not paused (via `options.autoStart = false` or by `.pause()` method.)
    */
    start() {
        if (!this._isPaused) {
            return this;
        }
        this._isPaused = false;
        this._processQueue();
        return this;
    }
    /**
    Put queue execution on hold.
    */
    pause() {
        this._isPaused = true;
    }
    /**
    Clear the queue.
    */
    clear() {
        this._queue = new this._queueClass();
    }
    /**
    Can be called multiple times. Useful if you for example add additional items at a later time.

    @returns A promise that settles when the queue becomes empty.
    */
    async onEmpty() {
        // Instantly resolve if the queue is empty
        if (this._queue.size === 0) {
            return;
        }
        return new Promise(resolve => {
            const existingResolve = this._resolveEmpty;
            this._resolveEmpty = () => {
                existingResolve();
                resolve();
            };
        });
    }
    /**
    The difference with `.onEmpty` is that `.onIdle` guarantees that all work from the queue has finished. `.onEmpty` merely signals that the queue is empty, but it could mean that some promises haven't completed yet.

    @returns A promise that settles when the queue becomes empty, and all promises have completed; `queue.size === 0 && queue.pending === 0`.
    */
    async onIdle() {
        // Instantly resolve if none pending and if nothing else is queued
        if (this._pendingCount === 0 && this._queue.size === 0) {
            return;
        }
        return new Promise(resolve => {
            const existingResolve = this._resolveIdle;
            this._resolveIdle = () => {
                existingResolve();
                resolve();
            };
        });
    }
    /**
    Size of the queue.
    */
    get size() {
        return this._queue.size;
    }
    /**
    Size of the queue, filtered by the given options.

    For example, this can be used to find the number of items remaining in the queue with a specific priority level.
    */
    sizeBy(options) {
        // eslint-disable-next-line unicorn/no-fn-reference-in-iterator
        return this._queue.filter(options).length;
    }
    /**
    Number of pending promises.
    */
    get pending() {
        return this._pendingCount;
    }
    /**
    Whether the queue is currently paused.
    */
    get isPaused() {
        return this._isPaused;
    }
    get timeout() {
        return this._timeout;
    }
    /**
    Set the timeout for future operations.
    */
    set timeout(milliseconds) {
        this._timeout = milliseconds;
    }
}
exports.Z = PQueue;


/***/ }),

/***/ 918:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
// Port of lower_bound from https://en.cppreference.com/w/cpp/algorithm/lower_bound
// Used to compute insertion index to keep queue sorted after insertion
function lowerBound(array, value, comparator) {
    let first = 0;
    let count = array.length;
    while (count > 0) {
        const step = (count / 2) | 0;
        let it = first + step;
        if (comparator(array[it], value) <= 0) {
            first = ++it;
            count -= step + 1;
        }
        else {
            count = step;
        }
    }
    return first;
}
exports["default"] = lowerBound;


/***/ }),

/***/ 906:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const lower_bound_1 = __webpack_require__(918);
class PriorityQueue {
    constructor() {
        this._queue = [];
    }
    enqueue(run, options) {
        options = Object.assign({ priority: 0 }, options);
        const element = {
            priority: options.priority,
            run
        };
        if (this.size && this._queue[this.size - 1].priority >= options.priority) {
            this._queue.push(element);
            return;
        }
        const index = lower_bound_1.default(this._queue, element, (a, b) => b.priority - a.priority);
        this._queue.splice(index, 0, element);
    }
    dequeue() {
        const item = this._queue.shift();
        return item === null || item === void 0 ? void 0 : item.run;
    }
    filter(options) {
        return this._queue.filter((element) => element.priority === options.priority).map((element) => element.run);
    }
    get size() {
        return this._queue.length;
    }
}
exports["default"] = PriorityQueue;


/***/ }),

/***/ 499:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


const pFinally = __webpack_require__(306);

class TimeoutError extends Error {
	constructor(message) {
		super(message);
		this.name = 'TimeoutError';
	}
}

const pTimeout = (promise, milliseconds, fallback) => new Promise((resolve, reject) => {
	if (typeof milliseconds !== 'number' || milliseconds < 0) {
		throw new TypeError('Expected `milliseconds` to be a positive number');
	}

	if (milliseconds === Infinity) {
		resolve(promise);
		return;
	}

	const timer = setTimeout(() => {
		if (typeof fallback === 'function') {
			try {
				resolve(fallback());
			} catch (error) {
				reject(error);
			}

			return;
		}

		const message = typeof fallback === 'string' ? fallback : `Promise timed out after ${milliseconds} milliseconds`;
		const timeoutError = fallback instanceof Error ? fallback : new TimeoutError(message);

		if (typeof promise.cancel === 'function') {
			promise.cancel();
		}

		reject(timeoutError);
	}, milliseconds);

	// TODO: Use native `finally` keyword when targeting Node.js 10
	pFinally(
		// eslint-disable-next-line promise/prefer-await-to-then
		promise.then(resolve, reject),
		() => {
			clearTimeout(timer);
		}
	);
});

module.exports = pTimeout;
// TODO: Remove this for the next major release
module.exports["default"] = pTimeout;

module.exports.TimeoutError = TimeoutError;


/***/ }),

/***/ 386:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MultiDrag: function() { return /* binding */ MultiDragPlugin; },
/* harmony export */   Sortable: function() { return /* binding */ Sortable; },
/* harmony export */   Swap: function() { return /* binding */ SwapPlugin; }
/* harmony export */ });
/**!
 * Sortable 1.10.2
 * @author	RubaXa   <trash@rubaxa.org>
 * @author	owenm    <owen23355@gmail.com>
 * @license MIT
 */
function _typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function (obj) {
      return typeof obj;
    };
  } else {
    _typeof = function (obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

    return arr2;
  }
}

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

var version = "1.10.2";

function userAgent(pattern) {
  if (typeof window !== 'undefined' && window.navigator) {
    return !!
    /*@__PURE__*/
    navigator.userAgent.match(pattern);
  }
}

var IE11OrLess = userAgent(/(?:Trident.*rv[ :]?11\.|msie|iemobile|Windows Phone)/i);
var Edge = userAgent(/Edge/i);
var FireFox = userAgent(/firefox/i);
var Safari = userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);
var IOS = userAgent(/iP(ad|od|hone)/i);
var ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);

var captureMode = {
  capture: false,
  passive: false
};

function on(el, event, fn) {
  el.addEventListener(event, fn, !IE11OrLess && captureMode);
}

function off(el, event, fn) {
  el.removeEventListener(event, fn, !IE11OrLess && captureMode);
}

function matches(
/**HTMLElement*/
el,
/**String*/
selector) {
  if (!selector) return;
  selector[0] === '>' && (selector = selector.substring(1));

  if (el) {
    try {
      if (el.matches) {
        return el.matches(selector);
      } else if (el.msMatchesSelector) {
        return el.msMatchesSelector(selector);
      } else if (el.webkitMatchesSelector) {
        return el.webkitMatchesSelector(selector);
      }
    } catch (_) {
      return false;
    }
  }

  return false;
}

function getParentOrHost(el) {
  return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;
}

function closest(
/**HTMLElement*/
el,
/**String*/
selector,
/**HTMLElement*/
ctx, includeCTX) {
  if (el) {
    ctx = ctx || document;

    do {
      if (selector != null && (selector[0] === '>' ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {
        return el;
      }

      if (el === ctx) break;
      /* jshint boss:true */
    } while (el = getParentOrHost(el));
  }

  return null;
}

var R_SPACE = /\s+/g;

function toggleClass(el, name, state) {
  if (el && name) {
    if (el.classList) {
      el.classList[state ? 'add' : 'remove'](name);
    } else {
      var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');
      el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');
    }
  }
}

function css(el, prop, val) {
  var style = el && el.style;

  if (style) {
    if (val === void 0) {
      if (document.defaultView && document.defaultView.getComputedStyle) {
        val = document.defaultView.getComputedStyle(el, '');
      } else if (el.currentStyle) {
        val = el.currentStyle;
      }

      return prop === void 0 ? val : val[prop];
    } else {
      if (!(prop in style) && prop.indexOf('webkit') === -1) {
        prop = '-webkit-' + prop;
      }

      style[prop] = val + (typeof val === 'string' ? '' : 'px');
    }
  }
}

function matrix(el, selfOnly) {
  var appliedTransforms = '';

  if (typeof el === 'string') {
    appliedTransforms = el;
  } else {
    do {
      var transform = css(el, 'transform');

      if (transform && transform !== 'none') {
        appliedTransforms = transform + ' ' + appliedTransforms;
      }
      /* jshint boss:true */

    } while (!selfOnly && (el = el.parentNode));
  }

  var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;
  /*jshint -W056 */

  return matrixFn && new matrixFn(appliedTransforms);
}

function find(ctx, tagName, iterator) {
  if (ctx) {
    var list = ctx.getElementsByTagName(tagName),
        i = 0,
        n = list.length;

    if (iterator) {
      for (; i < n; i++) {
        iterator(list[i], i);
      }
    }

    return list;
  }

  return [];
}

function getWindowScrollingElement() {
  var scrollingElement = document.scrollingElement;

  if (scrollingElement) {
    return scrollingElement;
  } else {
    return document.documentElement;
  }
}
/**
 * Returns the "bounding client rect" of given element
 * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted
 * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container
 * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr
 * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone
 * @param  {[HTMLElement]} container              The parent the element will be placed in
 * @return {Object}                               The boundingClientRect of el, with specified adjustments
 */


function getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container) {
  if (!el.getBoundingClientRect && el !== window) return;
  var elRect, top, left, bottom, right, height, width;

  if (el !== window && el !== getWindowScrollingElement()) {
    elRect = el.getBoundingClientRect();
    top = elRect.top;
    left = elRect.left;
    bottom = elRect.bottom;
    right = elRect.right;
    height = elRect.height;
    width = elRect.width;
  } else {
    top = 0;
    left = 0;
    bottom = window.innerHeight;
    right = window.innerWidth;
    height = window.innerHeight;
    width = window.innerWidth;
  }

  if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {
    // Adjust for translate()
    container = container || el.parentNode; // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)
    // Not needed on <= IE11

    if (!IE11OrLess) {
      do {
        if (container && container.getBoundingClientRect && (css(container, 'transform') !== 'none' || relativeToNonStaticParent && css(container, 'position') !== 'static')) {
          var containerRect = container.getBoundingClientRect(); // Set relative to edges of padding box of container

          top -= containerRect.top + parseInt(css(container, 'border-top-width'));
          left -= containerRect.left + parseInt(css(container, 'border-left-width'));
          bottom = top + elRect.height;
          right = left + elRect.width;
          break;
        }
        /* jshint boss:true */

      } while (container = container.parentNode);
    }
  }

  if (undoScale && el !== window) {
    // Adjust for scale()
    var elMatrix = matrix(container || el),
        scaleX = elMatrix && elMatrix.a,
        scaleY = elMatrix && elMatrix.d;

    if (elMatrix) {
      top /= scaleY;
      left /= scaleX;
      width /= scaleX;
      height /= scaleY;
      bottom = top + height;
      right = left + width;
    }
  }

  return {
    top: top,
    left: left,
    bottom: bottom,
    right: right,
    width: width,
    height: height
  };
}
/**
 * Checks if a side of an element is scrolled past a side of its parents
 * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question
 * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')
 * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')
 * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element
 */


function isScrolledPast(el, elSide, parentSide) {
  var parent = getParentAutoScrollElement(el, true),
      elSideVal = getRect(el)[elSide];
  /* jshint boss:true */

  while (parent) {
    var parentSideVal = getRect(parent)[parentSide],
        visible = void 0;

    if (parentSide === 'top' || parentSide === 'left') {
      visible = elSideVal >= parentSideVal;
    } else {
      visible = elSideVal <= parentSideVal;
    }

    if (!visible) return parent;
    if (parent === getWindowScrollingElement()) break;
    parent = getParentAutoScrollElement(parent, false);
  }

  return false;
}
/**
 * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)
 * and non-draggable elements
 * @param  {HTMLElement} el       The parent element
 * @param  {Number} childNum      The index of the child
 * @param  {Object} options       Parent Sortable's options
 * @return {HTMLElement}          The child at index childNum, or null if not found
 */


function getChild(el, childNum, options) {
  var currentChild = 0,
      i = 0,
      children = el.children;

  while (i < children.length) {
    if (children[i].style.display !== 'none' && children[i] !== Sortable.ghost && children[i] !== Sortable.dragged && closest(children[i], options.draggable, el, false)) {
      if (currentChild === childNum) {
        return children[i];
      }

      currentChild++;
    }

    i++;
  }

  return null;
}
/**
 * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)
 * @param  {HTMLElement} el       Parent element
 * @param  {selector} selector    Any other elements that should be ignored
 * @return {HTMLElement}          The last child, ignoring ghostEl
 */


function lastChild(el, selector) {
  var last = el.lastElementChild;

  while (last && (last === Sortable.ghost || css(last, 'display') === 'none' || selector && !matches(last, selector))) {
    last = last.previousElementSibling;
  }

  return last || null;
}
/**
 * Returns the index of an element within its parent for a selected set of
 * elements
 * @param  {HTMLElement} el
 * @param  {selector} selector
 * @return {number}
 */


function index(el, selector) {
  var index = 0;

  if (!el || !el.parentNode) {
    return -1;
  }
  /* jshint boss:true */


  while (el = el.previousElementSibling) {
    if (el.nodeName.toUpperCase() !== 'TEMPLATE' && el !== Sortable.clone && (!selector || matches(el, selector))) {
      index++;
    }
  }

  return index;
}
/**
 * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.
 * The value is returned in real pixels.
 * @param  {HTMLElement} el
 * @return {Array}             Offsets in the format of [left, top]
 */


function getRelativeScrollOffset(el) {
  var offsetLeft = 0,
      offsetTop = 0,
      winScroller = getWindowScrollingElement();

  if (el) {
    do {
      var elMatrix = matrix(el),
          scaleX = elMatrix.a,
          scaleY = elMatrix.d;
      offsetLeft += el.scrollLeft * scaleX;
      offsetTop += el.scrollTop * scaleY;
    } while (el !== winScroller && (el = el.parentNode));
  }

  return [offsetLeft, offsetTop];
}
/**
 * Returns the index of the object within the given array
 * @param  {Array} arr   Array that may or may not hold the object
 * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find
 * @return {Number}      The index of the object in the array, or -1
 */


function indexOfObject(arr, obj) {
  for (var i in arr) {
    if (!arr.hasOwnProperty(i)) continue;

    for (var key in obj) {
      if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);
    }
  }

  return -1;
}

function getParentAutoScrollElement(el, includeSelf) {
  // skip to window
  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();
  var elem = el;
  var gotSelf = false;

  do {
    // we don't need to get elem css if it isn't even overflowing in the first place (performance)
    if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {
      var elemCSS = css(elem);

      if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')) {
        if (!elem.getBoundingClientRect || elem === document.body) return getWindowScrollingElement();
        if (gotSelf || includeSelf) return elem;
        gotSelf = true;
      }
    }
    /* jshint boss:true */

  } while (elem = elem.parentNode);

  return getWindowScrollingElement();
}

function extend(dst, src) {
  if (dst && src) {
    for (var key in src) {
      if (src.hasOwnProperty(key)) {
        dst[key] = src[key];
      }
    }
  }

  return dst;
}

function isRectEqual(rect1, rect2) {
  return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);
}

var _throttleTimeout;

function throttle(callback, ms) {
  return function () {
    if (!_throttleTimeout) {
      var args = arguments,
          _this = this;

      if (args.length === 1) {
        callback.call(_this, args[0]);
      } else {
        callback.apply(_this, args);
      }

      _throttleTimeout = setTimeout(function () {
        _throttleTimeout = void 0;
      }, ms);
    }
  };
}

function cancelThrottle() {
  clearTimeout(_throttleTimeout);
  _throttleTimeout = void 0;
}

function scrollBy(el, x, y) {
  el.scrollLeft += x;
  el.scrollTop += y;
}

function clone(el) {
  var Polymer = window.Polymer;
  var $ = window.jQuery || window.Zepto;

  if (Polymer && Polymer.dom) {
    return Polymer.dom(el).cloneNode(true);
  } else if ($) {
    return $(el).clone(true)[0];
  } else {
    return el.cloneNode(true);
  }
}

function setRect(el, rect) {
  css(el, 'position', 'absolute');
  css(el, 'top', rect.top);
  css(el, 'left', rect.left);
  css(el, 'width', rect.width);
  css(el, 'height', rect.height);
}

function unsetRect(el) {
  css(el, 'position', '');
  css(el, 'top', '');
  css(el, 'left', '');
  css(el, 'width', '');
  css(el, 'height', '');
}

var expando = 'Sortable' + new Date().getTime();

function AnimationStateManager() {
  var animationStates = [],
      animationCallbackId;
  return {
    captureAnimationState: function captureAnimationState() {
      animationStates = [];
      if (!this.options.animation) return;
      var children = [].slice.call(this.el.children);
      children.forEach(function (child) {
        if (css(child, 'display') === 'none' || child === Sortable.ghost) return;
        animationStates.push({
          target: child,
          rect: getRect(child)
        });

        var fromRect = _objectSpread({}, animationStates[animationStates.length - 1].rect); // If animating: compensate for current animation


        if (child.thisAnimationDuration) {
          var childMatrix = matrix(child, true);

          if (childMatrix) {
            fromRect.top -= childMatrix.f;
            fromRect.left -= childMatrix.e;
          }
        }

        child.fromRect = fromRect;
      });
    },
    addAnimationState: function addAnimationState(state) {
      animationStates.push(state);
    },
    removeAnimationState: function removeAnimationState(target) {
      animationStates.splice(indexOfObject(animationStates, {
        target: target
      }), 1);
    },
    animateAll: function animateAll(callback) {
      var _this = this;

      if (!this.options.animation) {
        clearTimeout(animationCallbackId);
        if (typeof callback === 'function') callback();
        return;
      }

      var animating = false,
          animationTime = 0;
      animationStates.forEach(function (state) {
        var time = 0,
            target = state.target,
            fromRect = target.fromRect,
            toRect = getRect(target),
            prevFromRect = target.prevFromRect,
            prevToRect = target.prevToRect,
            animatingRect = state.rect,
            targetMatrix = matrix(target, true);

        if (targetMatrix) {
          // Compensate for current animation
          toRect.top -= targetMatrix.f;
          toRect.left -= targetMatrix.e;
        }

        target.toRect = toRect;

        if (target.thisAnimationDuration) {
          // Could also check if animatingRect is between fromRect and toRect
          if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) && // Make sure animatingRect is on line between toRect & fromRect
          (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {
            // If returning to same place as started from animation and on same axis
            time = calculateRealTime(animatingRect, prevFromRect, prevToRect, _this.options);
          }
        } // if fromRect != toRect: animate


        if (!isRectEqual(toRect, fromRect)) {
          target.prevFromRect = fromRect;
          target.prevToRect = toRect;

          if (!time) {
            time = _this.options.animation;
          }

          _this.animate(target, animatingRect, toRect, time);
        }

        if (time) {
          animating = true;
          animationTime = Math.max(animationTime, time);
          clearTimeout(target.animationResetTimer);
          target.animationResetTimer = setTimeout(function () {
            target.animationTime = 0;
            target.prevFromRect = null;
            target.fromRect = null;
            target.prevToRect = null;
            target.thisAnimationDuration = null;
          }, time);
          target.thisAnimationDuration = time;
        }
      });
      clearTimeout(animationCallbackId);

      if (!animating) {
        if (typeof callback === 'function') callback();
      } else {
        animationCallbackId = setTimeout(function () {
          if (typeof callback === 'function') callback();
        }, animationTime);
      }

      animationStates = [];
    },
    animate: function animate(target, currentRect, toRect, duration) {
      if (duration) {
        css(target, 'transition', '');
        css(target, 'transform', '');
        var elMatrix = matrix(this.el),
            scaleX = elMatrix && elMatrix.a,
            scaleY = elMatrix && elMatrix.d,
            translateX = (currentRect.left - toRect.left) / (scaleX || 1),
            translateY = (currentRect.top - toRect.top) / (scaleY || 1);
        target.animatingX = !!translateX;
        target.animatingY = !!translateY;
        css(target, 'transform', 'translate3d(' + translateX + 'px,' + translateY + 'px,0)');
        repaint(target); // repaint

        css(target, 'transition', 'transform ' + duration + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));
        css(target, 'transform', 'translate3d(0,0,0)');
        typeof target.animated === 'number' && clearTimeout(target.animated);
        target.animated = setTimeout(function () {
          css(target, 'transition', '');
          css(target, 'transform', '');
          target.animated = false;
          target.animatingX = false;
          target.animatingY = false;
        }, duration);
      }
    }
  };
}

function repaint(target) {
  return target.offsetWidth;
}

function calculateRealTime(animatingRect, fromRect, toRect, options) {
  return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;
}

var plugins = [];
var defaults = {
  initializeByDefault: true
};
var PluginManager = {
  mount: function mount(plugin) {
    // Set default static properties
    for (var option in defaults) {
      if (defaults.hasOwnProperty(option) && !(option in plugin)) {
        plugin[option] = defaults[option];
      }
    }

    plugins.push(plugin);
  },
  pluginEvent: function pluginEvent(eventName, sortable, evt) {
    var _this = this;

    this.eventCanceled = false;

    evt.cancel = function () {
      _this.eventCanceled = true;
    };

    var eventNameGlobal = eventName + 'Global';
    plugins.forEach(function (plugin) {
      if (!sortable[plugin.pluginName]) return; // Fire global events if it exists in this sortable

      if (sortable[plugin.pluginName][eventNameGlobal]) {
        sortable[plugin.pluginName][eventNameGlobal](_objectSpread({
          sortable: sortable
        }, evt));
      } // Only fire plugin event if plugin is enabled in this sortable,
      // and plugin has event defined


      if (sortable.options[plugin.pluginName] && sortable[plugin.pluginName][eventName]) {
        sortable[plugin.pluginName][eventName](_objectSpread({
          sortable: sortable
        }, evt));
      }
    });
  },
  initializePlugins: function initializePlugins(sortable, el, defaults, options) {
    plugins.forEach(function (plugin) {
      var pluginName = plugin.pluginName;
      if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;
      var initialized = new plugin(sortable, el, sortable.options);
      initialized.sortable = sortable;
      initialized.options = sortable.options;
      sortable[pluginName] = initialized; // Add default options from plugin

      _extends(defaults, initialized.defaults);
    });

    for (var option in sortable.options) {
      if (!sortable.options.hasOwnProperty(option)) continue;
      var modified = this.modifyOption(sortable, option, sortable.options[option]);

      if (typeof modified !== 'undefined') {
        sortable.options[option] = modified;
      }
    }
  },
  getEventProperties: function getEventProperties(name, sortable) {
    var eventProperties = {};
    plugins.forEach(function (plugin) {
      if (typeof plugin.eventProperties !== 'function') return;

      _extends(eventProperties, plugin.eventProperties.call(sortable[plugin.pluginName], name));
    });
    return eventProperties;
  },
  modifyOption: function modifyOption(sortable, name, value) {
    var modifiedValue;
    plugins.forEach(function (plugin) {
      // Plugin must exist on the Sortable
      if (!sortable[plugin.pluginName]) return; // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin

      if (plugin.optionListeners && typeof plugin.optionListeners[name] === 'function') {
        modifiedValue = plugin.optionListeners[name].call(sortable[plugin.pluginName], value);
      }
    });
    return modifiedValue;
  }
};

function dispatchEvent(_ref) {
  var sortable = _ref.sortable,
      rootEl = _ref.rootEl,
      name = _ref.name,
      targetEl = _ref.targetEl,
      cloneEl = _ref.cloneEl,
      toEl = _ref.toEl,
      fromEl = _ref.fromEl,
      oldIndex = _ref.oldIndex,
      newIndex = _ref.newIndex,
      oldDraggableIndex = _ref.oldDraggableIndex,
      newDraggableIndex = _ref.newDraggableIndex,
      originalEvent = _ref.originalEvent,
      putSortable = _ref.putSortable,
      extraEventProperties = _ref.extraEventProperties;
  sortable = sortable || rootEl && rootEl[expando];
  if (!sortable) return;
  var evt,
      options = sortable.options,
      onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1); // Support for new CustomEvent feature

  if (window.CustomEvent && !IE11OrLess && !Edge) {
    evt = new CustomEvent(name, {
      bubbles: true,
      cancelable: true
    });
  } else {
    evt = document.createEvent('Event');
    evt.initEvent(name, true, true);
  }

  evt.to = toEl || rootEl;
  evt.from = fromEl || rootEl;
  evt.item = targetEl || rootEl;
  evt.clone = cloneEl;
  evt.oldIndex = oldIndex;
  evt.newIndex = newIndex;
  evt.oldDraggableIndex = oldDraggableIndex;
  evt.newDraggableIndex = newDraggableIndex;
  evt.originalEvent = originalEvent;
  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;

  var allEventProperties = _objectSpread({}, extraEventProperties, PluginManager.getEventProperties(name, sortable));

  for (var option in allEventProperties) {
    evt[option] = allEventProperties[option];
  }

  if (rootEl) {
    rootEl.dispatchEvent(evt);
  }

  if (options[onName]) {
    options[onName].call(sortable, evt);
  }
}

var pluginEvent = function pluginEvent(eventName, sortable) {
  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
      originalEvent = _ref.evt,
      data = _objectWithoutProperties(_ref, ["evt"]);

  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread({
    dragEl: dragEl,
    parentEl: parentEl,
    ghostEl: ghostEl,
    rootEl: rootEl,
    nextEl: nextEl,
    lastDownEl: lastDownEl,
    cloneEl: cloneEl,
    cloneHidden: cloneHidden,
    dragStarted: moved,
    putSortable: putSortable,
    activeSortable: Sortable.active,
    originalEvent: originalEvent,
    oldIndex: oldIndex,
    oldDraggableIndex: oldDraggableIndex,
    newIndex: newIndex,
    newDraggableIndex: newDraggableIndex,
    hideGhostForTarget: _hideGhostForTarget,
    unhideGhostForTarget: _unhideGhostForTarget,
    cloneNowHidden: function cloneNowHidden() {
      cloneHidden = true;
    },
    cloneNowShown: function cloneNowShown() {
      cloneHidden = false;
    },
    dispatchSortableEvent: function dispatchSortableEvent(name) {
      _dispatchEvent({
        sortable: sortable,
        name: name,
        originalEvent: originalEvent
      });
    }
  }, data));
};

function _dispatchEvent(info) {
  dispatchEvent(_objectSpread({
    putSortable: putSortable,
    cloneEl: cloneEl,
    targetEl: dragEl,
    rootEl: rootEl,
    oldIndex: oldIndex,
    oldDraggableIndex: oldDraggableIndex,
    newIndex: newIndex,
    newDraggableIndex: newDraggableIndex
  }, info));
}

var dragEl,
    parentEl,
    ghostEl,
    rootEl,
    nextEl,
    lastDownEl,
    cloneEl,
    cloneHidden,
    oldIndex,
    newIndex,
    oldDraggableIndex,
    newDraggableIndex,
    activeGroup,
    putSortable,
    awaitingDragStarted = false,
    ignoreNextClick = false,
    sortables = [],
    tapEvt,
    touchEvt,
    lastDx,
    lastDy,
    tapDistanceLeft,
    tapDistanceTop,
    moved,
    lastTarget,
    lastDirection,
    pastFirstInvertThresh = false,
    isCircumstantialInvert = false,
    targetMoveDistance,
    // For positioning ghost absolutely
ghostRelativeParent,
    ghostRelativeParentInitialScroll = [],
    // (left, top)
_silent = false,
    savedInputChecked = [];
/** @const */

var documentExists = typeof document !== 'undefined',
    PositionGhostAbsolutely = IOS,
    CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',
    // This will not pass for IE9, because IE9 DnD only works on anchors
supportDraggable = documentExists && !ChromeForAndroid && !IOS && 'draggable' in document.createElement('div'),
    supportCssPointerEvents = function () {
  if (!documentExists) return; // false when <= IE11

  if (IE11OrLess) {
    return false;
  }

  var el = document.createElement('x');
  el.style.cssText = 'pointer-events:auto';
  return el.style.pointerEvents === 'auto';
}(),
    _detectDirection = function _detectDirection(el, options) {
  var elCSS = css(el),
      elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth),
      child1 = getChild(el, 0, options),
      child2 = getChild(el, 1, options),
      firstChildCSS = child1 && css(child1),
      secondChildCSS = child2 && css(child2),
      firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width,
      secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;

  if (elCSS.display === 'flex') {
    return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse' ? 'vertical' : 'horizontal';
  }

  if (elCSS.display === 'grid') {
    return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';
  }

  if (child1 && firstChildCSS["float"] && firstChildCSS["float"] !== 'none') {
    var touchingSideChild2 = firstChildCSS["float"] === 'left' ? 'left' : 'right';
    return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ? 'vertical' : 'horizontal';
  }

  return child1 && (firstChildCSS.display === 'block' || firstChildCSS.display === 'flex' || firstChildCSS.display === 'table' || firstChildCSS.display === 'grid' || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === 'none' || child2 && elCSS[CSSFloatProperty] === 'none' && firstChildWidth + secondChildWidth > elWidth) ? 'vertical' : 'horizontal';
},
    _dragElInRowColumn = function _dragElInRowColumn(dragRect, targetRect, vertical) {
  var dragElS1Opp = vertical ? dragRect.left : dragRect.top,
      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,
      dragElOppLength = vertical ? dragRect.width : dragRect.height,
      targetS1Opp = vertical ? targetRect.left : targetRect.top,
      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,
      targetOppLength = vertical ? targetRect.width : targetRect.height;
  return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;
},

/**
 * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.
 * @param  {Number} x      X position
 * @param  {Number} y      Y position
 * @return {HTMLElement}   Element of the first found nearest Sortable
 */
_detectNearestEmptySortable = function _detectNearestEmptySortable(x, y) {
  var ret;
  sortables.some(function (sortable) {
    if (lastChild(sortable)) return;
    var rect = getRect(sortable),
        threshold = sortable[expando].options.emptyInsertThreshold,
        insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold,
        insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;

    if (threshold && insideHorizontally && insideVertically) {
      return ret = sortable;
    }
  });
  return ret;
},
    _prepareGroup = function _prepareGroup(options) {
  function toFn(value, pull) {
    return function (to, from, dragEl, evt) {
      var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;

      if (value == null && (pull || sameGroup)) {
        // Default pull value
        // Default pull and put value if same group
        return true;
      } else if (value == null || value === false) {
        return false;
      } else if (pull && value === 'clone') {
        return value;
      } else if (typeof value === 'function') {
        return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);
      } else {
        var otherGroup = (pull ? to : from).options.group.name;
        return value === true || typeof value === 'string' && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;
      }
    };
  }

  var group = {};
  var originalGroup = options.group;

  if (!originalGroup || _typeof(originalGroup) != 'object') {
    originalGroup = {
      name: originalGroup
    };
  }

  group.name = originalGroup.name;
  group.checkPull = toFn(originalGroup.pull, true);
  group.checkPut = toFn(originalGroup.put);
  group.revertClone = originalGroup.revertClone;
  options.group = group;
},
    _hideGhostForTarget = function _hideGhostForTarget() {
  if (!supportCssPointerEvents && ghostEl) {
    css(ghostEl, 'display', 'none');
  }
},
    _unhideGhostForTarget = function _unhideGhostForTarget() {
  if (!supportCssPointerEvents && ghostEl) {
    css(ghostEl, 'display', '');
  }
}; // #1184 fix - Prevent click event on fallback if dragged but item not changed position


if (documentExists) {
  document.addEventListener('click', function (evt) {
    if (ignoreNextClick) {
      evt.preventDefault();
      evt.stopPropagation && evt.stopPropagation();
      evt.stopImmediatePropagation && evt.stopImmediatePropagation();
      ignoreNextClick = false;
      return false;
    }
  }, true);
}

var nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent(evt) {
  if (dragEl) {
    evt = evt.touches ? evt.touches[0] : evt;

    var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);

    if (nearest) {
      // Create imitation event
      var event = {};

      for (var i in evt) {
        if (evt.hasOwnProperty(i)) {
          event[i] = evt[i];
        }
      }

      event.target = event.rootEl = nearest;
      event.preventDefault = void 0;
      event.stopPropagation = void 0;

      nearest[expando]._onDragOver(event);
    }
  }
};

var _checkOutsideTargetEl = function _checkOutsideTargetEl(evt) {
  if (dragEl) {
    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);
  }
};
/**
 * @class  Sortable
 * @param  {HTMLElement}  el
 * @param  {Object}       [options]
 */


function Sortable(el, options) {
  if (!(el && el.nodeType && el.nodeType === 1)) {
    throw "Sortable: `el` must be an HTMLElement, not ".concat({}.toString.call(el));
  }

  this.el = el; // root element

  this.options = options = _extends({}, options); // Export instance

  el[expando] = this;
  var defaults = {
    group: null,
    sort: true,
    disabled: false,
    store: null,
    handle: null,
    draggable: /^[uo]l$/i.test(el.nodeName) ? '>li' : '>*',
    swapThreshold: 1,
    // percentage; 0 <= x <= 1
    invertSwap: false,
    // invert always
    invertedSwapThreshold: null,
    // will be set to same as swapThreshold if default
    removeCloneOnHide: true,
    direction: function direction() {
      return _detectDirection(el, this.options);
    },
    ghostClass: 'sortable-ghost',
    chosenClass: 'sortable-chosen',
    dragClass: 'sortable-drag',
    ignore: 'a, img',
    filter: null,
    preventOnFilter: true,
    animation: 0,
    easing: null,
    setData: function setData(dataTransfer, dragEl) {
      dataTransfer.setData('Text', dragEl.textContent);
    },
    dropBubble: false,
    dragoverBubble: false,
    dataIdAttr: 'data-id',
    delay: 0,
    delayOnTouchOnly: false,
    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,
    forceFallback: false,
    fallbackClass: 'sortable-fallback',
    fallbackOnBody: false,
    fallbackTolerance: 0,
    fallbackOffset: {
      x: 0,
      y: 0
    },
    supportPointer: Sortable.supportPointer !== false && 'PointerEvent' in window,
    emptyInsertThreshold: 5
  };
  PluginManager.initializePlugins(this, el, defaults); // Set default options

  for (var name in defaults) {
    !(name in options) && (options[name] = defaults[name]);
  }

  _prepareGroup(options); // Bind all private methods


  for (var fn in this) {
    if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {
      this[fn] = this[fn].bind(this);
    }
  } // Setup drag mode


  this.nativeDraggable = options.forceFallback ? false : supportDraggable;

  if (this.nativeDraggable) {
    // Touch start threshold cannot be greater than the native dragstart threshold
    this.options.touchStartThreshold = 1;
  } // Bind events


  if (options.supportPointer) {
    on(el, 'pointerdown', this._onTapStart);
  } else {
    on(el, 'mousedown', this._onTapStart);
    on(el, 'touchstart', this._onTapStart);
  }

  if (this.nativeDraggable) {
    on(el, 'dragover', this);
    on(el, 'dragenter', this);
  }

  sortables.push(this.el); // Restore sorting

  options.store && options.store.get && this.sort(options.store.get(this) || []); // Add animation state manager

  _extends(this, AnimationStateManager());
}

Sortable.prototype =
/** @lends Sortable.prototype */
{
  constructor: Sortable,
  _isOutsideThisEl: function _isOutsideThisEl(target) {
    if (!this.el.contains(target) && target !== this.el) {
      lastTarget = null;
    }
  },
  _getDirection: function _getDirection(evt, target) {
    return typeof this.options.direction === 'function' ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;
  },
  _onTapStart: function _onTapStart(
  /** Event|TouchEvent */
  evt) {
    if (!evt.cancelable) return;

    var _this = this,
        el = this.el,
        options = this.options,
        preventOnFilter = options.preventOnFilter,
        type = evt.type,
        touch = evt.touches && evt.touches[0] || evt.pointerType && evt.pointerType === 'touch' && evt,
        target = (touch || evt).target,
        originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target,
        filter = options.filter;

    _saveInputCheckedState(el); // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.


    if (dragEl) {
      return;
    }

    if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {
      return; // only left button and enabled
    } // cancel dnd if original target is content editable


    if (originalTarget.isContentEditable) {
      return;
    }

    target = closest(target, options.draggable, el, false);

    if (target && target.animated) {
      return;
    }

    if (lastDownEl === target) {
      // Ignoring duplicate `down`
      return;
    } // Get the index of the dragged element within its parent


    oldIndex = index(target);
    oldDraggableIndex = index(target, options.draggable); // Check filter

    if (typeof filter === 'function') {
      if (filter.call(this, evt, target, this)) {
        _dispatchEvent({
          sortable: _this,
          rootEl: originalTarget,
          name: 'filter',
          targetEl: target,
          toEl: el,
          fromEl: el
        });

        pluginEvent('filter', _this, {
          evt: evt
        });
        preventOnFilter && evt.cancelable && evt.preventDefault();
        return; // cancel dnd
      }
    } else if (filter) {
      filter = filter.split(',').some(function (criteria) {
        criteria = closest(originalTarget, criteria.trim(), el, false);

        if (criteria) {
          _dispatchEvent({
            sortable: _this,
            rootEl: criteria,
            name: 'filter',
            targetEl: target,
            fromEl: el,
            toEl: el
          });

          pluginEvent('filter', _this, {
            evt: evt
          });
          return true;
        }
      });

      if (filter) {
        preventOnFilter && evt.cancelable && evt.preventDefault();
        return; // cancel dnd
      }
    }

    if (options.handle && !closest(originalTarget, options.handle, el, false)) {
      return;
    } // Prepare `dragstart`


    this._prepareDragStart(evt, touch, target);
  },
  _prepareDragStart: function _prepareDragStart(
  /** Event */
  evt,
  /** Touch */
  touch,
  /** HTMLElement */
  target) {
    var _this = this,
        el = _this.el,
        options = _this.options,
        ownerDocument = el.ownerDocument,
        dragStartFn;

    if (target && !dragEl && target.parentNode === el) {
      var dragRect = getRect(target);
      rootEl = el;
      dragEl = target;
      parentEl = dragEl.parentNode;
      nextEl = dragEl.nextSibling;
      lastDownEl = target;
      activeGroup = options.group;
      Sortable.dragged = dragEl;
      tapEvt = {
        target: dragEl,
        clientX: (touch || evt).clientX,
        clientY: (touch || evt).clientY
      };
      tapDistanceLeft = tapEvt.clientX - dragRect.left;
      tapDistanceTop = tapEvt.clientY - dragRect.top;
      this._lastX = (touch || evt).clientX;
      this._lastY = (touch || evt).clientY;
      dragEl.style['will-change'] = 'all';

      dragStartFn = function dragStartFn() {
        pluginEvent('delayEnded', _this, {
          evt: evt
        });

        if (Sortable.eventCanceled) {
          _this._onDrop();

          return;
        } // Delayed drag has been triggered
        // we can re-enable the events: touchmove/mousemove


        _this._disableDelayedDragEvents();

        if (!FireFox && _this.nativeDraggable) {
          dragEl.draggable = true;
        } // Bind the events: dragstart/dragend


        _this._triggerDragStart(evt, touch); // Drag start event


        _dispatchEvent({
          sortable: _this,
          name: 'choose',
          originalEvent: evt
        }); // Chosen item


        toggleClass(dragEl, options.chosenClass, true);
      }; // Disable "draggable"


      options.ignore.split(',').forEach(function (criteria) {
        find(dragEl, criteria.trim(), _disableDraggable);
      });
      on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);
      on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);
      on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);
      on(ownerDocument, 'mouseup', _this._onDrop);
      on(ownerDocument, 'touchend', _this._onDrop);
      on(ownerDocument, 'touchcancel', _this._onDrop); // Make dragEl draggable (must be before delay for FireFox)

      if (FireFox && this.nativeDraggable) {
        this.options.touchStartThreshold = 4;
        dragEl.draggable = true;
      }

      pluginEvent('delayStart', this, {
        evt: evt
      }); // Delay is impossible for native DnD in Edge or IE

      if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {
        if (Sortable.eventCanceled) {
          this._onDrop();

          return;
        } // If the user moves the pointer or let go the click or touch
        // before the delay has been reached:
        // disable the delayed drag


        on(ownerDocument, 'mouseup', _this._disableDelayedDrag);
        on(ownerDocument, 'touchend', _this._disableDelayedDrag);
        on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);
        on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);
        on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);
        options.supportPointer && on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);
        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);
      } else {
        dragStartFn();
      }
    }
  },
  _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler(
  /** TouchEvent|PointerEvent **/
  e) {
    var touch = e.touches ? e.touches[0] : e;

    if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {
      this._disableDelayedDrag();
    }
  },
  _disableDelayedDrag: function _disableDelayedDrag() {
    dragEl && _disableDraggable(dragEl);
    clearTimeout(this._dragStartTimer);

    this._disableDelayedDragEvents();
  },
  _disableDelayedDragEvents: function _disableDelayedDragEvents() {
    var ownerDocument = this.el.ownerDocument;
    off(ownerDocument, 'mouseup', this._disableDelayedDrag);
    off(ownerDocument, 'touchend', this._disableDelayedDrag);
    off(ownerDocument, 'touchcancel', this._disableDelayedDrag);
    off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);
    off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);
    off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);
  },
  _triggerDragStart: function _triggerDragStart(
  /** Event */
  evt,
  /** Touch */
  touch) {
    touch = touch || evt.pointerType == 'touch' && evt;

    if (!this.nativeDraggable || touch) {
      if (this.options.supportPointer) {
        on(document, 'pointermove', this._onTouchMove);
      } else if (touch) {
        on(document, 'touchmove', this._onTouchMove);
      } else {
        on(document, 'mousemove', this._onTouchMove);
      }
    } else {
      on(dragEl, 'dragend', this);
      on(rootEl, 'dragstart', this._onDragStart);
    }

    try {
      if (document.selection) {
        // Timeout neccessary for IE9
        _nextTick(function () {
          document.selection.empty();
        });
      } else {
        window.getSelection().removeAllRanges();
      }
    } catch (err) {}
  },
  _dragStarted: function _dragStarted(fallback, evt) {

    awaitingDragStarted = false;

    if (rootEl && dragEl) {
      pluginEvent('dragStarted', this, {
        evt: evt
      });

      if (this.nativeDraggable) {
        on(document, 'dragover', _checkOutsideTargetEl);
      }

      var options = this.options; // Apply effect

      !fallback && toggleClass(dragEl, options.dragClass, false);
      toggleClass(dragEl, options.ghostClass, true);
      Sortable.active = this;
      fallback && this._appendGhost(); // Drag start event

      _dispatchEvent({
        sortable: this,
        name: 'start',
        originalEvent: evt
      });
    } else {
      this._nulling();
    }
  },
  _emulateDragOver: function _emulateDragOver() {
    if (touchEvt) {
      this._lastX = touchEvt.clientX;
      this._lastY = touchEvt.clientY;

      _hideGhostForTarget();

      var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);
      var parent = target;

      while (target && target.shadowRoot) {
        target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);
        if (target === parent) break;
        parent = target;
      }

      dragEl.parentNode[expando]._isOutsideThisEl(target);

      if (parent) {
        do {
          if (parent[expando]) {
            var inserted = void 0;
            inserted = parent[expando]._onDragOver({
              clientX: touchEvt.clientX,
              clientY: touchEvt.clientY,
              target: target,
              rootEl: parent
            });

            if (inserted && !this.options.dragoverBubble) {
              break;
            }
          }

          target = parent; // store last element
        }
        /* jshint boss:true */
        while (parent = parent.parentNode);
      }

      _unhideGhostForTarget();
    }
  },
  _onTouchMove: function _onTouchMove(
  /**TouchEvent*/
  evt) {
    if (tapEvt) {
      var options = this.options,
          fallbackTolerance = options.fallbackTolerance,
          fallbackOffset = options.fallbackOffset,
          touch = evt.touches ? evt.touches[0] : evt,
          ghostMatrix = ghostEl && matrix(ghostEl, true),
          scaleX = ghostEl && ghostMatrix && ghostMatrix.a,
          scaleY = ghostEl && ghostMatrix && ghostMatrix.d,
          relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent),
          dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1),
          dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1); // only set the status to dragging, when we are actually dragging

      if (!Sortable.active && !awaitingDragStarted) {
        if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {
          return;
        }

        this._onDragStart(evt, true);
      }

      if (ghostEl) {
        if (ghostMatrix) {
          ghostMatrix.e += dx - (lastDx || 0);
          ghostMatrix.f += dy - (lastDy || 0);
        } else {
          ghostMatrix = {
            a: 1,
            b: 0,
            c: 0,
            d: 1,
            e: dx,
            f: dy
          };
        }

        var cssMatrix = "matrix(".concat(ghostMatrix.a, ",").concat(ghostMatrix.b, ",").concat(ghostMatrix.c, ",").concat(ghostMatrix.d, ",").concat(ghostMatrix.e, ",").concat(ghostMatrix.f, ")");
        css(ghostEl, 'webkitTransform', cssMatrix);
        css(ghostEl, 'mozTransform', cssMatrix);
        css(ghostEl, 'msTransform', cssMatrix);
        css(ghostEl, 'transform', cssMatrix);
        lastDx = dx;
        lastDy = dy;
        touchEvt = touch;
      }

      evt.cancelable && evt.preventDefault();
    }
  },
  _appendGhost: function _appendGhost() {
    // Bug if using scale(): https://stackoverflow.com/questions/2637058
    // Not being adjusted for
    if (!ghostEl) {
      var container = this.options.fallbackOnBody ? document.body : rootEl,
          rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),
          options = this.options; // Position absolutely

      if (PositionGhostAbsolutely) {
        // Get relatively positioned parent
        ghostRelativeParent = container;

        while (css(ghostRelativeParent, 'position') === 'static' && css(ghostRelativeParent, 'transform') === 'none' && ghostRelativeParent !== document) {
          ghostRelativeParent = ghostRelativeParent.parentNode;
        }

        if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {
          if (ghostRelativeParent === document) ghostRelativeParent = getWindowScrollingElement();
          rect.top += ghostRelativeParent.scrollTop;
          rect.left += ghostRelativeParent.scrollLeft;
        } else {
          ghostRelativeParent = getWindowScrollingElement();
        }

        ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);
      }

      ghostEl = dragEl.cloneNode(true);
      toggleClass(ghostEl, options.ghostClass, false);
      toggleClass(ghostEl, options.fallbackClass, true);
      toggleClass(ghostEl, options.dragClass, true);
      css(ghostEl, 'transition', '');
      css(ghostEl, 'transform', '');
      css(ghostEl, 'box-sizing', 'border-box');
      css(ghostEl, 'margin', 0);
      css(ghostEl, 'top', rect.top);
      css(ghostEl, 'left', rect.left);
      css(ghostEl, 'width', rect.width);
      css(ghostEl, 'height', rect.height);
      css(ghostEl, 'opacity', '0.8');
      css(ghostEl, 'position', PositionGhostAbsolutely ? 'absolute' : 'fixed');
      css(ghostEl, 'zIndex', '100000');
      css(ghostEl, 'pointerEvents', 'none');
      Sortable.ghost = ghostEl;
      container.appendChild(ghostEl); // Set transform-origin

      css(ghostEl, 'transform-origin', tapDistanceLeft / parseInt(ghostEl.style.width) * 100 + '% ' + tapDistanceTop / parseInt(ghostEl.style.height) * 100 + '%');
    }
  },
  _onDragStart: function _onDragStart(
  /**Event*/
  evt,
  /**boolean*/
  fallback) {
    var _this = this;

    var dataTransfer = evt.dataTransfer;
    var options = _this.options;
    pluginEvent('dragStart', this, {
      evt: evt
    });

    if (Sortable.eventCanceled) {
      this._onDrop();

      return;
    }

    pluginEvent('setupClone', this);

    if (!Sortable.eventCanceled) {
      cloneEl = clone(dragEl);
      cloneEl.draggable = false;
      cloneEl.style['will-change'] = '';

      this._hideClone();

      toggleClass(cloneEl, this.options.chosenClass, false);
      Sortable.clone = cloneEl;
    } // #1143: IFrame support workaround


    _this.cloneId = _nextTick(function () {
      pluginEvent('clone', _this);
      if (Sortable.eventCanceled) return;

      if (!_this.options.removeCloneOnHide) {
        rootEl.insertBefore(cloneEl, dragEl);
      }

      _this._hideClone();

      _dispatchEvent({
        sortable: _this,
        name: 'clone'
      });
    });
    !fallback && toggleClass(dragEl, options.dragClass, true); // Set proper drop events

    if (fallback) {
      ignoreNextClick = true;
      _this._loopId = setInterval(_this._emulateDragOver, 50);
    } else {
      // Undo what was set in _prepareDragStart before drag started
      off(document, 'mouseup', _this._onDrop);
      off(document, 'touchend', _this._onDrop);
      off(document, 'touchcancel', _this._onDrop);

      if (dataTransfer) {
        dataTransfer.effectAllowed = 'move';
        options.setData && options.setData.call(_this, dataTransfer, dragEl);
      }

      on(document, 'drop', _this); // #1276 fix:

      css(dragEl, 'transform', 'translateZ(0)');
    }

    awaitingDragStarted = true;
    _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));
    on(document, 'selectstart', _this);
    moved = true;

    if (Safari) {
      css(document.body, 'user-select', 'none');
    }
  },
  // Returns true - if no further action is needed (either inserted or another condition)
  _onDragOver: function _onDragOver(
  /**Event*/
  evt) {
    var el = this.el,
        target = evt.target,
        dragRect,
        targetRect,
        revert,
        options = this.options,
        group = options.group,
        activeSortable = Sortable.active,
        isOwner = activeGroup === group,
        canSort = options.sort,
        fromSortable = putSortable || activeSortable,
        vertical,
        _this = this,
        completedFired = false;

    if (_silent) return;

    function dragOverEvent(name, extra) {
      pluginEvent(name, _this, _objectSpread({
        evt: evt,
        isOwner: isOwner,
        axis: vertical ? 'vertical' : 'horizontal',
        revert: revert,
        dragRect: dragRect,
        targetRect: targetRect,
        canSort: canSort,
        fromSortable: fromSortable,
        target: target,
        completed: completed,
        onMove: function onMove(target, after) {
          return _onMove(rootEl, el, dragEl, dragRect, target, getRect(target), evt, after);
        },
        changed: changed
      }, extra));
    } // Capture animation state


    function capture() {
      dragOverEvent('dragOverAnimationCapture');

      _this.captureAnimationState();

      if (_this !== fromSortable) {
        fromSortable.captureAnimationState();
      }
    } // Return invocation when dragEl is inserted (or completed)


    function completed(insertion) {
      dragOverEvent('dragOverCompleted', {
        insertion: insertion
      });

      if (insertion) {
        // Clones must be hidden before folding animation to capture dragRectAbsolute properly
        if (isOwner) {
          activeSortable._hideClone();
        } else {
          activeSortable._showClone(_this);
        }

        if (_this !== fromSortable) {
          // Set ghost class to new sortable's ghost class
          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);
          toggleClass(dragEl, options.ghostClass, true);
        }

        if (putSortable !== _this && _this !== Sortable.active) {
          putSortable = _this;
        } else if (_this === Sortable.active && putSortable) {
          putSortable = null;
        } // Animation


        if (fromSortable === _this) {
          _this._ignoreWhileAnimating = target;
        }

        _this.animateAll(function () {
          dragOverEvent('dragOverAnimationComplete');
          _this._ignoreWhileAnimating = null;
        });

        if (_this !== fromSortable) {
          fromSortable.animateAll();
          fromSortable._ignoreWhileAnimating = null;
        }
      } // Null lastTarget if it is not inside a previously swapped element


      if (target === dragEl && !dragEl.animated || target === el && !target.animated) {
        lastTarget = null;
      } // no bubbling and not fallback


      if (!options.dragoverBubble && !evt.rootEl && target !== document) {
        dragEl.parentNode[expando]._isOutsideThisEl(evt.target); // Do not detect for empty insert if already inserted


        !insertion && nearestEmptyInsertDetectEvent(evt);
      }

      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();
      return completedFired = true;
    } // Call when dragEl has been inserted


    function changed() {
      newIndex = index(dragEl);
      newDraggableIndex = index(dragEl, options.draggable);

      _dispatchEvent({
        sortable: _this,
        name: 'change',
        toEl: el,
        newIndex: newIndex,
        newDraggableIndex: newDraggableIndex,
        originalEvent: evt
      });
    }

    if (evt.preventDefault !== void 0) {
      evt.cancelable && evt.preventDefault();
    }

    target = closest(target, options.draggable, el, true);
    dragOverEvent('dragOver');
    if (Sortable.eventCanceled) return completedFired;

    if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {
      return completed(false);
    }

    ignoreNextClick = false;

    if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list
    : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {
      vertical = this._getDirection(evt, target) === 'vertical';
      dragRect = getRect(dragEl);
      dragOverEvent('dragOverValid');
      if (Sortable.eventCanceled) return completedFired;

      if (revert) {
        parentEl = rootEl; // actualization

        capture();

        this._hideClone();

        dragOverEvent('revert');

        if (!Sortable.eventCanceled) {
          if (nextEl) {
            rootEl.insertBefore(dragEl, nextEl);
          } else {
            rootEl.appendChild(dragEl);
          }
        }

        return completed(true);
      }

      var elLastChild = lastChild(el, options.draggable);

      if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {
        // If already at end of list: Do not insert
        if (elLastChild === dragEl) {
          return completed(false);
        } // assign target only if condition is true


        if (elLastChild && el === evt.target) {
          target = elLastChild;
        }

        if (target) {
          targetRect = getRect(target);
        }

        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {
          capture();
          el.appendChild(dragEl);
          parentEl = el; // actualization

          changed();
          return completed(true);
        }
      } else if (target.parentNode === el) {
        targetRect = getRect(target);
        var direction = 0,
            targetBeforeFirstSwap,
            differentLevel = dragEl.parentNode !== el,
            differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical),
            side1 = vertical ? 'top' : 'left',
            scrolledPastTop = isScrolledPast(target, 'top', 'top') || isScrolledPast(dragEl, 'top', 'top'),
            scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;

        if (lastTarget !== target) {
          targetBeforeFirstSwap = targetRect[side1];
          pastFirstInvertThresh = false;
          isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;
        }

        direction = _getSwapDirection(evt, target, targetRect, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);
        var sibling;

        if (direction !== 0) {
          // Check if target is beside dragEl in respective direction (ignoring hidden elements)
          var dragIndex = index(dragEl);

          do {
            dragIndex -= direction;
            sibling = parentEl.children[dragIndex];
          } while (sibling && (css(sibling, 'display') === 'none' || sibling === ghostEl));
        } // If dragEl is already beside target: Do not insert


        if (direction === 0 || sibling === target) {
          return completed(false);
        }

        lastTarget = target;
        lastDirection = direction;
        var nextSibling = target.nextElementSibling,
            after = false;
        after = direction === 1;

        var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);

        if (moveVector !== false) {
          if (moveVector === 1 || moveVector === -1) {
            after = moveVector === 1;
          }

          _silent = true;
          setTimeout(_unsilent, 30);
          capture();

          if (after && !nextSibling) {
            el.appendChild(dragEl);
          } else {
            target.parentNode.insertBefore(dragEl, after ? nextSibling : target);
          } // Undo chrome's scroll adjustment (has no effect on other browsers)


          if (scrolledPastTop) {
            scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);
          }

          parentEl = dragEl.parentNode; // actualization
          // must be done before animation

          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {
            targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);
          }

          changed();
          return completed(true);
        }
      }

      if (el.contains(dragEl)) {
        return completed(false);
      }
    }

    return false;
  },
  _ignoreWhileAnimating: null,
  _offMoveEvents: function _offMoveEvents() {
    off(document, 'mousemove', this._onTouchMove);
    off(document, 'touchmove', this._onTouchMove);
    off(document, 'pointermove', this._onTouchMove);
    off(document, 'dragover', nearestEmptyInsertDetectEvent);
    off(document, 'mousemove', nearestEmptyInsertDetectEvent);
    off(document, 'touchmove', nearestEmptyInsertDetectEvent);
  },
  _offUpEvents: function _offUpEvents() {
    var ownerDocument = this.el.ownerDocument;
    off(ownerDocument, 'mouseup', this._onDrop);
    off(ownerDocument, 'touchend', this._onDrop);
    off(ownerDocument, 'pointerup', this._onDrop);
    off(ownerDocument, 'touchcancel', this._onDrop);
    off(document, 'selectstart', this);
  },
  _onDrop: function _onDrop(
  /**Event*/
  evt) {
    var el = this.el,
        options = this.options; // Get the index of the dragged element within its parent

    newIndex = index(dragEl);
    newDraggableIndex = index(dragEl, options.draggable);
    pluginEvent('drop', this, {
      evt: evt
    });
    parentEl = dragEl && dragEl.parentNode; // Get again after plugin event

    newIndex = index(dragEl);
    newDraggableIndex = index(dragEl, options.draggable);

    if (Sortable.eventCanceled) {
      this._nulling();

      return;
    }

    awaitingDragStarted = false;
    isCircumstantialInvert = false;
    pastFirstInvertThresh = false;
    clearInterval(this._loopId);
    clearTimeout(this._dragStartTimer);

    _cancelNextTick(this.cloneId);

    _cancelNextTick(this._dragStartId); // Unbind events


    if (this.nativeDraggable) {
      off(document, 'drop', this);
      off(el, 'dragstart', this._onDragStart);
    }

    this._offMoveEvents();

    this._offUpEvents();

    if (Safari) {
      css(document.body, 'user-select', '');
    }

    css(dragEl, 'transform', '');

    if (evt) {
      if (moved) {
        evt.cancelable && evt.preventDefault();
        !options.dropBubble && evt.stopPropagation();
      }

      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);

      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {
        // Remove clone(s)
        cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);
      }

      if (dragEl) {
        if (this.nativeDraggable) {
          off(dragEl, 'dragend', this);
        }

        _disableDraggable(dragEl);

        dragEl.style['will-change'] = ''; // Remove classes
        // ghostClass is added in dragStarted

        if (moved && !awaitingDragStarted) {
          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);
        }

        toggleClass(dragEl, this.options.chosenClass, false); // Drag stop event

        _dispatchEvent({
          sortable: this,
          name: 'unchoose',
          toEl: parentEl,
          newIndex: null,
          newDraggableIndex: null,
          originalEvent: evt
        });

        if (rootEl !== parentEl) {
          if (newIndex >= 0) {
            // Add event
            _dispatchEvent({
              rootEl: parentEl,
              name: 'add',
              toEl: parentEl,
              fromEl: rootEl,
              originalEvent: evt
            }); // Remove event


            _dispatchEvent({
              sortable: this,
              name: 'remove',
              toEl: parentEl,
              originalEvent: evt
            }); // drag from one list and drop into another


            _dispatchEvent({
              rootEl: parentEl,
              name: 'sort',
              toEl: parentEl,
              fromEl: rootEl,
              originalEvent: evt
            });

            _dispatchEvent({
              sortable: this,
              name: 'sort',
              toEl: parentEl,
              originalEvent: evt
            });
          }

          putSortable && putSortable.save();
        } else {
          if (newIndex !== oldIndex) {
            if (newIndex >= 0) {
              // drag & drop within the same list
              _dispatchEvent({
                sortable: this,
                name: 'update',
                toEl: parentEl,
                originalEvent: evt
              });

              _dispatchEvent({
                sortable: this,
                name: 'sort',
                toEl: parentEl,
                originalEvent: evt
              });
            }
          }
        }

        if (Sortable.active) {
          /* jshint eqnull:true */
          if (newIndex == null || newIndex === -1) {
            newIndex = oldIndex;
            newDraggableIndex = oldDraggableIndex;
          }

          _dispatchEvent({
            sortable: this,
            name: 'end',
            toEl: parentEl,
            originalEvent: evt
          }); // Save sorting


          this.save();
        }
      }
    }

    this._nulling();
  },
  _nulling: function _nulling() {
    pluginEvent('nulling', this);
    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;
    savedInputChecked.forEach(function (el) {
      el.checked = true;
    });
    savedInputChecked.length = lastDx = lastDy = 0;
  },
  handleEvent: function handleEvent(
  /**Event*/
  evt) {
    switch (evt.type) {
      case 'drop':
      case 'dragend':
        this._onDrop(evt);

        break;

      case 'dragenter':
      case 'dragover':
        if (dragEl) {
          this._onDragOver(evt);

          _globalDragOver(evt);
        }

        break;

      case 'selectstart':
        evt.preventDefault();
        break;
    }
  },

  /**
   * Serializes the item into an array of string.
   * @returns {String[]}
   */
  toArray: function toArray() {
    var order = [],
        el,
        children = this.el.children,
        i = 0,
        n = children.length,
        options = this.options;

    for (; i < n; i++) {
      el = children[i];

      if (closest(el, options.draggable, this.el, false)) {
        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));
      }
    }

    return order;
  },

  /**
   * Sorts the elements according to the array.
   * @param  {String[]}  order  order of the items
   */
  sort: function sort(order) {
    var items = {},
        rootEl = this.el;
    this.toArray().forEach(function (id, i) {
      var el = rootEl.children[i];

      if (closest(el, this.options.draggable, rootEl, false)) {
        items[id] = el;
      }
    }, this);
    order.forEach(function (id) {
      if (items[id]) {
        rootEl.removeChild(items[id]);
        rootEl.appendChild(items[id]);
      }
    });
  },

  /**
   * Save the current sorting
   */
  save: function save() {
    var store = this.options.store;
    store && store.set && store.set(this);
  },

  /**
   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.
   * @param   {HTMLElement}  el
   * @param   {String}       [selector]  default: `options.draggable`
   * @returns {HTMLElement|null}
   */
  closest: function closest$1(el, selector) {
    return closest(el, selector || this.options.draggable, this.el, false);
  },

  /**
   * Set/get option
   * @param   {string} name
   * @param   {*}      [value]
   * @returns {*}
   */
  option: function option(name, value) {
    var options = this.options;

    if (value === void 0) {
      return options[name];
    } else {
      var modifiedValue = PluginManager.modifyOption(this, name, value);

      if (typeof modifiedValue !== 'undefined') {
        options[name] = modifiedValue;
      } else {
        options[name] = value;
      }

      if (name === 'group') {
        _prepareGroup(options);
      }
    }
  },

  /**
   * Destroy
   */
  destroy: function destroy() {
    pluginEvent('destroy', this);
    var el = this.el;
    el[expando] = null;
    off(el, 'mousedown', this._onTapStart);
    off(el, 'touchstart', this._onTapStart);
    off(el, 'pointerdown', this._onTapStart);

    if (this.nativeDraggable) {
      off(el, 'dragover', this);
      off(el, 'dragenter', this);
    } // Remove draggable attributes


    Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {
      el.removeAttribute('draggable');
    });

    this._onDrop();

    this._disableDelayedDragEvents();

    sortables.splice(sortables.indexOf(this.el), 1);
    this.el = el = null;
  },
  _hideClone: function _hideClone() {
    if (!cloneHidden) {
      pluginEvent('hideClone', this);
      if (Sortable.eventCanceled) return;
      css(cloneEl, 'display', 'none');

      if (this.options.removeCloneOnHide && cloneEl.parentNode) {
        cloneEl.parentNode.removeChild(cloneEl);
      }

      cloneHidden = true;
    }
  },
  _showClone: function _showClone(putSortable) {
    if (putSortable.lastPutMode !== 'clone') {
      this._hideClone();

      return;
    }

    if (cloneHidden) {
      pluginEvent('showClone', this);
      if (Sortable.eventCanceled) return; // show clone at dragEl or original position

      if (rootEl.contains(dragEl) && !this.options.group.revertClone) {
        rootEl.insertBefore(cloneEl, dragEl);
      } else if (nextEl) {
        rootEl.insertBefore(cloneEl, nextEl);
      } else {
        rootEl.appendChild(cloneEl);
      }

      if (this.options.group.revertClone) {
        this.animate(dragEl, cloneEl);
      }

      css(cloneEl, 'display', '');
      cloneHidden = false;
    }
  }
};

function _globalDragOver(
/**Event*/
evt) {
  if (evt.dataTransfer) {
    evt.dataTransfer.dropEffect = 'move';
  }

  evt.cancelable && evt.preventDefault();
}

function _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {
  var evt,
      sortable = fromEl[expando],
      onMoveFn = sortable.options.onMove,
      retVal; // Support for new CustomEvent feature

  if (window.CustomEvent && !IE11OrLess && !Edge) {
    evt = new CustomEvent('move', {
      bubbles: true,
      cancelable: true
    });
  } else {
    evt = document.createEvent('Event');
    evt.initEvent('move', true, true);
  }

  evt.to = toEl;
  evt.from = fromEl;
  evt.dragged = dragEl;
  evt.draggedRect = dragRect;
  evt.related = targetEl || toEl;
  evt.relatedRect = targetRect || getRect(toEl);
  evt.willInsertAfter = willInsertAfter;
  evt.originalEvent = originalEvent;
  fromEl.dispatchEvent(evt);

  if (onMoveFn) {
    retVal = onMoveFn.call(sortable, evt, originalEvent);
  }

  return retVal;
}

function _disableDraggable(el) {
  el.draggable = false;
}

function _unsilent() {
  _silent = false;
}

function _ghostIsLast(evt, vertical, sortable) {
  var rect = getRect(lastChild(sortable.el, sortable.options.draggable));
  var spacer = 10;
  return vertical ? evt.clientX > rect.right + spacer || evt.clientX <= rect.right && evt.clientY > rect.bottom && evt.clientX >= rect.left : evt.clientX > rect.right && evt.clientY > rect.top || evt.clientX <= rect.right && evt.clientY > rect.bottom + spacer;
}

function _getSwapDirection(evt, target, targetRect, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {
  var mouseOnAxis = vertical ? evt.clientY : evt.clientX,
      targetLength = vertical ? targetRect.height : targetRect.width,
      targetS1 = vertical ? targetRect.top : targetRect.left,
      targetS2 = vertical ? targetRect.bottom : targetRect.right,
      invert = false;

  if (!invertSwap) {
    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold
    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {
      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2
      // check if past first invert threshold on side opposite of lastDirection
      if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {
        // past first invert threshold, do not restrict inverted threshold to dragEl shadow
        pastFirstInvertThresh = true;
      }

      if (!pastFirstInvertThresh) {
        // dragEl shadow (target move distance shadow)
        if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow
        : mouseOnAxis > targetS2 - targetMoveDistance) {
          return -lastDirection;
        }
      } else {
        invert = true;
      }
    } else {
      // Regular
      if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {
        return _getInsertDirection(target);
      }
    }
  }

  invert = invert || invertSwap;

  if (invert) {
    // Invert of regular
    if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {
      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;
    }
  }

  return 0;
}
/**
 * Gets the direction dragEl must be swapped relative to target in order to make it
 * seem that dragEl has been "inserted" into that element's position
 * @param  {HTMLElement} target       The target whose position dragEl is being inserted at
 * @return {Number}                   Direction dragEl must be swapped
 */


function _getInsertDirection(target) {
  if (index(dragEl) < index(target)) {
    return 1;
  } else {
    return -1;
  }
}
/**
 * Generate id
 * @param   {HTMLElement} el
 * @returns {String}
 * @private
 */


function _generateId(el) {
  var str = el.tagName + el.className + el.src + el.href + el.textContent,
      i = str.length,
      sum = 0;

  while (i--) {
    sum += str.charCodeAt(i);
  }

  return sum.toString(36);
}

function _saveInputCheckedState(root) {
  savedInputChecked.length = 0;
  var inputs = root.getElementsByTagName('input');
  var idx = inputs.length;

  while (idx--) {
    var el = inputs[idx];
    el.checked && savedInputChecked.push(el);
  }
}

function _nextTick(fn) {
  return setTimeout(fn, 0);
}

function _cancelNextTick(id) {
  return clearTimeout(id);
} // Fixed #973:


if (documentExists) {
  on(document, 'touchmove', function (evt) {
    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {
      evt.preventDefault();
    }
  });
} // Export utils


Sortable.utils = {
  on: on,
  off: off,
  css: css,
  find: find,
  is: function is(el, selector) {
    return !!closest(el, selector, el, false);
  },
  extend: extend,
  throttle: throttle,
  closest: closest,
  toggleClass: toggleClass,
  clone: clone,
  index: index,
  nextTick: _nextTick,
  cancelNextTick: _cancelNextTick,
  detectDirection: _detectDirection,
  getChild: getChild
};
/**
 * Get the Sortable instance of an element
 * @param  {HTMLElement} element The element
 * @return {Sortable|undefined}         The instance of Sortable
 */

Sortable.get = function (element) {
  return element[expando];
};
/**
 * Mount a plugin to Sortable
 * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted
 */


Sortable.mount = function () {
  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {
    plugins[_key] = arguments[_key];
  }

  if (plugins[0].constructor === Array) plugins = plugins[0];
  plugins.forEach(function (plugin) {
    if (!plugin.prototype || !plugin.prototype.constructor) {
      throw "Sortable: Mounted plugin must be a constructor function, not ".concat({}.toString.call(plugin));
    }

    if (plugin.utils) Sortable.utils = _objectSpread({}, Sortable.utils, plugin.utils);
    PluginManager.mount(plugin);
  });
};
/**
 * Create sortable instance
 * @param {HTMLElement}  el
 * @param {Object}      [options]
 */


Sortable.create = function (el, options) {
  return new Sortable(el, options);
}; // Export


Sortable.version = version;

var autoScrolls = [],
    scrollEl,
    scrollRootEl,
    scrolling = false,
    lastAutoScrollX,
    lastAutoScrollY,
    touchEvt$1,
    pointerElemChangedInterval;

function AutoScrollPlugin() {
  function AutoScroll() {
    this.defaults = {
      scroll: true,
      scrollSensitivity: 30,
      scrollSpeed: 10,
      bubbleScroll: true
    }; // Bind all private methods

    for (var fn in this) {
      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {
        this[fn] = this[fn].bind(this);
      }
    }
  }

  AutoScroll.prototype = {
    dragStarted: function dragStarted(_ref) {
      var originalEvent = _ref.originalEvent;

      if (this.sortable.nativeDraggable) {
        on(document, 'dragover', this._handleAutoScroll);
      } else {
        if (this.options.supportPointer) {
          on(document, 'pointermove', this._handleFallbackAutoScroll);
        } else if (originalEvent.touches) {
          on(document, 'touchmove', this._handleFallbackAutoScroll);
        } else {
          on(document, 'mousemove', this._handleFallbackAutoScroll);
        }
      }
    },
    dragOverCompleted: function dragOverCompleted(_ref2) {
      var originalEvent = _ref2.originalEvent;

      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)
      if (!this.options.dragOverBubble && !originalEvent.rootEl) {
        this._handleAutoScroll(originalEvent);
      }
    },
    drop: function drop() {
      if (this.sortable.nativeDraggable) {
        off(document, 'dragover', this._handleAutoScroll);
      } else {
        off(document, 'pointermove', this._handleFallbackAutoScroll);
        off(document, 'touchmove', this._handleFallbackAutoScroll);
        off(document, 'mousemove', this._handleFallbackAutoScroll);
      }

      clearPointerElemChangedInterval();
      clearAutoScrolls();
      cancelThrottle();
    },
    nulling: function nulling() {
      touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;
      autoScrolls.length = 0;
    },
    _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {
      this._handleAutoScroll(evt, true);
    },
    _handleAutoScroll: function _handleAutoScroll(evt, fallback) {
      var _this = this;

      var x = (evt.touches ? evt.touches[0] : evt).clientX,
          y = (evt.touches ? evt.touches[0] : evt).clientY,
          elem = document.elementFromPoint(x, y);
      touchEvt$1 = evt; // IE does not seem to have native autoscroll,
      // Edge's autoscroll seems too conditional,
      // MACOS Safari does not have autoscroll,
      // Firefox and Chrome are good

      if (fallback || Edge || IE11OrLess || Safari) {
        autoScroll(evt, this.options, elem, fallback); // Listener for pointer element change

        var ogElemScroller = getParentAutoScrollElement(elem, true);

        if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {
          pointerElemChangedInterval && clearPointerElemChangedInterval(); // Detect for pointer elem change, emulating native DnD behaviour

          pointerElemChangedInterval = setInterval(function () {
            var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);

            if (newElem !== ogElemScroller) {
              ogElemScroller = newElem;
              clearAutoScrolls();
            }

            autoScroll(evt, _this.options, newElem, fallback);
          }, 10);
          lastAutoScrollX = x;
          lastAutoScrollY = y;
        }
      } else {
        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll
        if (!this.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {
          clearAutoScrolls();
          return;
        }

        autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);
      }
    }
  };
  return _extends(AutoScroll, {
    pluginName: 'scroll',
    initializeByDefault: true
  });
}

function clearAutoScrolls() {
  autoScrolls.forEach(function (autoScroll) {
    clearInterval(autoScroll.pid);
  });
  autoScrolls = [];
}

function clearPointerElemChangedInterval() {
  clearInterval(pointerElemChangedInterval);
}

var autoScroll = throttle(function (evt, options, rootEl, isFallback) {
  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521
  if (!options.scroll) return;
  var x = (evt.touches ? evt.touches[0] : evt).clientX,
      y = (evt.touches ? evt.touches[0] : evt).clientY,
      sens = options.scrollSensitivity,
      speed = options.scrollSpeed,
      winScroller = getWindowScrollingElement();
  var scrollThisInstance = false,
      scrollCustomFn; // New scroll root, set scrollEl

  if (scrollRootEl !== rootEl) {
    scrollRootEl = rootEl;
    clearAutoScrolls();
    scrollEl = options.scroll;
    scrollCustomFn = options.scrollFn;

    if (scrollEl === true) {
      scrollEl = getParentAutoScrollElement(rootEl, true);
    }
  }

  var layersOut = 0;
  var currentParent = scrollEl;

  do {
    var el = currentParent,
        rect = getRect(el),
        top = rect.top,
        bottom = rect.bottom,
        left = rect.left,
        right = rect.right,
        width = rect.width,
        height = rect.height,
        canScrollX = void 0,
        canScrollY = void 0,
        scrollWidth = el.scrollWidth,
        scrollHeight = el.scrollHeight,
        elCSS = css(el),
        scrollPosX = el.scrollLeft,
        scrollPosY = el.scrollTop;

    if (el === winScroller) {
      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll' || elCSS.overflowX === 'visible');
      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll' || elCSS.overflowY === 'visible');
    } else {
      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll');
      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll');
    }

    var vx = canScrollX && (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);
    var vy = canScrollY && (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);

    if (!autoScrolls[layersOut]) {
      for (var i = 0; i <= layersOut; i++) {
        if (!autoScrolls[i]) {
          autoScrolls[i] = {};
        }
      }
    }

    if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {
      autoScrolls[layersOut].el = el;
      autoScrolls[layersOut].vx = vx;
      autoScrolls[layersOut].vy = vy;
      clearInterval(autoScrolls[layersOut].pid);

      if (vx != 0 || vy != 0) {
        scrollThisInstance = true;
        /* jshint loopfunc:true */

        autoScrolls[layersOut].pid = setInterval(function () {
          // emulate drag over during autoscroll (fallback), emulating native DnD behaviour
          if (isFallback && this.layer === 0) {
            Sortable.active._onTouchMove(touchEvt$1); // To move ghost if it is positioned absolutely

          }

          var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;
          var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;

          if (typeof scrollCustomFn === 'function') {
            if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== 'continue') {
              return;
            }
          }

          scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);
        }.bind({
          layer: layersOut
        }), 24);
      }
    }

    layersOut++;
  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));

  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not
}, 30);

var drop = function drop(_ref) {
  var originalEvent = _ref.originalEvent,
      putSortable = _ref.putSortable,
      dragEl = _ref.dragEl,
      activeSortable = _ref.activeSortable,
      dispatchSortableEvent = _ref.dispatchSortableEvent,
      hideGhostForTarget = _ref.hideGhostForTarget,
      unhideGhostForTarget = _ref.unhideGhostForTarget;
  if (!originalEvent) return;
  var toSortable = putSortable || activeSortable;
  hideGhostForTarget();
  var touch = originalEvent.changedTouches && originalEvent.changedTouches.length ? originalEvent.changedTouches[0] : originalEvent;
  var target = document.elementFromPoint(touch.clientX, touch.clientY);
  unhideGhostForTarget();

  if (toSortable && !toSortable.el.contains(target)) {
    dispatchSortableEvent('spill');
    this.onSpill({
      dragEl: dragEl,
      putSortable: putSortable
    });
  }
};

function Revert() {}

Revert.prototype = {
  startIndex: null,
  dragStart: function dragStart(_ref2) {
    var oldDraggableIndex = _ref2.oldDraggableIndex;
    this.startIndex = oldDraggableIndex;
  },
  onSpill: function onSpill(_ref3) {
    var dragEl = _ref3.dragEl,
        putSortable = _ref3.putSortable;
    this.sortable.captureAnimationState();

    if (putSortable) {
      putSortable.captureAnimationState();
    }

    var nextSibling = getChild(this.sortable.el, this.startIndex, this.options);

    if (nextSibling) {
      this.sortable.el.insertBefore(dragEl, nextSibling);
    } else {
      this.sortable.el.appendChild(dragEl);
    }

    this.sortable.animateAll();

    if (putSortable) {
      putSortable.animateAll();
    }
  },
  drop: drop
};

_extends(Revert, {
  pluginName: 'revertOnSpill'
});

function Remove() {}

Remove.prototype = {
  onSpill: function onSpill(_ref4) {
    var dragEl = _ref4.dragEl,
        putSortable = _ref4.putSortable;
    var parentSortable = putSortable || this.sortable;
    parentSortable.captureAnimationState();
    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);
    parentSortable.animateAll();
  },
  drop: drop
};

_extends(Remove, {
  pluginName: 'removeOnSpill'
});

var lastSwapEl;

function SwapPlugin() {
  function Swap() {
    this.defaults = {
      swapClass: 'sortable-swap-highlight'
    };
  }

  Swap.prototype = {
    dragStart: function dragStart(_ref) {
      var dragEl = _ref.dragEl;
      lastSwapEl = dragEl;
    },
    dragOverValid: function dragOverValid(_ref2) {
      var completed = _ref2.completed,
          target = _ref2.target,
          onMove = _ref2.onMove,
          activeSortable = _ref2.activeSortable,
          changed = _ref2.changed,
          cancel = _ref2.cancel;
      if (!activeSortable.options.swap) return;
      var el = this.sortable.el,
          options = this.options;

      if (target && target !== el) {
        var prevSwapEl = lastSwapEl;

        if (onMove(target) !== false) {
          toggleClass(target, options.swapClass, true);
          lastSwapEl = target;
        } else {
          lastSwapEl = null;
        }

        if (prevSwapEl && prevSwapEl !== lastSwapEl) {
          toggleClass(prevSwapEl, options.swapClass, false);
        }
      }

      changed();
      completed(true);
      cancel();
    },
    drop: function drop(_ref3) {
      var activeSortable = _ref3.activeSortable,
          putSortable = _ref3.putSortable,
          dragEl = _ref3.dragEl;
      var toSortable = putSortable || this.sortable;
      var options = this.options;
      lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);

      if (lastSwapEl && (options.swap || putSortable && putSortable.options.swap)) {
        if (dragEl !== lastSwapEl) {
          toSortable.captureAnimationState();
          if (toSortable !== activeSortable) activeSortable.captureAnimationState();
          swapNodes(dragEl, lastSwapEl);
          toSortable.animateAll();
          if (toSortable !== activeSortable) activeSortable.animateAll();
        }
      }
    },
    nulling: function nulling() {
      lastSwapEl = null;
    }
  };
  return _extends(Swap, {
    pluginName: 'swap',
    eventProperties: function eventProperties() {
      return {
        swapItem: lastSwapEl
      };
    }
  });
}

function swapNodes(n1, n2) {
  var p1 = n1.parentNode,
      p2 = n2.parentNode,
      i1,
      i2;
  if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;
  i1 = index(n1);
  i2 = index(n2);

  if (p1.isEqualNode(p2) && i1 < i2) {
    i2++;
  }

  p1.insertBefore(n2, p1.children[i1]);
  p2.insertBefore(n1, p2.children[i2]);
}

var multiDragElements = [],
    multiDragClones = [],
    lastMultiDragSelect,
    // for selection with modifier key down (SHIFT)
multiDragSortable,
    initialFolding = false,
    // Initial multi-drag fold when drag started
folding = false,
    // Folding any other time
dragStarted = false,
    dragEl$1,
    clonesFromRect,
    clonesHidden;

function MultiDragPlugin() {
  function MultiDrag(sortable) {
    // Bind all private methods
    for (var fn in this) {
      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {
        this[fn] = this[fn].bind(this);
      }
    }

    if (sortable.options.supportPointer) {
      on(document, 'pointerup', this._deselectMultiDrag);
    } else {
      on(document, 'mouseup', this._deselectMultiDrag);
      on(document, 'touchend', this._deselectMultiDrag);
    }

    on(document, 'keydown', this._checkKeyDown);
    on(document, 'keyup', this._checkKeyUp);
    this.defaults = {
      selectedClass: 'sortable-selected',
      multiDragKey: null,
      setData: function setData(dataTransfer, dragEl) {
        var data = '';

        if (multiDragElements.length && multiDragSortable === sortable) {
          multiDragElements.forEach(function (multiDragElement, i) {
            data += (!i ? '' : ', ') + multiDragElement.textContent;
          });
        } else {
          data = dragEl.textContent;
        }

        dataTransfer.setData('Text', data);
      }
    };
  }

  MultiDrag.prototype = {
    multiDragKeyDown: false,
    isMultiDrag: false,
    delayStartGlobal: function delayStartGlobal(_ref) {
      var dragged = _ref.dragEl;
      dragEl$1 = dragged;
    },
    delayEnded: function delayEnded() {
      this.isMultiDrag = ~multiDragElements.indexOf(dragEl$1);
    },
    setupClone: function setupClone(_ref2) {
      var sortable = _ref2.sortable,
          cancel = _ref2.cancel;
      if (!this.isMultiDrag) return;

      for (var i = 0; i < multiDragElements.length; i++) {
        multiDragClones.push(clone(multiDragElements[i]));
        multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;
        multiDragClones[i].draggable = false;
        multiDragClones[i].style['will-change'] = '';
        toggleClass(multiDragClones[i], this.options.selectedClass, false);
        multiDragElements[i] === dragEl$1 && toggleClass(multiDragClones[i], this.options.chosenClass, false);
      }

      sortable._hideClone();

      cancel();
    },
    clone: function clone(_ref3) {
      var sortable = _ref3.sortable,
          rootEl = _ref3.rootEl,
          dispatchSortableEvent = _ref3.dispatchSortableEvent,
          cancel = _ref3.cancel;
      if (!this.isMultiDrag) return;

      if (!this.options.removeCloneOnHide) {
        if (multiDragElements.length && multiDragSortable === sortable) {
          insertMultiDragClones(true, rootEl);
          dispatchSortableEvent('clone');
          cancel();
        }
      }
    },
    showClone: function showClone(_ref4) {
      var cloneNowShown = _ref4.cloneNowShown,
          rootEl = _ref4.rootEl,
          cancel = _ref4.cancel;
      if (!this.isMultiDrag) return;
      insertMultiDragClones(false, rootEl);
      multiDragClones.forEach(function (clone) {
        css(clone, 'display', '');
      });
      cloneNowShown();
      clonesHidden = false;
      cancel();
    },
    hideClone: function hideClone(_ref5) {
      var _this = this;

      var sortable = _ref5.sortable,
          cloneNowHidden = _ref5.cloneNowHidden,
          cancel = _ref5.cancel;
      if (!this.isMultiDrag) return;
      multiDragClones.forEach(function (clone) {
        css(clone, 'display', 'none');

        if (_this.options.removeCloneOnHide && clone.parentNode) {
          clone.parentNode.removeChild(clone);
        }
      });
      cloneNowHidden();
      clonesHidden = true;
      cancel();
    },
    dragStartGlobal: function dragStartGlobal(_ref6) {
      var sortable = _ref6.sortable;

      if (!this.isMultiDrag && multiDragSortable) {
        multiDragSortable.multiDrag._deselectMultiDrag();
      }

      multiDragElements.forEach(function (multiDragElement) {
        multiDragElement.sortableIndex = index(multiDragElement);
      }); // Sort multi-drag elements

      multiDragElements = multiDragElements.sort(function (a, b) {
        return a.sortableIndex - b.sortableIndex;
      });
      dragStarted = true;
    },
    dragStarted: function dragStarted(_ref7) {
      var _this2 = this;

      var sortable = _ref7.sortable;
      if (!this.isMultiDrag) return;

      if (this.options.sort) {
        // Capture rects,
        // hide multi drag elements (by positioning them absolute),
        // set multi drag elements rects to dragRect,
        // show multi drag elements,
        // animate to rects,
        // unset rects & remove from DOM
        sortable.captureAnimationState();

        if (this.options.animation) {
          multiDragElements.forEach(function (multiDragElement) {
            if (multiDragElement === dragEl$1) return;
            css(multiDragElement, 'position', 'absolute');
          });
          var dragRect = getRect(dragEl$1, false, true, true);
          multiDragElements.forEach(function (multiDragElement) {
            if (multiDragElement === dragEl$1) return;
            setRect(multiDragElement, dragRect);
          });
          folding = true;
          initialFolding = true;
        }
      }

      sortable.animateAll(function () {
        folding = false;
        initialFolding = false;

        if (_this2.options.animation) {
          multiDragElements.forEach(function (multiDragElement) {
            unsetRect(multiDragElement);
          });
        } // Remove all auxiliary multidrag items from el, if sorting enabled


        if (_this2.options.sort) {
          removeMultiDragElements();
        }
      });
    },
    dragOver: function dragOver(_ref8) {
      var target = _ref8.target,
          completed = _ref8.completed,
          cancel = _ref8.cancel;

      if (folding && ~multiDragElements.indexOf(target)) {
        completed(false);
        cancel();
      }
    },
    revert: function revert(_ref9) {
      var fromSortable = _ref9.fromSortable,
          rootEl = _ref9.rootEl,
          sortable = _ref9.sortable,
          dragRect = _ref9.dragRect;

      if (multiDragElements.length > 1) {
        // Setup unfold animation
        multiDragElements.forEach(function (multiDragElement) {
          sortable.addAnimationState({
            target: multiDragElement,
            rect: folding ? getRect(multiDragElement) : dragRect
          });
          unsetRect(multiDragElement);
          multiDragElement.fromRect = dragRect;
          fromSortable.removeAnimationState(multiDragElement);
        });
        folding = false;
        insertMultiDragElements(!this.options.removeCloneOnHide, rootEl);
      }
    },
    dragOverCompleted: function dragOverCompleted(_ref10) {
      var sortable = _ref10.sortable,
          isOwner = _ref10.isOwner,
          insertion = _ref10.insertion,
          activeSortable = _ref10.activeSortable,
          parentEl = _ref10.parentEl,
          putSortable = _ref10.putSortable;
      var options = this.options;

      if (insertion) {
        // Clones must be hidden before folding animation to capture dragRectAbsolute properly
        if (isOwner) {
          activeSortable._hideClone();
        }

        initialFolding = false; // If leaving sort:false root, or already folding - Fold to new location

        if (options.animation && multiDragElements.length > 1 && (folding || !isOwner && !activeSortable.options.sort && !putSortable)) {
          // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible
          var dragRectAbsolute = getRect(dragEl$1, false, true, true);
          multiDragElements.forEach(function (multiDragElement) {
            if (multiDragElement === dragEl$1) return;
            setRect(multiDragElement, dragRectAbsolute); // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted
            // while folding, and so that we can capture them again because old sortable will no longer be fromSortable

            parentEl.appendChild(multiDragElement);
          });
          folding = true;
        } // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out


        if (!isOwner) {
          // Only remove if not folding (folding will remove them anyways)
          if (!folding) {
            removeMultiDragElements();
          }

          if (multiDragElements.length > 1) {
            var clonesHiddenBefore = clonesHidden;

            activeSortable._showClone(sortable); // Unfold animation for clones if showing from hidden


            if (activeSortable.options.animation && !clonesHidden && clonesHiddenBefore) {
              multiDragClones.forEach(function (clone) {
                activeSortable.addAnimationState({
                  target: clone,
                  rect: clonesFromRect
                });
                clone.fromRect = clonesFromRect;
                clone.thisAnimationDuration = null;
              });
            }
          } else {
            activeSortable._showClone(sortable);
          }
        }
      }
    },
    dragOverAnimationCapture: function dragOverAnimationCapture(_ref11) {
      var dragRect = _ref11.dragRect,
          isOwner = _ref11.isOwner,
          activeSortable = _ref11.activeSortable;
      multiDragElements.forEach(function (multiDragElement) {
        multiDragElement.thisAnimationDuration = null;
      });

      if (activeSortable.options.animation && !isOwner && activeSortable.multiDrag.isMultiDrag) {
        clonesFromRect = _extends({}, dragRect);
        var dragMatrix = matrix(dragEl$1, true);
        clonesFromRect.top -= dragMatrix.f;
        clonesFromRect.left -= dragMatrix.e;
      }
    },
    dragOverAnimationComplete: function dragOverAnimationComplete() {
      if (folding) {
        folding = false;
        removeMultiDragElements();
      }
    },
    drop: function drop(_ref12) {
      var evt = _ref12.originalEvent,
          rootEl = _ref12.rootEl,
          parentEl = _ref12.parentEl,
          sortable = _ref12.sortable,
          dispatchSortableEvent = _ref12.dispatchSortableEvent,
          oldIndex = _ref12.oldIndex,
          putSortable = _ref12.putSortable;
      var toSortable = putSortable || this.sortable;
      if (!evt) return;
      var options = this.options,
          children = parentEl.children; // Multi-drag selection

      if (!dragStarted) {
        if (options.multiDragKey && !this.multiDragKeyDown) {
          this._deselectMultiDrag();
        }

        toggleClass(dragEl$1, options.selectedClass, !~multiDragElements.indexOf(dragEl$1));

        if (!~multiDragElements.indexOf(dragEl$1)) {
          multiDragElements.push(dragEl$1);
          dispatchEvent({
            sortable: sortable,
            rootEl: rootEl,
            name: 'select',
            targetEl: dragEl$1,
            originalEvt: evt
          }); // Modifier activated, select from last to dragEl

          if (evt.shiftKey && lastMultiDragSelect && sortable.el.contains(lastMultiDragSelect)) {
            var lastIndex = index(lastMultiDragSelect),
                currentIndex = index(dragEl$1);

            if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {
              // Must include lastMultiDragSelect (select it), in case modified selection from no selection
              // (but previous selection existed)
              var n, i;

              if (currentIndex > lastIndex) {
                i = lastIndex;
                n = currentIndex;
              } else {
                i = currentIndex;
                n = lastIndex + 1;
              }

              for (; i < n; i++) {
                if (~multiDragElements.indexOf(children[i])) continue;
                toggleClass(children[i], options.selectedClass, true);
                multiDragElements.push(children[i]);
                dispatchEvent({
                  sortable: sortable,
                  rootEl: rootEl,
                  name: 'select',
                  targetEl: children[i],
                  originalEvt: evt
                });
              }
            }
          } else {
            lastMultiDragSelect = dragEl$1;
          }

          multiDragSortable = toSortable;
        } else {
          multiDragElements.splice(multiDragElements.indexOf(dragEl$1), 1);
          lastMultiDragSelect = null;
          dispatchEvent({
            sortable: sortable,
            rootEl: rootEl,
            name: 'deselect',
            targetEl: dragEl$1,
            originalEvt: evt
          });
        }
      } // Multi-drag drop


      if (dragStarted && this.isMultiDrag) {
        // Do not "unfold" after around dragEl if reverted
        if ((parentEl[expando].options.sort || parentEl !== rootEl) && multiDragElements.length > 1) {
          var dragRect = getRect(dragEl$1),
              multiDragIndex = index(dragEl$1, ':not(.' + this.options.selectedClass + ')');
          if (!initialFolding && options.animation) dragEl$1.thisAnimationDuration = null;
          toSortable.captureAnimationState();

          if (!initialFolding) {
            if (options.animation) {
              dragEl$1.fromRect = dragRect;
              multiDragElements.forEach(function (multiDragElement) {
                multiDragElement.thisAnimationDuration = null;

                if (multiDragElement !== dragEl$1) {
                  var rect = folding ? getRect(multiDragElement) : dragRect;
                  multiDragElement.fromRect = rect; // Prepare unfold animation

                  toSortable.addAnimationState({
                    target: multiDragElement,
                    rect: rect
                  });
                }
              });
            } // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert
            // properly they must all be removed


            removeMultiDragElements();
            multiDragElements.forEach(function (multiDragElement) {
              if (children[multiDragIndex]) {
                parentEl.insertBefore(multiDragElement, children[multiDragIndex]);
              } else {
                parentEl.appendChild(multiDragElement);
              }

              multiDragIndex++;
            }); // If initial folding is done, the elements may have changed position because they are now
            // unfolding around dragEl, even though dragEl may not have his index changed, so update event
            // must be fired here as Sortable will not.

            if (oldIndex === index(dragEl$1)) {
              var update = false;
              multiDragElements.forEach(function (multiDragElement) {
                if (multiDragElement.sortableIndex !== index(multiDragElement)) {
                  update = true;
                  return;
                }
              });

              if (update) {
                dispatchSortableEvent('update');
              }
            }
          } // Must be done after capturing individual rects (scroll bar)


          multiDragElements.forEach(function (multiDragElement) {
            unsetRect(multiDragElement);
          });
          toSortable.animateAll();
        }

        multiDragSortable = toSortable;
      } // Remove clones if necessary


      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {
        multiDragClones.forEach(function (clone) {
          clone.parentNode && clone.parentNode.removeChild(clone);
        });
      }
    },
    nullingGlobal: function nullingGlobal() {
      this.isMultiDrag = dragStarted = false;
      multiDragClones.length = 0;
    },
    destroyGlobal: function destroyGlobal() {
      this._deselectMultiDrag();

      off(document, 'pointerup', this._deselectMultiDrag);
      off(document, 'mouseup', this._deselectMultiDrag);
      off(document, 'touchend', this._deselectMultiDrag);
      off(document, 'keydown', this._checkKeyDown);
      off(document, 'keyup', this._checkKeyUp);
    },
    _deselectMultiDrag: function _deselectMultiDrag(evt) {
      if (typeof dragStarted !== "undefined" && dragStarted) return; // Only deselect if selection is in this sortable

      if (multiDragSortable !== this.sortable) return; // Only deselect if target is not item in this sortable

      if (evt && closest(evt.target, this.options.draggable, this.sortable.el, false)) return; // Only deselect if left click

      if (evt && evt.button !== 0) return;

      while (multiDragElements.length) {
        var el = multiDragElements[0];
        toggleClass(el, this.options.selectedClass, false);
        multiDragElements.shift();
        dispatchEvent({
          sortable: this.sortable,
          rootEl: this.sortable.el,
          name: 'deselect',
          targetEl: el,
          originalEvt: evt
        });
      }
    },
    _checkKeyDown: function _checkKeyDown(evt) {
      if (evt.key === this.options.multiDragKey) {
        this.multiDragKeyDown = true;
      }
    },
    _checkKeyUp: function _checkKeyUp(evt) {
      if (evt.key === this.options.multiDragKey) {
        this.multiDragKeyDown = false;
      }
    }
  };
  return _extends(MultiDrag, {
    // Static methods & properties
    pluginName: 'multiDrag',
    utils: {
      /**
       * Selects the provided multi-drag item
       * @param  {HTMLElement} el    The element to be selected
       */
      select: function select(el) {
        var sortable = el.parentNode[expando];
        if (!sortable || !sortable.options.multiDrag || ~multiDragElements.indexOf(el)) return;

        if (multiDragSortable && multiDragSortable !== sortable) {
          multiDragSortable.multiDrag._deselectMultiDrag();

          multiDragSortable = sortable;
        }

        toggleClass(el, sortable.options.selectedClass, true);
        multiDragElements.push(el);
      },

      /**
       * Deselects the provided multi-drag item
       * @param  {HTMLElement} el    The element to be deselected
       */
      deselect: function deselect(el) {
        var sortable = el.parentNode[expando],
            index = multiDragElements.indexOf(el);
        if (!sortable || !sortable.options.multiDrag || !~index) return;
        toggleClass(el, sortable.options.selectedClass, false);
        multiDragElements.splice(index, 1);
      }
    },
    eventProperties: function eventProperties() {
      var _this3 = this;

      var oldIndicies = [],
          newIndicies = [];
      multiDragElements.forEach(function (multiDragElement) {
        oldIndicies.push({
          multiDragElement: multiDragElement,
          index: multiDragElement.sortableIndex
        }); // multiDragElements will already be sorted if folding

        var newIndex;

        if (folding && multiDragElement !== dragEl$1) {
          newIndex = -1;
        } else if (folding) {
          newIndex = index(multiDragElement, ':not(.' + _this3.options.selectedClass + ')');
        } else {
          newIndex = index(multiDragElement);
        }

        newIndicies.push({
          multiDragElement: multiDragElement,
          index: newIndex
        });
      });
      return {
        items: _toConsumableArray(multiDragElements),
        clones: [].concat(multiDragClones),
        oldIndicies: oldIndicies,
        newIndicies: newIndicies
      };
    },
    optionListeners: {
      multiDragKey: function multiDragKey(key) {
        key = key.toLowerCase();

        if (key === 'ctrl') {
          key = 'Control';
        } else if (key.length > 1) {
          key = key.charAt(0).toUpperCase() + key.substr(1);
        }

        return key;
      }
    }
  });
}

function insertMultiDragElements(clonesInserted, rootEl) {
  multiDragElements.forEach(function (multiDragElement, i) {
    var target = rootEl.children[multiDragElement.sortableIndex + (clonesInserted ? Number(i) : 0)];

    if (target) {
      rootEl.insertBefore(multiDragElement, target);
    } else {
      rootEl.appendChild(multiDragElement);
    }
  });
}
/**
 * Insert multi-drag clones
 * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted
 * @param  {HTMLElement} rootEl
 */


function insertMultiDragClones(elementsInserted, rootEl) {
  multiDragClones.forEach(function (clone, i) {
    var target = rootEl.children[clone.sortableIndex + (elementsInserted ? Number(i) : 0)];

    if (target) {
      rootEl.insertBefore(clone, target);
    } else {
      rootEl.appendChild(clone);
    }
  });
}

function removeMultiDragElements() {
  multiDragElements.forEach(function (multiDragElement) {
    if (multiDragElement === dragEl$1) return;
    multiDragElement.parentNode && multiDragElement.parentNode.removeChild(multiDragElement);
  });
}

Sortable.mount(new AutoScrollPlugin());
Sortable.mount(Remove, Revert);

/* harmony default export */ __webpack_exports__["default"] = (Sortable);



/***/ }),

/***/ 530:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

(function webpackUniversalModuleDefinition(root, factory) {
	if(true)
		module.exports = factory(__webpack_require__(386));
	else {}
})((typeof self !== 'undefined' ? self : this), function(__WEBPACK_EXTERNAL_MODULE_a352__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __nested_webpack_require_688__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_688__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__nested_webpack_require_688__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__nested_webpack_require_688__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__nested_webpack_require_688__.d = function(exports, name, getter) {
/******/ 		if(!__nested_webpack_require_688__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__nested_webpack_require_688__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__nested_webpack_require_688__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __nested_webpack_require_688__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__nested_webpack_require_688__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __nested_webpack_require_688__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__nested_webpack_require_688__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__nested_webpack_require_688__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__nested_webpack_require_688__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__nested_webpack_require_688__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __nested_webpack_require_688__(__nested_webpack_require_688__.s = "fb15");
/******/ })
/************************************************************************/
/******/ ({

/***/ "01f9":
/***/ (function(module, exports, __nested_webpack_require_4164__) {

"use strict";

var LIBRARY = __nested_webpack_require_4164__("2d00");
var $export = __nested_webpack_require_4164__("5ca1");
var redefine = __nested_webpack_require_4164__("2aba");
var hide = __nested_webpack_require_4164__("32e9");
var Iterators = __nested_webpack_require_4164__("84f2");
var $iterCreate = __nested_webpack_require_4164__("41a0");
var setToStringTag = __nested_webpack_require_4164__("7f20");
var getPrototypeOf = __nested_webpack_require_4164__("38fd");
var ITERATOR = __nested_webpack_require_4164__("2b4c")('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),

/***/ "02f4":
/***/ (function(module, exports, __nested_webpack_require_7070__) {

var toInteger = __nested_webpack_require_7070__("4588");
var defined = __nested_webpack_require_7070__("be13");
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),

/***/ "0390":
/***/ (function(module, exports, __nested_webpack_require_7783__) {

"use strict";

var at = __nested_webpack_require_7783__("02f4")(true);

 // `AdvanceStringIndex` abstract operation
// https://tc39.github.io/ecma262/#sec-advancestringindex
module.exports = function (S, index, unicode) {
  return index + (unicode ? at(S, index).length : 1);
};


/***/ }),

/***/ "0bfb":
/***/ (function(module, exports, __nested_webpack_require_8134__) {

"use strict";

// 21.2.5.3 get RegExp.prototype.flags
var anObject = __nested_webpack_require_8134__("cb7c");
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};


/***/ }),

/***/ "0d58":
/***/ (function(module, exports, __nested_webpack_require_8593__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __nested_webpack_require_8593__("ce10");
var enumBugKeys = __nested_webpack_require_8593__("e11e");

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),

/***/ "1495":
/***/ (function(module, exports, __nested_webpack_require_8892__) {

var dP = __nested_webpack_require_8892__("86cc");
var anObject = __nested_webpack_require_8892__("cb7c");
var getKeys = __nested_webpack_require_8892__("0d58");

module.exports = __nested_webpack_require_8892__("9e1e") ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),

/***/ "214f":
/***/ (function(module, exports, __nested_webpack_require_9392__) {

"use strict";

__nested_webpack_require_9392__("b0c5");
var redefine = __nested_webpack_require_9392__("2aba");
var hide = __nested_webpack_require_9392__("32e9");
var fails = __nested_webpack_require_9392__("79e5");
var defined = __nested_webpack_require_9392__("be13");
var wks = __nested_webpack_require_9392__("2b4c");
var regexpExec = __nested_webpack_require_9392__("520a");

var SPECIES = wks('species');

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
  // #replace needs built-in support for named groups.
  // #match works fine because it just return the exec results, even if it has
  // a "grops" property.
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  return ''.replace(re, '$<a>') !== '7';
});

var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = (function () {
  // Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
  var re = /(?:)/;
  var originalExec = re.exec;
  re.exec = function () { return originalExec.apply(this, arguments); };
  var result = 'ab'.split(re);
  return result.length === 2 && result[0] === 'a' && result[1] === 'b';
})();

module.exports = function (KEY, length, exec) {
  var SYMBOL = wks(KEY);

  var DELEGATES_TO_SYMBOL = !fails(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !fails(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;
    re.exec = function () { execCalled = true; return null; };
    if (KEY === 'split') {
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES] = function () { return re; };
    }
    re[SYMBOL]('');
    return !execCalled;
  }) : undefined;

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||
    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
  ) {
    var nativeRegExpMethod = /./[SYMBOL];
    var fns = exec(
      defined,
      SYMBOL,
      ''[KEY],
      function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {
        if (regexp.exec === regexpExec) {
          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
            // The native String method already delegates to @@method (this
            // polyfilled function), leasing to infinite recursion.
            // We avoid it by directly calling the native @@method method.
            return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };
          }
          return { done: true, value: nativeMethod.call(str, regexp, arg2) };
        }
        return { done: false };
      }
    );
    var strfn = fns[0];
    var rxfn = fns[1];

    redefine(String.prototype, KEY, strfn);
    hide(RegExp.prototype, SYMBOL, length == 2
      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function (string, arg) { return rxfn.call(string, this, arg); }
      // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function (string) { return rxfn.call(string, this); }
    );
  }
};


/***/ }),

/***/ "230e":
/***/ (function(module, exports, __nested_webpack_require_12849__) {

var isObject = __nested_webpack_require_12849__("d3f4");
var document = __nested_webpack_require_12849__("7726").document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),

/***/ "23c6":
/***/ (function(module, exports, __nested_webpack_require_13233__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __nested_webpack_require_13233__("2d95");
var TAG = __nested_webpack_require_13233__("2b4c")('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),

/***/ "2621":
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "2aba":
/***/ (function(module, exports, __nested_webpack_require_14160__) {

var global = __nested_webpack_require_14160__("7726");
var hide = __nested_webpack_require_14160__("32e9");
var has = __nested_webpack_require_14160__("69a8");
var SRC = __nested_webpack_require_14160__("ca5a")('src');
var $toString = __nested_webpack_require_14160__("fa5b");
var TO_STRING = 'toString';
var TPL = ('' + $toString).split(TO_STRING);

__nested_webpack_require_14160__("8378").inspectSource = function (it) {
  return $toString.call(it);
};

(module.exports = function (O, key, val, safe) {
  var isFunction = typeof val == 'function';
  if (isFunction) has(val, 'name') || hide(val, 'name', key);
  if (O[key] === val) return;
  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if (O === global) {
    O[key] = val;
  } else if (!safe) {
    delete O[key];
    hide(O, key, val);
  } else if (O[key]) {
    O[key] = val;
  } else {
    hide(O, key, val);
  }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, TO_STRING, function toString() {
  return typeof this == 'function' && this[SRC] || $toString.call(this);
});


/***/ }),

/***/ "2aeb":
/***/ (function(module, exports, __nested_webpack_require_15334__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __nested_webpack_require_15334__("cb7c");
var dPs = __nested_webpack_require_15334__("1495");
var enumBugKeys = __nested_webpack_require_15334__("e11e");
var IE_PROTO = __nested_webpack_require_15334__("613b")('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __nested_webpack_require_15334__("230e")('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __nested_webpack_require_15334__("fab2").appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),

/***/ "2b4c":
/***/ (function(module, exports, __nested_webpack_require_16945__) {

var store = __nested_webpack_require_16945__("5537")('wks');
var uid = __nested_webpack_require_16945__("ca5a");
var Symbol = __nested_webpack_require_16945__("7726").Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),

/***/ "2d00":
/***/ (function(module, exports) {

module.exports = false;


/***/ }),

/***/ "2d95":
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "2fdb":
/***/ (function(module, exports, __nested_webpack_require_17667__) {

"use strict";
// 21.1.3.7 String.prototype.includes(searchString, position = 0)

var $export = __nested_webpack_require_17667__("5ca1");
var context = __nested_webpack_require_17667__("d2c8");
var INCLUDES = 'includes';

$export($export.P + $export.F * __nested_webpack_require_17667__("5147")(INCLUDES), 'String', {
  includes: function includes(searchString /* , position = 0 */) {
    return !!~context(this, searchString, INCLUDES)
      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "32e9":
/***/ (function(module, exports, __nested_webpack_require_18235__) {

var dP = __nested_webpack_require_18235__("86cc");
var createDesc = __nested_webpack_require_18235__("4630");
module.exports = __nested_webpack_require_18235__("9e1e") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "38fd":
/***/ (function(module, exports, __nested_webpack_require_18611__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __nested_webpack_require_18611__("69a8");
var toObject = __nested_webpack_require_18611__("4bf8");
var IE_PROTO = __nested_webpack_require_18611__("613b")('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),

/***/ "41a0":
/***/ (function(module, exports, __nested_webpack_require_19205__) {

"use strict";

var create = __nested_webpack_require_19205__("2aeb");
var descriptor = __nested_webpack_require_19205__("4630");
var setToStringTag = __nested_webpack_require_19205__("7f20");
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__nested_webpack_require_19205__("32e9")(IteratorPrototype, __nested_webpack_require_19205__("2b4c")('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),

/***/ "456d":
/***/ (function(module, exports, __nested_webpack_require_19831__) {

// 19.1.2.14 Object.keys(O)
var toObject = __nested_webpack_require_19831__("4bf8");
var $keys = __nested_webpack_require_19831__("0d58");

__nested_webpack_require_19831__("5eda")('keys', function () {
  return function keys(it) {
    return $keys(toObject(it));
  };
});


/***/ }),

/***/ "4588":
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),

/***/ "4630":
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "4bf8":
/***/ (function(module, exports, __nested_webpack_require_20609__) {

// 7.1.13 ToObject(argument)
var defined = __nested_webpack_require_20609__("be13");
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),

/***/ "5147":
/***/ (function(module, exports, __nested_webpack_require_20831__) {

var MATCH = __nested_webpack_require_20831__("2b4c")('match');
module.exports = function (KEY) {
  var re = /./;
  try {
    '/./'[KEY](re);
  } catch (e) {
    try {
      re[MATCH] = false;
      return !'/./'[KEY](re);
    } catch (f) { /* empty */ }
  } return true;
};


/***/ }),

/***/ "520a":
/***/ (function(module, exports, __nested_webpack_require_21176__) {

"use strict";


var regexpFlags = __nested_webpack_require_21176__("0bfb");

var nativeExec = RegExp.prototype.exec;
// This always refers to the native implementation, because the
// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
// which loads this file before patching the method.
var nativeReplace = String.prototype.replace;

var patchedExec = nativeExec;

var LAST_INDEX = 'lastIndex';

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/,
      re2 = /b*/g;
  nativeExec.call(re1, 'a');
  nativeExec.call(re2, 'a');
  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;
})();

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;

if (PATCH) {
  patchedExec = function exec(str) {
    var re = this;
    var lastIndex, reCopy, match, i;

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + re.source + '$(?!\\s)', regexpFlags.call(re));
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];

    match = nativeExec.call(re, str);

    if (UPDATES_LAST_INDEX_WRONG && match) {
      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
      // eslint-disable-next-line no-loop-func
      nativeReplace.call(match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    return match;
  };
}

module.exports = patchedExec;


/***/ }),

/***/ "52a7":
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),

/***/ "5537":
/***/ (function(module, exports, __nested_webpack_require_23109__) {

var core = __nested_webpack_require_23109__("8378");
var global = __nested_webpack_require_23109__("7726");
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __nested_webpack_require_23109__("2d00") ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "5ca1":
/***/ (function(module, exports, __nested_webpack_require_23642__) {

var global = __nested_webpack_require_23642__("7726");
var core = __nested_webpack_require_23642__("8378");
var hide = __nested_webpack_require_23642__("32e9");
var redefine = __nested_webpack_require_23642__("2aba");
var ctx = __nested_webpack_require_23642__("9b43");
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
  var key, own, out, exp;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    // export native or passed
    out = (own ? target : source)[key];
    // bind timers to global for call from export context
    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // extend global
    if (target) redefine(target, key, out, type & $export.U);
    // export
    if (exports[key] != out) hide(exports, key, exp);
    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
  }
};
global.core = core;
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),

/***/ "5eda":
/***/ (function(module, exports, __nested_webpack_require_25367__) {

// most Object methods by ES6 should accept primitives
var $export = __nested_webpack_require_25367__("5ca1");
var core = __nested_webpack_require_25367__("8378");
var fails = __nested_webpack_require_25367__("79e5");
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};


/***/ }),

/***/ "5f1b":
/***/ (function(module, exports, __nested_webpack_require_25845__) {

"use strict";


var classof = __nested_webpack_require_25845__("23c6");
var builtinExec = RegExp.prototype.exec;

 // `RegExpExec` abstract operation
// https://tc39.github.io/ecma262/#sec-regexpexec
module.exports = function (R, S) {
  var exec = R.exec;
  if (typeof exec === 'function') {
    var result = exec.call(R, S);
    if (typeof result !== 'object') {
      throw new TypeError('RegExp exec method returned something other than an Object or null');
    }
    return result;
  }
  if (classof(R) !== 'RegExp') {
    throw new TypeError('RegExp#exec called on incompatible receiver');
  }
  return builtinExec.call(R, S);
};


/***/ }),

/***/ "613b":
/***/ (function(module, exports, __nested_webpack_require_26551__) {

var shared = __nested_webpack_require_26551__("5537")('keys');
var uid = __nested_webpack_require_26551__("ca5a");
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),

/***/ "626a":
/***/ (function(module, exports, __nested_webpack_require_26811__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __nested_webpack_require_26811__("2d95");
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),

/***/ "6762":
/***/ (function(module, exports, __nested_webpack_require_27194__) {

"use strict";

// https://github.com/tc39/Array.prototype.includes
var $export = __nested_webpack_require_27194__("5ca1");
var $includes = __nested_webpack_require_27194__("c366")(true);

$export($export.P, 'Array', {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

__nested_webpack_require_27194__("9c6c")('includes');


/***/ }),

/***/ "6821":
/***/ (function(module, exports, __nested_webpack_require_27659__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __nested_webpack_require_27659__("626a");
var defined = __nested_webpack_require_27659__("be13");
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),

/***/ "69a8":
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "6a99":
/***/ (function(module, exports, __nested_webpack_require_28155__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __nested_webpack_require_28155__("d3f4");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "7333":
/***/ (function(module, exports, __nested_webpack_require_28898__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var getKeys = __nested_webpack_require_28898__("0d58");
var gOPS = __nested_webpack_require_28898__("2621");
var pIE = __nested_webpack_require_28898__("52a7");
var toObject = __nested_webpack_require_28898__("4bf8");
var IObject = __nested_webpack_require_28898__("626a");
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __nested_webpack_require_28898__("79e5")(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
  } return T;
} : $assign;


/***/ }),

/***/ "7726":
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),

/***/ "77f1":
/***/ (function(module, exports, __nested_webpack_require_30635__) {

var toInteger = __nested_webpack_require_30635__("4588");
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),

/***/ "79e5":
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),

/***/ "7f20":
/***/ (function(module, exports, __nested_webpack_require_31112__) {

var def = __nested_webpack_require_31112__("86cc").f;
var has = __nested_webpack_require_31112__("69a8");
var TAG = __nested_webpack_require_31112__("2b4c")('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),

/***/ "8378":
/***/ (function(module, exports) {

var core = module.exports = { version: '2.6.5' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),

/***/ "84f2":
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "86cc":
/***/ (function(module, exports, __nested_webpack_require_31751__) {

var anObject = __nested_webpack_require_31751__("cb7c");
var IE8_DOM_DEFINE = __nested_webpack_require_31751__("c69a");
var toPrimitive = __nested_webpack_require_31751__("6a99");
var dP = Object.defineProperty;

exports.f = __nested_webpack_require_31751__("9e1e") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "9b43":
/***/ (function(module, exports, __nested_webpack_require_32441__) {

// optional / simple context binding
var aFunction = __nested_webpack_require_32441__("d8e8");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "9c6c":
/***/ (function(module, exports, __nested_webpack_require_33048__) {

// 22.1.3.31 Array.prototype[@@unscopables]
var UNSCOPABLES = __nested_webpack_require_33048__("2b4c")('unscopables');
var ArrayProto = Array.prototype;
if (ArrayProto[UNSCOPABLES] == undefined) __nested_webpack_require_33048__("32e9")(ArrayProto, UNSCOPABLES, {});
module.exports = function (key) {
  ArrayProto[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "9def":
/***/ (function(module, exports, __nested_webpack_require_33448__) {

// 7.1.15 ToLength
var toInteger = __nested_webpack_require_33448__("4588");
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),

/***/ "9e1e":
/***/ (function(module, exports, __nested_webpack_require_33750__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__nested_webpack_require_33750__("79e5")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "a352":
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_a352__;

/***/ }),

/***/ "a481":
/***/ (function(module, exports, __nested_webpack_require_34139__) {

"use strict";


var anObject = __nested_webpack_require_34139__("cb7c");
var toObject = __nested_webpack_require_34139__("4bf8");
var toLength = __nested_webpack_require_34139__("9def");
var toInteger = __nested_webpack_require_34139__("4588");
var advanceStringIndex = __nested_webpack_require_34139__("0390");
var regExpExec = __nested_webpack_require_34139__("5f1b");
var max = Math.max;
var min = Math.min;
var floor = Math.floor;
var SUBSTITUTION_SYMBOLS = /\$([$&`']|\d\d?|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&`']|\d\d?)/g;

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// @@replace logic
__nested_webpack_require_34139__("214f")('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {
  return [
    // `String.prototype.replace` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = defined(this);
      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];
      return fn !== undefined
        ? fn.call(searchValue, O, replaceValue)
        : $replace.call(String(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
    function (regexp, replaceValue) {
      var res = maybeCallNative($replace, regexp, this, replaceValue);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var functionalReplace = typeof replaceValue === 'function';
      if (!functionalReplace) replaceValue = String(replaceValue);
      var global = rx.global;
      if (global) {
        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }
      var results = [];
      while (true) {
        var result = regExpExec(rx, S);
        if (result === null) break;
        results.push(result);
        if (!global) break;
        var matchStr = String(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
      }
      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];
        var matched = String(result[0]);
        var position = max(min(toInteger(result.index), S.length), 0);
        var captures = [];
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = [matched].concat(captures, position, S);
          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);
          var replacement = String(replaceValue.apply(undefined, replacerArgs));
        } else {
          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }
      return accumulatedResult + S.slice(nextSourcePosition);
    }
  ];

    // https://tc39.github.io/ecma262/#sec-getsubstitution
  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {
    var tailPos = position + matched.length;
    var m = captures.length;
    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
    if (namedCaptures !== undefined) {
      namedCaptures = toObject(namedCaptures);
      symbols = SUBSTITUTION_SYMBOLS;
    }
    return $replace.call(replacement, symbols, function (match, ch) {
      var capture;
      switch (ch.charAt(0)) {
        case '$': return '$';
        case '&': return matched;
        case '`': return str.slice(0, position);
        case "'": return str.slice(tailPos);
        case '<':
          capture = namedCaptures[ch.slice(1, -1)];
          break;
        default: // \d\d?
          var n = +ch;
          if (n === 0) return match;
          if (n > m) {
            var f = floor(n / 10);
            if (f === 0) return match;
            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);
            return match;
          }
          capture = captures[n - 1];
      }
      return capture === undefined ? '' : capture;
    });
  }
});


/***/ }),

/***/ "aae3":
/***/ (function(module, exports, __nested_webpack_require_38885__) {

// 7.2.8 IsRegExp(argument)
var isObject = __nested_webpack_require_38885__("d3f4");
var cof = __nested_webpack_require_38885__("2d95");
var MATCH = __nested_webpack_require_38885__("2b4c")('match');
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
};


/***/ }),

/***/ "ac6a":
/***/ (function(module, exports, __nested_webpack_require_39282__) {

var $iterators = __nested_webpack_require_39282__("cadf");
var getKeys = __nested_webpack_require_39282__("0d58");
var redefine = __nested_webpack_require_39282__("2aba");
var global = __nested_webpack_require_39282__("7726");
var hide = __nested_webpack_require_39282__("32e9");
var Iterators = __nested_webpack_require_39282__("84f2");
var wks = __nested_webpack_require_39282__("2b4c");
var ITERATOR = wks('iterator');
var TO_STRING_TAG = wks('toStringTag');
var ArrayValues = Iterators.Array;

var DOMIterables = {
  CSSRuleList: true, // TODO: Not spec compliant, should be false.
  CSSStyleDeclaration: false,
  CSSValueList: false,
  ClientRectList: false,
  DOMRectList: false,
  DOMStringList: false,
  DOMTokenList: true,
  DataTransferItemList: false,
  FileList: false,
  HTMLAllCollection: false,
  HTMLCollection: false,
  HTMLFormElement: false,
  HTMLSelectElement: false,
  MediaList: true, // TODO: Not spec compliant, should be false.
  MimeTypeArray: false,
  NamedNodeMap: false,
  NodeList: true,
  PaintRequestList: false,
  Plugin: false,
  PluginArray: false,
  SVGLengthList: false,
  SVGNumberList: false,
  SVGPathSegList: false,
  SVGPointList: false,
  SVGStringList: false,
  SVGTransformList: false,
  SourceBufferList: false,
  StyleSheetList: true, // TODO: Not spec compliant, should be false.
  TextTrackCueList: false,
  TextTrackList: false,
  TouchList: false
};

for (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {
  var NAME = collections[i];
  var explicit = DOMIterables[NAME];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  var key;
  if (proto) {
    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
    Iterators[NAME] = ArrayValues;
    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);
  }
}


/***/ }),

/***/ "b0c5":
/***/ (function(module, exports, __nested_webpack_require_41209__) {

"use strict";

var regexpExec = __nested_webpack_require_41209__("520a");
__nested_webpack_require_41209__("5ca1")({
  target: 'RegExp',
  proto: true,
  forced: regexpExec !== /./.exec
}, {
  exec: regexpExec
});


/***/ }),

/***/ "be13":
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),

/***/ "c366":
/***/ (function(module, exports, __nested_webpack_require_41706__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __nested_webpack_require_41706__("6821");
var toLength = __nested_webpack_require_41706__("9def");
var toAbsoluteIndex = __nested_webpack_require_41706__("77f1");
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),

/***/ "c649":
/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_42729__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __nested_webpack_require_42729__.d(__nested_webpack_exports__, "c", function() { return insertNodeAt; });
/* harmony export (binding) */ __nested_webpack_require_42729__.d(__nested_webpack_exports__, "a", function() { return camelize; });
/* harmony export (binding) */ __nested_webpack_require_42729__.d(__nested_webpack_exports__, "b", function() { return console; });
/* harmony export (binding) */ __nested_webpack_require_42729__.d(__nested_webpack_exports__, "d", function() { return removeNode; });
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_42729__("a481");
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_42729__.n(core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_0__);


function getConsole() {
  if (typeof window !== "undefined") {
    return window.console;
  }

  return global.console;
}

var console = getConsole();

function cached(fn) {
  var cache = Object.create(null);
  return function cachedFn(str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str));
  };
}

var regex = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(regex, function (_, c) {
    return c ? c.toUpperCase() : "";
  });
});

function removeNode(node) {
  if (node.parentElement !== null) {
    node.parentElement.removeChild(node);
  }
}

function insertNodeAt(fatherNode, node, position) {
  var refNode = position === 0 ? fatherNode.children[0] : fatherNode.children[position - 1].nextSibling;
  fatherNode.insertBefore(node, refNode);
}


/* WEBPACK VAR INJECTION */}.call(this, __nested_webpack_require_42729__("c8ba")))

/***/ }),

/***/ "c69a":
/***/ (function(module, exports, __nested_webpack_require_44512__) {

module.exports = !__nested_webpack_require_44512__("9e1e") && !__nested_webpack_require_44512__("79e5")(function () {
  return Object.defineProperty(__nested_webpack_require_44512__("230e")('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "c8ba":
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "ca5a":
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),

/***/ "cadf":
/***/ (function(module, exports, __nested_webpack_require_45568__) {

"use strict";

var addToUnscopables = __nested_webpack_require_45568__("9c6c");
var step = __nested_webpack_require_45568__("d53b");
var Iterators = __nested_webpack_require_45568__("84f2");
var toIObject = __nested_webpack_require_45568__("6821");

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __nested_webpack_require_45568__("01f9")(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "cb7c":
/***/ (function(module, exports, __nested_webpack_require_46777__) {

var isObject = __nested_webpack_require_46777__("d3f4");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),

/***/ "ce10":
/***/ (function(module, exports, __nested_webpack_require_47019__) {

var has = __nested_webpack_require_47019__("69a8");
var toIObject = __nested_webpack_require_47019__("6821");
var arrayIndexOf = __nested_webpack_require_47019__("c366")(false);
var IE_PROTO = __nested_webpack_require_47019__("613b")('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "d2c8":
/***/ (function(module, exports, __nested_webpack_require_47655__) {

// helper for String#{startsWith, endsWith, includes}
var isRegExp = __nested_webpack_require_47655__("aae3");
var defined = __nested_webpack_require_47655__("be13");

module.exports = function (that, searchString, NAME) {
  if (isRegExp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
  return String(defined(that));
};


/***/ }),

/***/ "d3f4":
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "d53b":
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),

/***/ "d8e8":
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),

/***/ "e11e":
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),

/***/ "f559":
/***/ (function(module, exports, __nested_webpack_require_48796__) {

"use strict";
// 21.1.3.18 String.prototype.startsWith(searchString [, position ])

var $export = __nested_webpack_require_48796__("5ca1");
var toLength = __nested_webpack_require_48796__("9def");
var context = __nested_webpack_require_48796__("d2c8");
var STARTS_WITH = 'startsWith';
var $startsWith = ''[STARTS_WITH];

$export($export.P + $export.F * __nested_webpack_require_48796__("5147")(STARTS_WITH), 'String', {
  startsWith: function startsWith(searchString /* , position = 0 */) {
    var that = context(this, searchString, STARTS_WITH);
    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));
    var search = String(searchString);
    return $startsWith
      ? $startsWith.call(that, search, index)
      : that.slice(index, index + search.length) === search;
  }
});


/***/ }),

/***/ "f6fd":
/***/ (function(module, exports) {

// document.currentScript polyfill by Adam Miller

// MIT license

(function(document){
  var currentScript = "currentScript",
      scripts = document.getElementsByTagName('script'); // Live NodeList collection

  // If browser needs currentScript polyfill, add get currentScript() to the document object
  if (!(currentScript in document)) {
    Object.defineProperty(document, currentScript, {
      get: function(){

        // IE 6-10 supports script readyState
        // IE 10+ support stack trace
        try { throw new Error(); }
        catch (err) {

          // Find the second match for the "at" string to get file src url from stack.
          // Specifically works with the format of stack traces in IE.
          var i, res = ((/.*at [^\(]*\((.*):.+:.+\)$/ig).exec(err.stack) || [false])[1];

          // For all scripts on the page, if src matches or if ready state is interactive, return the script tag
          for(i in scripts){
            if(scripts[i].src == res || scripts[i].readyState == "interactive"){
              return scripts[i];
            }
          }

          // If no match, return null
          return null;
        }
      }
    });
  }
})(document);


/***/ }),

/***/ "f751":
/***/ (function(module, exports, __nested_webpack_require_50913__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __nested_webpack_require_50913__("5ca1");

$export($export.S + $export.F, 'Object', { assign: __nested_webpack_require_50913__("7333") });


/***/ }),

/***/ "fa5b":
/***/ (function(module, exports, __nested_webpack_require_51166__) {

module.exports = __nested_webpack_require_51166__("5537")('native-function-to-string', Function.toString);


/***/ }),

/***/ "fab2":
/***/ (function(module, exports, __nested_webpack_require_51344__) {

var document = __nested_webpack_require_51344__("7726").document;
module.exports = document && document.documentElement;


/***/ }),

/***/ "fb15":
/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_51548__) {

"use strict";
// ESM COMPAT FLAG
__nested_webpack_require_51548__.r(__nested_webpack_exports__);

// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js
// This file is imported into lib/wc client bundles.

if (typeof window !== 'undefined') {
  if (true) {
    __nested_webpack_require_51548__("f6fd")
  }

  var setPublicPath_i
  if ((setPublicPath_i = window.document.currentScript) && (setPublicPath_i = setPublicPath_i.src.match(/(.+\/)[^/]+\.js(\?.*)?$/))) {
    __nested_webpack_require_51548__.p = setPublicPath_i[1] // eslint-disable-line
  }
}

// Indicate to webpack that this file can be concatenated
/* harmony default export */ var setPublicPath = (null);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.object.assign.js
var es6_object_assign = __nested_webpack_require_51548__("f751");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.string.starts-with.js
var es6_string_starts_with = __nested_webpack_require_51548__("f559");

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom.iterable.js
var web_dom_iterable = __nested_webpack_require_51548__("ac6a");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.iterator.js
var es6_array_iterator = __nested_webpack_require_51548__("cadf");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.object.keys.js
var es6_object_keys = __nested_webpack_require_51548__("456d");

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js
function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js




function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
// EXTERNAL MODULE: ./node_modules/core-js/modules/es7.array.includes.js
var es7_array_includes = __nested_webpack_require_51548__("6762");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.string.includes.js
var es6_string_includes = __nested_webpack_require_51548__("2fdb");

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArray.js
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js




function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
// EXTERNAL MODULE: external {"commonjs":"sortablejs","commonjs2":"sortablejs","amd":"sortablejs","root":"Sortable"}
var external_commonjs_sortablejs_commonjs2_sortablejs_amd_sortablejs_root_Sortable_ = __nested_webpack_require_51548__("a352");
var external_commonjs_sortablejs_commonjs2_sortablejs_amd_sortablejs_root_Sortable_default = /*#__PURE__*/__nested_webpack_require_51548__.n(external_commonjs_sortablejs_commonjs2_sortablejs_amd_sortablejs_root_Sortable_);

// EXTERNAL MODULE: ./src/util/helper.js
var helper = __nested_webpack_require_51548__("c649");

// CONCATENATED MODULE: ./src/vuedraggable.js












function buildAttribute(object, propName, value) {
  if (value === undefined) {
    return object;
  }

  object = object || {};
  object[propName] = value;
  return object;
}

function computeVmIndex(vnodes, element) {
  return vnodes.map(function (elt) {
    return elt.elm;
  }).indexOf(element);
}

function _computeIndexes(slots, children, isTransition, footerOffset) {
  if (!slots) {
    return [];
  }

  var elmFromNodes = slots.map(function (elt) {
    return elt.elm;
  });
  var footerIndex = children.length - footerOffset;

  var rawIndexes = _toConsumableArray(children).map(function (elt, idx) {
    return idx >= footerIndex ? elmFromNodes.length : elmFromNodes.indexOf(elt);
  });

  return isTransition ? rawIndexes.filter(function (ind) {
    return ind !== -1;
  }) : rawIndexes;
}

function emit(evtName, evtData) {
  var _this = this;

  this.$nextTick(function () {
    return _this.$emit(evtName.toLowerCase(), evtData);
  });
}

function delegateAndEmit(evtName) {
  var _this2 = this;

  return function (evtData) {
    if (_this2.realList !== null) {
      _this2["onDrag" + evtName](evtData);
    }

    emit.call(_this2, evtName, evtData);
  };
}

function isTransitionName(name) {
  return ["transition-group", "TransitionGroup"].includes(name);
}

function vuedraggable_isTransition(slots) {
  if (!slots || slots.length !== 1) {
    return false;
  }

  var _slots = _slicedToArray(slots, 1),
      componentOptions = _slots[0].componentOptions;

  if (!componentOptions) {
    return false;
  }

  return isTransitionName(componentOptions.tag);
}

function getSlot(slot, scopedSlot, key) {
  return slot[key] || (scopedSlot[key] ? scopedSlot[key]() : undefined);
}

function computeChildrenAndOffsets(children, slot, scopedSlot) {
  var headerOffset = 0;
  var footerOffset = 0;
  var header = getSlot(slot, scopedSlot, "header");

  if (header) {
    headerOffset = header.length;
    children = children ? [].concat(_toConsumableArray(header), _toConsumableArray(children)) : _toConsumableArray(header);
  }

  var footer = getSlot(slot, scopedSlot, "footer");

  if (footer) {
    footerOffset = footer.length;
    children = children ? [].concat(_toConsumableArray(children), _toConsumableArray(footer)) : _toConsumableArray(footer);
  }

  return {
    children: children,
    headerOffset: headerOffset,
    footerOffset: footerOffset
  };
}

function getComponentAttributes($attrs, componentData) {
  var attributes = null;

  var update = function update(name, value) {
    attributes = buildAttribute(attributes, name, value);
  };

  var attrs = Object.keys($attrs).filter(function (key) {
    return key === "id" || key.startsWith("data-");
  }).reduce(function (res, key) {
    res[key] = $attrs[key];
    return res;
  }, {});
  update("attrs", attrs);

  if (!componentData) {
    return attributes;
  }

  var on = componentData.on,
      props = componentData.props,
      componentDataAttrs = componentData.attrs;
  update("on", on);
  update("props", props);
  Object.assign(attributes.attrs, componentDataAttrs);
  return attributes;
}

var eventsListened = ["Start", "Add", "Remove", "Update", "End"];
var eventsToEmit = ["Choose", "Unchoose", "Sort", "Filter", "Clone"];
var readonlyProperties = ["Move"].concat(eventsListened, eventsToEmit).map(function (evt) {
  return "on" + evt;
});
var draggingElement = null;
var props = {
  options: Object,
  list: {
    type: Array,
    required: false,
    default: null
  },
  value: {
    type: Array,
    required: false,
    default: null
  },
  noTransitionOnDrag: {
    type: Boolean,
    default: false
  },
  clone: {
    type: Function,
    default: function _default(original) {
      return original;
    }
  },
  element: {
    type: String,
    default: "div"
  },
  tag: {
    type: String,
    default: null
  },
  move: {
    type: Function,
    default: null
  },
  componentData: {
    type: Object,
    required: false,
    default: null
  }
};
var draggableComponent = {
  name: "draggable",
  inheritAttrs: false,
  props: props,
  data: function data() {
    return {
      transitionMode: false,
      noneFunctionalComponentMode: false
    };
  },
  render: function render(h) {
    var slots = this.$slots.default;
    this.transitionMode = vuedraggable_isTransition(slots);

    var _computeChildrenAndOf = computeChildrenAndOffsets(slots, this.$slots, this.$scopedSlots),
        children = _computeChildrenAndOf.children,
        headerOffset = _computeChildrenAndOf.headerOffset,
        footerOffset = _computeChildrenAndOf.footerOffset;

    this.headerOffset = headerOffset;
    this.footerOffset = footerOffset;
    var attributes = getComponentAttributes(this.$attrs, this.componentData);
    return h(this.getTag(), attributes, children);
  },
  created: function created() {
    if (this.list !== null && this.value !== null) {
      helper["b" /* console */].error("Value and list props are mutually exclusive! Please set one or another.");
    }

    if (this.element !== "div") {
      helper["b" /* console */].warn("Element props is deprecated please use tag props instead. See https://github.com/SortableJS/Vue.Draggable/blob/master/documentation/migrate.md#element-props");
    }

    if (this.options !== undefined) {
      helper["b" /* console */].warn("Options props is deprecated, add sortable options directly as vue.draggable item, or use v-bind. See https://github.com/SortableJS/Vue.Draggable/blob/master/documentation/migrate.md#options-props");
    }
  },
  mounted: function mounted() {
    var _this3 = this;

    this.noneFunctionalComponentMode = this.getTag().toLowerCase() !== this.$el.nodeName.toLowerCase() && !this.getIsFunctional();

    if (this.noneFunctionalComponentMode && this.transitionMode) {
      throw new Error("Transition-group inside component is not supported. Please alter tag value or remove transition-group. Current tag value: ".concat(this.getTag()));
    }

    var optionsAdded = {};
    eventsListened.forEach(function (elt) {
      optionsAdded["on" + elt] = delegateAndEmit.call(_this3, elt);
    });
    eventsToEmit.forEach(function (elt) {
      optionsAdded["on" + elt] = emit.bind(_this3, elt);
    });
    var attributes = Object.keys(this.$attrs).reduce(function (res, key) {
      res[Object(helper["a" /* camelize */])(key)] = _this3.$attrs[key];
      return res;
    }, {});
    var options = Object.assign({}, this.options, attributes, optionsAdded, {
      onMove: function onMove(evt, originalEvent) {
        return _this3.onDragMove(evt, originalEvent);
      }
    });
    !("draggable" in options) && (options.draggable = ">*");
    this._sortable = new external_commonjs_sortablejs_commonjs2_sortablejs_amd_sortablejs_root_Sortable_default.a(this.rootContainer, options);
    this.computeIndexes();
  },
  beforeDestroy: function beforeDestroy() {
    if (this._sortable !== undefined) this._sortable.destroy();
  },
  computed: {
    rootContainer: function rootContainer() {
      return this.transitionMode ? this.$el.children[0] : this.$el;
    },
    realList: function realList() {
      return this.list ? this.list : this.value;
    }
  },
  watch: {
    options: {
      handler: function handler(newOptionValue) {
        this.updateOptions(newOptionValue);
      },
      deep: true
    },
    $attrs: {
      handler: function handler(newOptionValue) {
        this.updateOptions(newOptionValue);
      },
      deep: true
    },
    realList: function realList() {
      this.computeIndexes();
    }
  },
  methods: {
    getIsFunctional: function getIsFunctional() {
      var fnOptions = this._vnode.fnOptions;
      return fnOptions && fnOptions.functional;
    },
    getTag: function getTag() {
      return this.tag || this.element;
    },
    updateOptions: function updateOptions(newOptionValue) {
      for (var property in newOptionValue) {
        var value = Object(helper["a" /* camelize */])(property);

        if (readonlyProperties.indexOf(value) === -1) {
          this._sortable.option(value, newOptionValue[property]);
        }
      }
    },
    getChildrenNodes: function getChildrenNodes() {
      if (this.noneFunctionalComponentMode) {
        return this.$children[0].$slots.default;
      }

      var rawNodes = this.$slots.default;
      return this.transitionMode ? rawNodes[0].child.$slots.default : rawNodes;
    },
    computeIndexes: function computeIndexes() {
      var _this4 = this;

      this.$nextTick(function () {
        _this4.visibleIndexes = _computeIndexes(_this4.getChildrenNodes(), _this4.rootContainer.children, _this4.transitionMode, _this4.footerOffset);
      });
    },
    getUnderlyingVm: function getUnderlyingVm(htmlElt) {
      var index = computeVmIndex(this.getChildrenNodes() || [], htmlElt);

      if (index === -1) {
        //Edge case during move callback: related element might be
        //an element different from collection
        return null;
      }

      var element = this.realList[index];
      return {
        index: index,
        element: element
      };
    },
    getUnderlyingPotencialDraggableComponent: function getUnderlyingPotencialDraggableComponent(_ref) {
      var vue = _ref.__vue__;

      if (!vue || !vue.$options || !isTransitionName(vue.$options._componentTag)) {
        if (!("realList" in vue) && vue.$children.length === 1 && "realList" in vue.$children[0]) return vue.$children[0];
        return vue;
      }

      return vue.$parent;
    },
    emitChanges: function emitChanges(evt) {
      var _this5 = this;

      this.$nextTick(function () {
        _this5.$emit("change", evt);
      });
    },
    alterList: function alterList(onList) {
      if (this.list) {
        onList(this.list);
        return;
      }

      var newList = _toConsumableArray(this.value);

      onList(newList);
      this.$emit("input", newList);
    },
    spliceList: function spliceList() {
      var _arguments = arguments;

      var spliceList = function spliceList(list) {
        return list.splice.apply(list, _toConsumableArray(_arguments));
      };

      this.alterList(spliceList);
    },
    updatePosition: function updatePosition(oldIndex, newIndex) {
      var updatePosition = function updatePosition(list) {
        return list.splice(newIndex, 0, list.splice(oldIndex, 1)[0]);
      };

      this.alterList(updatePosition);
    },
    getRelatedContextFromMoveEvent: function getRelatedContextFromMoveEvent(_ref2) {
      var to = _ref2.to,
          related = _ref2.related;
      var component = this.getUnderlyingPotencialDraggableComponent(to);

      if (!component) {
        return {
          component: component
        };
      }

      var list = component.realList;
      var context = {
        list: list,
        component: component
      };

      if (to !== related && list && component.getUnderlyingVm) {
        var destination = component.getUnderlyingVm(related);

        if (destination) {
          return Object.assign(destination, context);
        }
      }

      return context;
    },
    getVmIndex: function getVmIndex(domIndex) {
      var indexes = this.visibleIndexes;
      var numberIndexes = indexes.length;
      return domIndex > numberIndexes - 1 ? numberIndexes : indexes[domIndex];
    },
    getComponent: function getComponent() {
      return this.$slots.default[0].componentInstance;
    },
    resetTransitionData: function resetTransitionData(index) {
      if (!this.noTransitionOnDrag || !this.transitionMode) {
        return;
      }

      var nodes = this.getChildrenNodes();
      nodes[index].data = null;
      var transitionContainer = this.getComponent();
      transitionContainer.children = [];
      transitionContainer.kept = undefined;
    },
    onDragStart: function onDragStart(evt) {
      this.context = this.getUnderlyingVm(evt.item);
      evt.item._underlying_vm_ = this.clone(this.context.element);
      draggingElement = evt.item;
    },
    onDragAdd: function onDragAdd(evt) {
      var element = evt.item._underlying_vm_;

      if (element === undefined) {
        return;
      }

      Object(helper["d" /* removeNode */])(evt.item);
      var newIndex = this.getVmIndex(evt.newIndex);
      this.spliceList(newIndex, 0, element);
      this.computeIndexes();
      var added = {
        element: element,
        newIndex: newIndex
      };
      this.emitChanges({
        added: added
      });
    },
    onDragRemove: function onDragRemove(evt) {
      Object(helper["c" /* insertNodeAt */])(this.rootContainer, evt.item, evt.oldIndex);

      if (evt.pullMode === "clone") {
        Object(helper["d" /* removeNode */])(evt.clone);
        return;
      }

      var oldIndex = this.context.index;
      this.spliceList(oldIndex, 1);
      var removed = {
        element: this.context.element,
        oldIndex: oldIndex
      };
      this.resetTransitionData(oldIndex);
      this.emitChanges({
        removed: removed
      });
    },
    onDragUpdate: function onDragUpdate(evt) {
      Object(helper["d" /* removeNode */])(evt.item);
      Object(helper["c" /* insertNodeAt */])(evt.from, evt.item, evt.oldIndex);
      var oldIndex = this.context.index;
      var newIndex = this.getVmIndex(evt.newIndex);
      this.updatePosition(oldIndex, newIndex);
      var moved = {
        element: this.context.element,
        oldIndex: oldIndex,
        newIndex: newIndex
      };
      this.emitChanges({
        moved: moved
      });
    },
    updateProperty: function updateProperty(evt, propertyName) {
      evt.hasOwnProperty(propertyName) && (evt[propertyName] += this.headerOffset);
    },
    computeFutureIndex: function computeFutureIndex(relatedContext, evt) {
      if (!relatedContext.element) {
        return 0;
      }

      var domChildren = _toConsumableArray(evt.to.children).filter(function (el) {
        return el.style["display"] !== "none";
      });

      var currentDOMIndex = domChildren.indexOf(evt.related);
      var currentIndex = relatedContext.component.getVmIndex(currentDOMIndex);
      var draggedInList = domChildren.indexOf(draggingElement) !== -1;
      return draggedInList || !evt.willInsertAfter ? currentIndex : currentIndex + 1;
    },
    onDragMove: function onDragMove(evt, originalEvent) {
      var onMove = this.move;

      if (!onMove || !this.realList) {
        return true;
      }

      var relatedContext = this.getRelatedContextFromMoveEvent(evt);
      var draggedContext = this.context;
      var futureIndex = this.computeFutureIndex(relatedContext, evt);
      Object.assign(draggedContext, {
        futureIndex: futureIndex
      });
      var sendEvt = Object.assign({}, evt, {
        relatedContext: relatedContext,
        draggedContext: draggedContext
      });
      return onMove(sendEvt, originalEvent);
    },
    onDragEnd: function onDragEnd() {
      this.computeIndexes();
      draggingElement = null;
    }
  }
};

if (typeof window !== "undefined" && "Vue" in window) {
  window.Vue.component("draggable", draggableComponent);
}

/* harmony default export */ var vuedraggable = (draggableComponent);
// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js


/* harmony default export */ var entry_lib = __nested_webpack_exports__["default"] = (vuedraggable);



/***/ })

/******/ })["default"];
});
//# sourceMappingURL=vuedraggable.umd.js.map

/***/ }),

/***/ 897:
/***/ (function(module) {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE__897__;

/***/ }),

/***/ 203:
/***/ (function(module) {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE__203__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	!function() {
/******/ 		__webpack_require__.p = "";
/******/ 	}();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
!function() {
"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "default": function() { return /* binding */ entry_lib; }
});

// NAMESPACE OBJECT: ../../../../../../../../node_modules/axios/lib/platform/common/utils.js
var common_utils_namespaceObject = {};
__webpack_require__.r(common_utils_namespaceObject);
__webpack_require__.d(common_utils_namespaceObject, {
  hasBrowserEnv: function() { return hasBrowserEnv; },
  hasStandardBrowserEnv: function() { return hasStandardBrowserEnv; },
  hasStandardBrowserWebWorkerEnv: function() { return hasStandardBrowserWebWorkerEnv; }
});

// NAMESPACE OBJECT: ./src/Util/interfaces.ts
var interfaces_namespaceObject = {};
__webpack_require__.r(interfaces_namespaceObject);

;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js
/* eslint-disable no-var */
// This file is imported into lib/wc client bundles.

if (typeof window !== 'undefined') {
  var currentScript = window.document.currentScript
  if (true) {
    var getCurrentScript = __webpack_require__(914)
    currentScript = getCurrentScript()

    // for backward compatibility, because previously we directly included the polyfill
    if (!('currentScript' in document)) {
      Object.defineProperty(document, 'currentScript', { get: getCurrentScript })
    }
  }

  var src = currentScript && currentScript.src.match(/(.+\/)[^/]+\.js(\?.*)?$/)
  if (src) {
    __webpack_require__.p = src[1] // eslint-disable-line
  }
}

// Indicate to webpack that this file can be concatenated
/* harmony default export */ var setPublicPath = (null);

;// CONCATENATED MODULE: ../../../../../../../../node_modules/marked/lib/marked.esm.js
/**
 * marked v11.1.1 - a markdown parser
 * Copyright (c) 2011-2023, Christopher Jeffrey. (MIT Licensed)
 * https://github.com/markedjs/marked
 */

/**
 * DO NOT EDIT THIS FILE
 * The code in this file is generated from files in ./src/
 */

/**
 * Gets the original marked default options.
 */
function _getDefaults() {
    return {
        async: false,
        breaks: false,
        extensions: null,
        gfm: true,
        hooks: null,
        pedantic: false,
        renderer: null,
        silent: false,
        tokenizer: null,
        walkTokens: null
    };
}
let _defaults = _getDefaults();
function changeDefaults(newDefaults) {
    _defaults = newDefaults;
}

/**
 * Helpers
 */
const escapeTest = /[&<>"']/;
const escapeReplace = new RegExp(escapeTest.source, 'g');
const escapeTestNoEncode = /[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/;
const escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');
const escapeReplacements = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
};
const getEscapeReplacement = (ch) => escapeReplacements[ch];
function escape$1(html, encode) {
    if (encode) {
        if (escapeTest.test(html)) {
            return html.replace(escapeReplace, getEscapeReplacement);
        }
    }
    else {
        if (escapeTestNoEncode.test(html)) {
            return html.replace(escapeReplaceNoEncode, getEscapeReplacement);
        }
    }
    return html;
}
const unescapeTest = /&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/ig;
function marked_esm_unescape(html) {
    // explicitly match decimal, hex, and named HTML entities
    return html.replace(unescapeTest, (_, n) => {
        n = n.toLowerCase();
        if (n === 'colon')
            return ':';
        if (n.charAt(0) === '#') {
            return n.charAt(1) === 'x'
                ? String.fromCharCode(parseInt(n.substring(2), 16))
                : String.fromCharCode(+n.substring(1));
        }
        return '';
    });
}
const caret = /(^|[^\[])\^/g;
function edit(regex, opt) {
    let source = typeof regex === 'string' ? regex : regex.source;
    opt = opt || '';
    const obj = {
        replace: (name, val) => {
            let valSource = typeof val === 'string' ? val : val.source;
            valSource = valSource.replace(caret, '$1');
            source = source.replace(name, valSource);
            return obj;
        },
        getRegex: () => {
            return new RegExp(source, opt);
        }
    };
    return obj;
}
function cleanUrl(href) {
    try {
        href = encodeURI(href).replace(/%25/g, '%');
    }
    catch (e) {
        return null;
    }
    return href;
}
const noopTest = { exec: () => null };
function splitCells(tableRow, count) {
    // ensure that every cell-delimiting pipe has a space
    // before it to distinguish it from an escaped pipe
    const row = tableRow.replace(/\|/g, (match, offset, str) => {
        let escaped = false;
        let curr = offset;
        while (--curr >= 0 && str[curr] === '\\')
            escaped = !escaped;
        if (escaped) {
            // odd number of slashes means | is escaped
            // so we leave it alone
            return '|';
        }
        else {
            // add space before unescaped |
            return ' |';
        }
    }), cells = row.split(/ \|/);
    let i = 0;
    // First/last cell in a row cannot be empty if it has no leading/trailing pipe
    if (!cells[0].trim()) {
        cells.shift();
    }
    if (cells.length > 0 && !cells[cells.length - 1].trim()) {
        cells.pop();
    }
    if (count) {
        if (cells.length > count) {
            cells.splice(count);
        }
        else {
            while (cells.length < count)
                cells.push('');
        }
    }
    for (; i < cells.length; i++) {
        // leading or trailing whitespace is ignored per the gfm spec
        cells[i] = cells[i].trim().replace(/\\\|/g, '|');
    }
    return cells;
}
/**
 * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').
 * /c*$/ is vulnerable to REDOS.
 *
 * @param str
 * @param c
 * @param invert Remove suffix of non-c chars instead. Default falsey.
 */
function rtrim(str, c, invert) {
    const l = str.length;
    if (l === 0) {
        return '';
    }
    // Length of suffix matching the invert condition.
    let suffLen = 0;
    // Step left until we fail to match the invert condition.
    while (suffLen < l) {
        const currChar = str.charAt(l - suffLen - 1);
        if (currChar === c && !invert) {
            suffLen++;
        }
        else if (currChar !== c && invert) {
            suffLen++;
        }
        else {
            break;
        }
    }
    return str.slice(0, l - suffLen);
}
function findClosingBracket(str, b) {
    if (str.indexOf(b[1]) === -1) {
        return -1;
    }
    let level = 0;
    for (let i = 0; i < str.length; i++) {
        if (str[i] === '\\') {
            i++;
        }
        else if (str[i] === b[0]) {
            level++;
        }
        else if (str[i] === b[1]) {
            level--;
            if (level < 0) {
                return i;
            }
        }
    }
    return -1;
}

function outputLink(cap, link, raw, lexer) {
    const href = link.href;
    const title = link.title ? escape$1(link.title) : null;
    const text = cap[1].replace(/\\([\[\]])/g, '$1');
    if (cap[0].charAt(0) !== '!') {
        lexer.state.inLink = true;
        const token = {
            type: 'link',
            raw,
            href,
            title,
            text,
            tokens: lexer.inlineTokens(text)
        };
        lexer.state.inLink = false;
        return token;
    }
    return {
        type: 'image',
        raw,
        href,
        title,
        text: escape$1(text)
    };
}
function indentCodeCompensation(raw, text) {
    const matchIndentToCode = raw.match(/^(\s+)(?:```)/);
    if (matchIndentToCode === null) {
        return text;
    }
    const indentToCode = matchIndentToCode[1];
    return text
        .split('\n')
        .map(node => {
        const matchIndentInNode = node.match(/^\s+/);
        if (matchIndentInNode === null) {
            return node;
        }
        const [indentInNode] = matchIndentInNode;
        if (indentInNode.length >= indentToCode.length) {
            return node.slice(indentToCode.length);
        }
        return node;
    })
        .join('\n');
}
/**
 * Tokenizer
 */
class _Tokenizer {
    options;
    rules; // set by the lexer
    lexer; // set by the lexer
    constructor(options) {
        this.options = options || _defaults;
    }
    space(src) {
        const cap = this.rules.block.newline.exec(src);
        if (cap && cap[0].length > 0) {
            return {
                type: 'space',
                raw: cap[0]
            };
        }
    }
    code(src) {
        const cap = this.rules.block.code.exec(src);
        if (cap) {
            const text = cap[0].replace(/^ {1,4}/gm, '');
            return {
                type: 'code',
                raw: cap[0],
                codeBlockStyle: 'indented',
                text: !this.options.pedantic
                    ? rtrim(text, '\n')
                    : text
            };
        }
    }
    fences(src) {
        const cap = this.rules.block.fences.exec(src);
        if (cap) {
            const raw = cap[0];
            const text = indentCodeCompensation(raw, cap[3] || '');
            return {
                type: 'code',
                raw,
                lang: cap[2] ? cap[2].trim().replace(this.rules.inline.anyPunctuation, '$1') : cap[2],
                text
            };
        }
    }
    heading(src) {
        const cap = this.rules.block.heading.exec(src);
        if (cap) {
            let text = cap[2].trim();
            // remove trailing #s
            if (/#$/.test(text)) {
                const trimmed = rtrim(text, '#');
                if (this.options.pedantic) {
                    text = trimmed.trim();
                }
                else if (!trimmed || / $/.test(trimmed)) {
                    // CommonMark requires space before trailing #s
                    text = trimmed.trim();
                }
            }
            return {
                type: 'heading',
                raw: cap[0],
                depth: cap[1].length,
                text,
                tokens: this.lexer.inline(text)
            };
        }
    }
    hr(src) {
        const cap = this.rules.block.hr.exec(src);
        if (cap) {
            return {
                type: 'hr',
                raw: cap[0]
            };
        }
    }
    blockquote(src) {
        const cap = this.rules.block.blockquote.exec(src);
        if (cap) {
            const text = rtrim(cap[0].replace(/^ *>[ \t]?/gm, ''), '\n');
            const top = this.lexer.state.top;
            this.lexer.state.top = true;
            const tokens = this.lexer.blockTokens(text);
            this.lexer.state.top = top;
            return {
                type: 'blockquote',
                raw: cap[0],
                tokens,
                text
            };
        }
    }
    list(src) {
        let cap = this.rules.block.list.exec(src);
        if (cap) {
            let bull = cap[1].trim();
            const isordered = bull.length > 1;
            const list = {
                type: 'list',
                raw: '',
                ordered: isordered,
                start: isordered ? +bull.slice(0, -1) : '',
                loose: false,
                items: []
            };
            bull = isordered ? `\\d{1,9}\\${bull.slice(-1)}` : `\\${bull}`;
            if (this.options.pedantic) {
                bull = isordered ? bull : '[*+-]';
            }
            // Get next list item
            const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\t ][^\\n]*)?(?:\\n|$))`);
            let raw = '';
            let itemContents = '';
            let endsWithBlankLine = false;
            // Check if current bullet point can start a new List Item
            while (src) {
                let endEarly = false;
                if (!(cap = itemRegex.exec(src))) {
                    break;
                }
                if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)
                    break;
                }
                raw = cap[0];
                src = src.substring(raw.length);
                let line = cap[2].split('\n', 1)[0].replace(/^\t+/, (t) => ' '.repeat(3 * t.length));
                let nextLine = src.split('\n', 1)[0];
                let indent = 0;
                if (this.options.pedantic) {
                    indent = 2;
                    itemContents = line.trimStart();
                }
                else {
                    indent = cap[2].search(/[^ ]/); // Find first non-space char
                    indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent
                    itemContents = line.slice(indent);
                    indent += cap[1].length;
                }
                let blankLine = false;
                if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line
                    raw += nextLine + '\n';
                    src = src.substring(nextLine.length + 1);
                    endEarly = true;
                }
                if (!endEarly) {
                    const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\d{1,9}[.)])((?:[ \t][^\\n]*)?(?:\\n|$))`);
                    const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)`);
                    const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\`\`\`|~~~)`);
                    const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);
                    // Check if following lines should be included in List Item
                    while (src) {
                        const rawLine = src.split('\n', 1)[0];
                        nextLine = rawLine;
                        // Re-align to follow commonmark nesting rules
                        if (this.options.pedantic) {
                            nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');
                        }
                        // End list item if found code fences
                        if (fencesBeginRegex.test(nextLine)) {
                            break;
                        }
                        // End list item if found start of new heading
                        if (headingBeginRegex.test(nextLine)) {
                            break;
                        }
                        // End list item if found start of new bullet
                        if (nextBulletRegex.test(nextLine)) {
                            break;
                        }
                        // Horizontal rule found
                        if (hrRegex.test(src)) {
                            break;
                        }
                        if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible
                            itemContents += '\n' + nextLine.slice(indent);
                        }
                        else {
                            // not enough indentation
                            if (blankLine) {
                                break;
                            }
                            // paragraph continuation unless last line was a different block level element
                            if (line.search(/[^ ]/) >= 4) { // indented code block
                                break;
                            }
                            if (fencesBeginRegex.test(line)) {
                                break;
                            }
                            if (headingBeginRegex.test(line)) {
                                break;
                            }
                            if (hrRegex.test(line)) {
                                break;
                            }
                            itemContents += '\n' + nextLine;
                        }
                        if (!blankLine && !nextLine.trim()) { // Check if current line is blank
                            blankLine = true;
                        }
                        raw += rawLine + '\n';
                        src = src.substring(rawLine.length + 1);
                        line = nextLine.slice(indent);
                    }
                }
                if (!list.loose) {
                    // If the previous item ended with a blank line, the list is loose
                    if (endsWithBlankLine) {
                        list.loose = true;
                    }
                    else if (/\n *\n *$/.test(raw)) {
                        endsWithBlankLine = true;
                    }
                }
                let istask = null;
                let ischecked;
                // Check for task list items
                if (this.options.gfm) {
                    istask = /^\[[ xX]\] /.exec(itemContents);
                    if (istask) {
                        ischecked = istask[0] !== '[ ] ';
                        itemContents = itemContents.replace(/^\[[ xX]\] +/, '');
                    }
                }
                list.items.push({
                    type: 'list_item',
                    raw,
                    task: !!istask,
                    checked: ischecked,
                    loose: false,
                    text: itemContents,
                    tokens: []
                });
                list.raw += raw;
            }
            // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic
            list.items[list.items.length - 1].raw = raw.trimEnd();
            (list.items[list.items.length - 1]).text = itemContents.trimEnd();
            list.raw = list.raw.trimEnd();
            // Item child tokens handled here at end because we needed to have the final item to trim it first
            for (let i = 0; i < list.items.length; i++) {
                this.lexer.state.top = false;
                list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);
                if (!list.loose) {
                    // Check if list should be loose
                    const spacers = list.items[i].tokens.filter(t => t.type === 'space');
                    const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\n.*\n/.test(t.raw));
                    list.loose = hasMultipleLineBreaks;
                }
            }
            // Set all items to loose if list is loose
            if (list.loose) {
                for (let i = 0; i < list.items.length; i++) {
                    list.items[i].loose = true;
                }
            }
            return list;
        }
    }
    html(src) {
        const cap = this.rules.block.html.exec(src);
        if (cap) {
            const token = {
                type: 'html',
                block: true,
                raw: cap[0],
                pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',
                text: cap[0]
            };
            return token;
        }
    }
    def(src) {
        const cap = this.rules.block.def.exec(src);
        if (cap) {
            const tag = cap[1].toLowerCase().replace(/\s+/g, ' ');
            const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline.anyPunctuation, '$1') : '';
            const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline.anyPunctuation, '$1') : cap[3];
            return {
                type: 'def',
                tag,
                raw: cap[0],
                href,
                title
            };
        }
    }
    table(src) {
        const cap = this.rules.block.table.exec(src);
        if (!cap) {
            return;
        }
        if (!/[:|]/.test(cap[2])) {
            // delimiter row must have a pipe (|) or colon (:) otherwise it is a setext heading
            return;
        }
        const headers = splitCells(cap[1]);
        const aligns = cap[2].replace(/^\||\| *$/g, '').split('|');
        const rows = cap[3] && cap[3].trim() ? cap[3].replace(/\n[ \t]*$/, '').split('\n') : [];
        const item = {
            type: 'table',
            raw: cap[0],
            header: [],
            align: [],
            rows: []
        };
        if (headers.length !== aligns.length) {
            // header and align columns must be equal, rows can be different.
            return;
        }
        for (const align of aligns) {
            if (/^ *-+: *$/.test(align)) {
                item.align.push('right');
            }
            else if (/^ *:-+: *$/.test(align)) {
                item.align.push('center');
            }
            else if (/^ *:-+ *$/.test(align)) {
                item.align.push('left');
            }
            else {
                item.align.push(null);
            }
        }
        for (const header of headers) {
            item.header.push({
                text: header,
                tokens: this.lexer.inline(header)
            });
        }
        for (const row of rows) {
            item.rows.push(splitCells(row, item.header.length).map(cell => {
                return {
                    text: cell,
                    tokens: this.lexer.inline(cell)
                };
            }));
        }
        return item;
    }
    lheading(src) {
        const cap = this.rules.block.lheading.exec(src);
        if (cap) {
            return {
                type: 'heading',
                raw: cap[0],
                depth: cap[2].charAt(0) === '=' ? 1 : 2,
                text: cap[1],
                tokens: this.lexer.inline(cap[1])
            };
        }
    }
    paragraph(src) {
        const cap = this.rules.block.paragraph.exec(src);
        if (cap) {
            const text = cap[1].charAt(cap[1].length - 1) === '\n'
                ? cap[1].slice(0, -1)
                : cap[1];
            return {
                type: 'paragraph',
                raw: cap[0],
                text,
                tokens: this.lexer.inline(text)
            };
        }
    }
    text(src) {
        const cap = this.rules.block.text.exec(src);
        if (cap) {
            return {
                type: 'text',
                raw: cap[0],
                text: cap[0],
                tokens: this.lexer.inline(cap[0])
            };
        }
    }
    escape(src) {
        const cap = this.rules.inline.escape.exec(src);
        if (cap) {
            return {
                type: 'escape',
                raw: cap[0],
                text: escape$1(cap[1])
            };
        }
    }
    tag(src) {
        const cap = this.rules.inline.tag.exec(src);
        if (cap) {
            if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {
                this.lexer.state.inLink = true;
            }
            else if (this.lexer.state.inLink && /^<\/a>/i.test(cap[0])) {
                this.lexer.state.inLink = false;
            }
            if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\s|>)/i.test(cap[0])) {
                this.lexer.state.inRawBlock = true;
            }
            else if (this.lexer.state.inRawBlock && /^<\/(pre|code|kbd|script)(\s|>)/i.test(cap[0])) {
                this.lexer.state.inRawBlock = false;
            }
            return {
                type: 'html',
                raw: cap[0],
                inLink: this.lexer.state.inLink,
                inRawBlock: this.lexer.state.inRawBlock,
                block: false,
                text: cap[0]
            };
        }
    }
    link(src) {
        const cap = this.rules.inline.link.exec(src);
        if (cap) {
            const trimmedUrl = cap[2].trim();
            if (!this.options.pedantic && /^</.test(trimmedUrl)) {
                // commonmark requires matching angle brackets
                if (!(/>$/.test(trimmedUrl))) {
                    return;
                }
                // ending angle bracket cannot be escaped
                const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\');
                if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {
                    return;
                }
            }
            else {
                // find closing parenthesis
                const lastParenIndex = findClosingBracket(cap[2], '()');
                if (lastParenIndex > -1) {
                    const start = cap[0].indexOf('!') === 0 ? 5 : 4;
                    const linkLen = start + cap[1].length + lastParenIndex;
                    cap[2] = cap[2].substring(0, lastParenIndex);
                    cap[0] = cap[0].substring(0, linkLen).trim();
                    cap[3] = '';
                }
            }
            let href = cap[2];
            let title = '';
            if (this.options.pedantic) {
                // split pedantic href and title
                const link = /^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(href);
                if (link) {
                    href = link[1];
                    title = link[3];
                }
            }
            else {
                title = cap[3] ? cap[3].slice(1, -1) : '';
            }
            href = href.trim();
            if (/^</.test(href)) {
                if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {
                    // pedantic allows starting angle bracket without ending angle bracket
                    href = href.slice(1);
                }
                else {
                    href = href.slice(1, -1);
                }
            }
            return outputLink(cap, {
                href: href ? href.replace(this.rules.inline.anyPunctuation, '$1') : href,
                title: title ? title.replace(this.rules.inline.anyPunctuation, '$1') : title
            }, cap[0], this.lexer);
        }
    }
    reflink(src, links) {
        let cap;
        if ((cap = this.rules.inline.reflink.exec(src))
            || (cap = this.rules.inline.nolink.exec(src))) {
            const linkString = (cap[2] || cap[1]).replace(/\s+/g, ' ');
            const link = links[linkString.toLowerCase()];
            if (!link) {
                const text = cap[0].charAt(0);
                return {
                    type: 'text',
                    raw: text,
                    text
                };
            }
            return outputLink(cap, link, cap[0], this.lexer);
        }
    }
    emStrong(src, maskedSrc, prevChar = '') {
        let match = this.rules.inline.emStrongLDelim.exec(src);
        if (!match)
            return;
        // _ can't be between two alphanumerics. \p{L}\p{N} includes non-english alphabet/numbers as well
        if (match[3] && prevChar.match(/[\p{L}\p{N}]/u))
            return;
        const nextChar = match[1] || match[2] || '';
        if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {
            // unicode Regex counts emoji as 1 char; spread into array for proper count (used multiple times below)
            const lLength = [...match[0]].length - 1;
            let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;
            const endReg = match[0][0] === '*' ? this.rules.inline.emStrongRDelimAst : this.rules.inline.emStrongRDelimUnd;
            endReg.lastIndex = 0;
            // Clip maskedSrc to same section of string as src (move to lexer?)
            maskedSrc = maskedSrc.slice(-1 * src.length + lLength);
            while ((match = endReg.exec(maskedSrc)) != null) {
                rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];
                if (!rDelim)
                    continue; // skip single * in __abc*abc__
                rLength = [...rDelim].length;
                if (match[3] || match[4]) { // found another Left Delim
                    delimTotal += rLength;
                    continue;
                }
                else if (match[5] || match[6]) { // either Left or Right Delim
                    if (lLength % 3 && !((lLength + rLength) % 3)) {
                        midDelimTotal += rLength;
                        continue; // CommonMark Emphasis Rules 9-10
                    }
                }
                delimTotal -= rLength;
                if (delimTotal > 0)
                    continue; // Haven't found enough closing delimiters
                // Remove extra characters. *a*** -> *a*
                rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);
                // char length can be >1 for unicode characters;
                const lastCharLength = [...match[0]][0].length;
                const raw = src.slice(0, lLength + match.index + lastCharLength + rLength);
                // Create `em` if smallest delimiter has odd char count. *a***
                if (Math.min(lLength, rLength) % 2) {
                    const text = raw.slice(1, -1);
                    return {
                        type: 'em',
                        raw,
                        text,
                        tokens: this.lexer.inlineTokens(text)
                    };
                }
                // Create 'strong' if smallest delimiter has even char count. **a***
                const text = raw.slice(2, -2);
                return {
                    type: 'strong',
                    raw,
                    text,
                    tokens: this.lexer.inlineTokens(text)
                };
            }
        }
    }
    codespan(src) {
        const cap = this.rules.inline.code.exec(src);
        if (cap) {
            let text = cap[2].replace(/\n/g, ' ');
            const hasNonSpaceChars = /[^ ]/.test(text);
            const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);
            if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {
                text = text.substring(1, text.length - 1);
            }
            text = escape$1(text, true);
            return {
                type: 'codespan',
                raw: cap[0],
                text
            };
        }
    }
    br(src) {
        const cap = this.rules.inline.br.exec(src);
        if (cap) {
            return {
                type: 'br',
                raw: cap[0]
            };
        }
    }
    del(src) {
        const cap = this.rules.inline.del.exec(src);
        if (cap) {
            return {
                type: 'del',
                raw: cap[0],
                text: cap[2],
                tokens: this.lexer.inlineTokens(cap[2])
            };
        }
    }
    autolink(src) {
        const cap = this.rules.inline.autolink.exec(src);
        if (cap) {
            let text, href;
            if (cap[2] === '@') {
                text = escape$1(cap[1]);
                href = 'mailto:' + text;
            }
            else {
                text = escape$1(cap[1]);
                href = text;
            }
            return {
                type: 'link',
                raw: cap[0],
                text,
                href,
                tokens: [
                    {
                        type: 'text',
                        raw: text,
                        text
                    }
                ]
            };
        }
    }
    url(src) {
        let cap;
        if (cap = this.rules.inline.url.exec(src)) {
            let text, href;
            if (cap[2] === '@') {
                text = escape$1(cap[0]);
                href = 'mailto:' + text;
            }
            else {
                // do extended autolink path validation
                let prevCapZero;
                do {
                    prevCapZero = cap[0];
                    cap[0] = this.rules.inline._backpedal.exec(cap[0])?.[0] ?? '';
                } while (prevCapZero !== cap[0]);
                text = escape$1(cap[0]);
                if (cap[1] === 'www.') {
                    href = 'http://' + cap[0];
                }
                else {
                    href = cap[0];
                }
            }
            return {
                type: 'link',
                raw: cap[0],
                text,
                href,
                tokens: [
                    {
                        type: 'text',
                        raw: text,
                        text
                    }
                ]
            };
        }
    }
    inlineText(src) {
        const cap = this.rules.inline.text.exec(src);
        if (cap) {
            let text;
            if (this.lexer.state.inRawBlock) {
                text = cap[0];
            }
            else {
                text = escape$1(cap[0]);
            }
            return {
                type: 'text',
                raw: cap[0],
                text
            };
        }
    }
}

/**
 * Block-Level Grammar
 */
const newline = /^(?: *(?:\n|$))+/;
const blockCode = /^( {4}[^\n]+(?:\n(?: *(?:\n|$))*)?)+/;
const fences = /^ {0,3}(`{3,}(?=[^`\n]*(?:\n|$))|~{3,})([^\n]*)(?:\n|$)(?:|([\s\S]*?)(?:\n|$))(?: {0,3}\1[~`]* *(?=\n|$)|$)/;
const hr = /^ {0,3}((?:-[\t ]*){3,}|(?:_[ \t]*){3,}|(?:\*[ \t]*){3,})(?:\n+|$)/;
const heading = /^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/;
const bullet = /(?:[*+-]|\d{1,9}[.)])/;
const lheading = edit(/^(?!bull )((?:.|\n(?!\s*?\n|bull ))+?)\n {0,3}(=+|-+) *(?:\n+|$)/)
    .replace(/bull/g, bullet) // lists can interrupt
    .getRegex();
const _paragraph = /^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\n)[^\n]+)*)/;
const blockText = /^[^\n]+/;
const _blockLabel = /(?!\s*\])(?:\\.|[^\[\]\\])+/;
const def = edit(/^ {0,3}\[(label)\]: *(?:\n *)?([^<\s][^\s]*|<.*?>)(?:(?: +(?:\n *)?| *\n *)(title))? *(?:\n+|$)/)
    .replace('label', _blockLabel)
    .replace('title', /(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/)
    .getRegex();
const list = edit(/^( {0,3}bull)([ \t][^\n]+?)?(?:\n|$)/)
    .replace(/bull/g, bullet)
    .getRegex();
const _tag = 'address|article|aside|base|basefont|blockquote|body|caption'
    + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'
    + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'
    + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'
    + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'
    + '|track|ul';
const _comment = /<!--(?!-?>)[\s\S]*?(?:-->|$)/;
const html = edit('^ {0,3}(?:' // optional indentation
    + '<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)' // (1)
    + '|comment[^\\n]*(\\n+|$)' // (2)
    + '|<\\?[\\s\\S]*?(?:\\?>\\n*|$)' // (3)
    + '|<![A-Z][\\s\\S]*?(?:>\\n*|$)' // (4)
    + '|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)' // (5)
    + '|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n *)+\\n|$)' // (6)
    + '|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$)' // (7) open tag
    + '|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$)' // (7) closing tag
    + ')', 'i')
    .replace('comment', _comment)
    .replace('tag', _tag)
    .replace('attribute', / +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/)
    .getRegex();
const paragraph = edit(_paragraph)
    .replace('hr', hr)
    .replace('heading', ' {0,3}#{1,6}(?:\\s|$)')
    .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs
    .replace('|table', '')
    .replace('blockquote', ' {0,3}>')
    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n')
    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt
    .replace('html', '</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)')
    .replace('tag', _tag) // pars can be interrupted by type (6) html blocks
    .getRegex();
const blockquote = edit(/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/)
    .replace('paragraph', paragraph)
    .getRegex();
/**
 * Normal Block Grammar
 */
const blockNormal = {
    blockquote,
    code: blockCode,
    def,
    fences,
    heading,
    hr,
    html,
    lheading,
    list,
    newline,
    paragraph,
    table: noopTest,
    text: blockText
};
/**
 * GFM Block Grammar
 */
const gfmTable = edit('^ *([^\\n ].*)\\n' // Header
    + ' {0,3}((?:\\| *)?:?-+:? *(?:\\| *:?-+:? *)*(?:\\| *)?)' // Align
    + '(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)') // Cells
    .replace('hr', hr)
    .replace('heading', ' {0,3}#{1,6}(?:\\s|$)')
    .replace('blockquote', ' {0,3}>')
    .replace('code', ' {4}[^\\n]')
    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n')
    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt
    .replace('html', '</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)')
    .replace('tag', _tag) // tables can be interrupted by type (6) html blocks
    .getRegex();
const blockGfm = {
    ...blockNormal,
    table: gfmTable,
    paragraph: edit(_paragraph)
        .replace('hr', hr)
        .replace('heading', ' {0,3}#{1,6}(?:\\s|$)')
        .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs
        .replace('table', gfmTable) // interrupt paragraphs with table
        .replace('blockquote', ' {0,3}>')
        .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n')
        .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt
        .replace('html', '</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)')
        .replace('tag', _tag) // pars can be interrupted by type (6) html blocks
        .getRegex()
};
/**
 * Pedantic grammar (original John Gruber's loose markdown specification)
 */
const blockPedantic = {
    ...blockNormal,
    html: edit('^ *(?:comment *(?:\\n|\\s*$)'
        + '|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)' // closed tag
        + '|<tag(?:"[^"]*"|\'[^\']*\'|\\s[^\'"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))')
        .replace('comment', _comment)
        .replace(/tag/g, '(?!(?:'
        + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'
        + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'
        + '\\b)\\w+(?!:|[^\\w\\s@]*@)\\b')
        .getRegex(),
    def: /^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,
    heading: /^(#{1,6})(.*)(?:\n+|$)/,
    fences: noopTest, // fences not supported
    lheading: /^(.+?)\n {0,3}(=+|-+) *(?:\n+|$)/,
    paragraph: edit(_paragraph)
        .replace('hr', hr)
        .replace('heading', ' *#{1,6} *[^\n]')
        .replace('lheading', lheading)
        .replace('|table', '')
        .replace('blockquote', ' {0,3}>')
        .replace('|fences', '')
        .replace('|list', '')
        .replace('|html', '')
        .replace('|tag', '')
        .getRegex()
};
/**
 * Inline-Level Grammar
 */
const marked_esm_escape = /^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/;
const inlineCode = /^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/;
const br = /^( {2,}|\\)\n(?!\s*$)/;
const inlineText = /^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/;
// list of unicode punctuation marks, plus any missing characters from CommonMark spec
const _punctuation = '\\p{P}$+<=>`^|~';
const punctuation = edit(/^((?![*_])[\spunctuation])/, 'u')
    .replace(/punctuation/g, _punctuation).getRegex();
// sequences em should skip over [title](link), `code`, <html>
const blockSkip = /\[[^[\]]*?\]\([^\(\)]*?\)|`[^`]*?`|<[^<>]*?>/g;
const emStrongLDelim = edit(/^(?:\*+(?:((?!\*)[punct])|[^\s*]))|^_+(?:((?!_)[punct])|([^\s_]))/, 'u')
    .replace(/punct/g, _punctuation)
    .getRegex();
const emStrongRDelimAst = edit('^[^_*]*?__[^_*]*?\\*[^_*]*?(?=__)' // Skip orphan inside strong
    + '|[^*]+(?=[^*])' // Consume to delim
    + '|(?!\\*)[punct](\\*+)(?=[\\s]|$)' // (1) #*** can only be a Right Delimiter
    + '|[^punct\\s](\\*+)(?!\\*)(?=[punct\\s]|$)' // (2) a***#, a*** can only be a Right Delimiter
    + '|(?!\\*)[punct\\s](\\*+)(?=[^punct\\s])' // (3) #***a, ***a can only be Left Delimiter
    + '|[\\s](\\*+)(?!\\*)(?=[punct])' // (4) ***# can only be Left Delimiter
    + '|(?!\\*)[punct](\\*+)(?!\\*)(?=[punct])' // (5) #***# can be either Left or Right Delimiter
    + '|[^punct\\s](\\*+)(?=[^punct\\s])', 'gu') // (6) a***a can be either Left or Right Delimiter
    .replace(/punct/g, _punctuation)
    .getRegex();
// (6) Not allowed for _
const emStrongRDelimUnd = edit('^[^_*]*?\\*\\*[^_*]*?_[^_*]*?(?=\\*\\*)' // Skip orphan inside strong
    + '|[^_]+(?=[^_])' // Consume to delim
    + '|(?!_)[punct](_+)(?=[\\s]|$)' // (1) #___ can only be a Right Delimiter
    + '|[^punct\\s](_+)(?!_)(?=[punct\\s]|$)' // (2) a___#, a___ can only be a Right Delimiter
    + '|(?!_)[punct\\s](_+)(?=[^punct\\s])' // (3) #___a, ___a can only be Left Delimiter
    + '|[\\s](_+)(?!_)(?=[punct])' // (4) ___# can only be Left Delimiter
    + '|(?!_)[punct](_+)(?!_)(?=[punct])', 'gu') // (5) #___# can be either Left or Right Delimiter
    .replace(/punct/g, _punctuation)
    .getRegex();
const anyPunctuation = edit(/\\([punct])/, 'gu')
    .replace(/punct/g, _punctuation)
    .getRegex();
const autolink = edit(/^<(scheme:[^\s\x00-\x1f<>]*|email)>/)
    .replace('scheme', /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/)
    .replace('email', /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/)
    .getRegex();
const _inlineComment = edit(_comment).replace('(?:-->|$)', '-->').getRegex();
const tag = edit('^comment'
    + '|^</[a-zA-Z][\\w:-]*\\s*>' // self-closing tag
    + '|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>' // open tag
    + '|^<\\?[\\s\\S]*?\\?>' // processing instruction, e.g. <?php ?>
    + '|^<![a-zA-Z]+\\s[\\s\\S]*?>' // declaration, e.g. <!DOCTYPE html>
    + '|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>') // CDATA section
    .replace('comment', _inlineComment)
    .replace('attribute', /\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/)
    .getRegex();
const _inlineLabel = /(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/;
const marked_esm_link = edit(/^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/)
    .replace('label', _inlineLabel)
    .replace('href', /<(?:\\.|[^\n<>\\])+>|[^\s\x00-\x1f]*/)
    .replace('title', /"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/)
    .getRegex();
const reflink = edit(/^!?\[(label)\]\[(ref)\]/)
    .replace('label', _inlineLabel)
    .replace('ref', _blockLabel)
    .getRegex();
const nolink = edit(/^!?\[(ref)\](?:\[\])?/)
    .replace('ref', _blockLabel)
    .getRegex();
const reflinkSearch = edit('reflink|nolink(?!\\()', 'g')
    .replace('reflink', reflink)
    .replace('nolink', nolink)
    .getRegex();
/**
 * Normal Inline Grammar
 */
const inlineNormal = {
    _backpedal: noopTest, // only used for GFM url
    anyPunctuation,
    autolink,
    blockSkip,
    br,
    code: inlineCode,
    del: noopTest,
    emStrongLDelim,
    emStrongRDelimAst,
    emStrongRDelimUnd,
    escape: marked_esm_escape,
    link: marked_esm_link,
    nolink,
    punctuation,
    reflink,
    reflinkSearch,
    tag,
    text: inlineText,
    url: noopTest
};
/**
 * Pedantic Inline Grammar
 */
const inlinePedantic = {
    ...inlineNormal,
    link: edit(/^!?\[(label)\]\((.*?)\)/)
        .replace('label', _inlineLabel)
        .getRegex(),
    reflink: edit(/^!?\[(label)\]\s*\[([^\]]*)\]/)
        .replace('label', _inlineLabel)
        .getRegex()
};
/**
 * GFM Inline Grammar
 */
const inlineGfm = {
    ...inlineNormal,
    escape: edit(marked_esm_escape).replace('])', '~|])').getRegex(),
    url: edit(/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/, 'i')
        .replace('email', /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/)
        .getRegex(),
    _backpedal: /(?:[^?!.,:;*_'"~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'"~)]+(?!$))+/,
    del: /^(~~?)(?=[^\s~])([\s\S]*?[^\s~])\1(?=[^~]|$)/,
    text: /^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/
};
/**
 * GFM + Line Breaks Inline Grammar
 */
const inlineBreaks = {
    ...inlineGfm,
    br: edit(br).replace('{2,}', '*').getRegex(),
    text: edit(inlineGfm.text)
        .replace('\\b_', '\\b_| {2,}\\n')
        .replace(/\{2,\}/g, '*')
        .getRegex()
};
/**
 * exports
 */
const block = {
    normal: blockNormal,
    gfm: blockGfm,
    pedantic: blockPedantic
};
const inline = {
    normal: inlineNormal,
    gfm: inlineGfm,
    breaks: inlineBreaks,
    pedantic: inlinePedantic
};

/**
 * Block Lexer
 */
class _Lexer {
    tokens;
    options;
    state;
    tokenizer;
    inlineQueue;
    constructor(options) {
        // TokenList cannot be created in one go
        this.tokens = [];
        this.tokens.links = Object.create(null);
        this.options = options || _defaults;
        this.options.tokenizer = this.options.tokenizer || new _Tokenizer();
        this.tokenizer = this.options.tokenizer;
        this.tokenizer.options = this.options;
        this.tokenizer.lexer = this;
        this.inlineQueue = [];
        this.state = {
            inLink: false,
            inRawBlock: false,
            top: true
        };
        const rules = {
            block: block.normal,
            inline: inline.normal
        };
        if (this.options.pedantic) {
            rules.block = block.pedantic;
            rules.inline = inline.pedantic;
        }
        else if (this.options.gfm) {
            rules.block = block.gfm;
            if (this.options.breaks) {
                rules.inline = inline.breaks;
            }
            else {
                rules.inline = inline.gfm;
            }
        }
        this.tokenizer.rules = rules;
    }
    /**
     * Expose Rules
     */
    static get rules() {
        return {
            block,
            inline
        };
    }
    /**
     * Static Lex Method
     */
    static lex(src, options) {
        const lexer = new _Lexer(options);
        return lexer.lex(src);
    }
    /**
     * Static Lex Inline Method
     */
    static lexInline(src, options) {
        const lexer = new _Lexer(options);
        return lexer.inlineTokens(src);
    }
    /**
     * Preprocessing
     */
    lex(src) {
        src = src
            .replace(/\r\n|\r/g, '\n');
        this.blockTokens(src, this.tokens);
        for (let i = 0; i < this.inlineQueue.length; i++) {
            const next = this.inlineQueue[i];
            this.inlineTokens(next.src, next.tokens);
        }
        this.inlineQueue = [];
        return this.tokens;
    }
    blockTokens(src, tokens = []) {
        if (this.options.pedantic) {
            src = src.replace(/\t/g, '    ').replace(/^ +$/gm, '');
        }
        else {
            src = src.replace(/^( *)(\t+)/gm, (_, leading, tabs) => {
                return leading + '    '.repeat(tabs.length);
            });
        }
        let token;
        let lastToken;
        let cutSrc;
        let lastParagraphClipped;
        while (src) {
            if (this.options.extensions
                && this.options.extensions.block
                && this.options.extensions.block.some((extTokenizer) => {
                    if (token = extTokenizer.call({ lexer: this }, src, tokens)) {
                        src = src.substring(token.raw.length);
                        tokens.push(token);
                        return true;
                    }
                    return false;
                })) {
                continue;
            }
            // newline
            if (token = this.tokenizer.space(src)) {
                src = src.substring(token.raw.length);
                if (token.raw.length === 1 && tokens.length > 0) {
                    // if there's a single \n as a spacer, it's terminating the last line,
                    // so move it there so that we don't get unnecessary paragraph tags
                    tokens[tokens.length - 1].raw += '\n';
                }
                else {
                    tokens.push(token);
                }
                continue;
            }
            // code
            if (token = this.tokenizer.code(src)) {
                src = src.substring(token.raw.length);
                lastToken = tokens[tokens.length - 1];
                // An indented code block cannot interrupt a paragraph.
                if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {
                    lastToken.raw += '\n' + token.raw;
                    lastToken.text += '\n' + token.text;
                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;
                }
                else {
                    tokens.push(token);
                }
                continue;
            }
            // fences
            if (token = this.tokenizer.fences(src)) {
                src = src.substring(token.raw.length);
                tokens.push(token);
                continue;
            }
            // heading
            if (token = this.tokenizer.heading(src)) {
                src = src.substring(token.raw.length);
                tokens.push(token);
                continue;
            }
            // hr
            if (token = this.tokenizer.hr(src)) {
                src = src.substring(token.raw.length);
                tokens.push(token);
                continue;
            }
            // blockquote
            if (token = this.tokenizer.blockquote(src)) {
                src = src.substring(token.raw.length);
                tokens.push(token);
                continue;
            }
            // list
            if (token = this.tokenizer.list(src)) {
                src = src.substring(token.raw.length);
                tokens.push(token);
                continue;
            }
            // html
            if (token = this.tokenizer.html(src)) {
                src = src.substring(token.raw.length);
                tokens.push(token);
                continue;
            }
            // def
            if (token = this.tokenizer.def(src)) {
                src = src.substring(token.raw.length);
                lastToken = tokens[tokens.length - 1];
                if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {
                    lastToken.raw += '\n' + token.raw;
                    lastToken.text += '\n' + token.raw;
                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;
                }
                else if (!this.tokens.links[token.tag]) {
                    this.tokens.links[token.tag] = {
                        href: token.href,
                        title: token.title
                    };
                }
                continue;
            }
            // table (gfm)
            if (token = this.tokenizer.table(src)) {
                src = src.substring(token.raw.length);
                tokens.push(token);
                continue;
            }
            // lheading
            if (token = this.tokenizer.lheading(src)) {
                src = src.substring(token.raw.length);
                tokens.push(token);
                continue;
            }
            // top-level paragraph
            // prevent paragraph consuming extensions by clipping 'src' to extension start
            cutSrc = src;
            if (this.options.extensions && this.options.extensions.startBlock) {
                let startIndex = Infinity;
                const tempSrc = src.slice(1);
                let tempStart;
                this.options.extensions.startBlock.forEach((getStartIndex) => {
                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);
                    if (typeof tempStart === 'number' && tempStart >= 0) {
                        startIndex = Math.min(startIndex, tempStart);
                    }
                });
                if (startIndex < Infinity && startIndex >= 0) {
                    cutSrc = src.substring(0, startIndex + 1);
                }
            }
            if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {
                lastToken = tokens[tokens.length - 1];
                if (lastParagraphClipped && lastToken.type === 'paragraph') {
                    lastToken.raw += '\n' + token.raw;
                    lastToken.text += '\n' + token.text;
                    this.inlineQueue.pop();
                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;
                }
                else {
                    tokens.push(token);
                }
                lastParagraphClipped = (cutSrc.length !== src.length);
                src = src.substring(token.raw.length);
                continue;
            }
            // text
            if (token = this.tokenizer.text(src)) {
                src = src.substring(token.raw.length);
                lastToken = tokens[tokens.length - 1];
                if (lastToken && lastToken.type === 'text') {
                    lastToken.raw += '\n' + token.raw;
                    lastToken.text += '\n' + token.text;
                    this.inlineQueue.pop();
                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;
                }
                else {
                    tokens.push(token);
                }
                continue;
            }
            if (src) {
                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);
                if (this.options.silent) {
                    console.error(errMsg);
                    break;
                }
                else {
                    throw new Error(errMsg);
                }
            }
        }
        this.state.top = true;
        return tokens;
    }
    inline(src, tokens = []) {
        this.inlineQueue.push({ src, tokens });
        return tokens;
    }
    /**
     * Lexing/Compiling
     */
    inlineTokens(src, tokens = []) {
        let token, lastToken, cutSrc;
        // String with links masked to avoid interference with em and strong
        let maskedSrc = src;
        let match;
        let keepPrevChar, prevChar;
        // Mask out reflinks
        if (this.tokens.links) {
            const links = Object.keys(this.tokens.links);
            if (links.length > 0) {
                while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {
                    if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {
                        maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);
                    }
                }
            }
        }
        // Mask out other blocks
        while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {
            maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);
        }
        // Mask out escaped characters
        while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {
            maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);
        }
        while (src) {
            if (!keepPrevChar) {
                prevChar = '';
            }
            keepPrevChar = false;
            // extensions
            if (this.options.extensions
                && this.options.extensions.inline
                && this.options.extensions.inline.some((extTokenizer) => {
                    if (token = extTokenizer.call({ lexer: this }, src, tokens)) {
                        src = src.substring(token.raw.length);
                        tokens.push(token);
                        return true;
                    }
                    return false;
                })) {
                continue;
            }
            // escape
            if (token = this.tokenizer.escape(src)) {
                src = src.substring(token.raw.length);
                tokens.push(token);
                continue;
            }
            // tag
            if (token = this.tokenizer.tag(src)) {
                src = src.substring(token.raw.length);
                lastToken = tokens[tokens.length - 1];
                if (lastToken && token.type === 'text' && lastToken.type === 'text') {
                    lastToken.raw += token.raw;
                    lastToken.text += token.text;
                }
                else {
                    tokens.push(token);
                }
                continue;
            }
            // link
            if (token = this.tokenizer.link(src)) {
                src = src.substring(token.raw.length);
                tokens.push(token);
                continue;
            }
            // reflink, nolink
            if (token = this.tokenizer.reflink(src, this.tokens.links)) {
                src = src.substring(token.raw.length);
                lastToken = tokens[tokens.length - 1];
                if (lastToken && token.type === 'text' && lastToken.type === 'text') {
                    lastToken.raw += token.raw;
                    lastToken.text += token.text;
                }
                else {
                    tokens.push(token);
                }
                continue;
            }
            // em & strong
            if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {
                src = src.substring(token.raw.length);
                tokens.push(token);
                continue;
            }
            // code
            if (token = this.tokenizer.codespan(src)) {
                src = src.substring(token.raw.length);
                tokens.push(token);
                continue;
            }
            // br
            if (token = this.tokenizer.br(src)) {
                src = src.substring(token.raw.length);
                tokens.push(token);
                continue;
            }
            // del (gfm)
            if (token = this.tokenizer.del(src)) {
                src = src.substring(token.raw.length);
                tokens.push(token);
                continue;
            }
            // autolink
            if (token = this.tokenizer.autolink(src)) {
                src = src.substring(token.raw.length);
                tokens.push(token);
                continue;
            }
            // url (gfm)
            if (!this.state.inLink && (token = this.tokenizer.url(src))) {
                src = src.substring(token.raw.length);
                tokens.push(token);
                continue;
            }
            // text
            // prevent inlineText consuming extensions by clipping 'src' to extension start
            cutSrc = src;
            if (this.options.extensions && this.options.extensions.startInline) {
                let startIndex = Infinity;
                const tempSrc = src.slice(1);
                let tempStart;
                this.options.extensions.startInline.forEach((getStartIndex) => {
                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);
                    if (typeof tempStart === 'number' && tempStart >= 0) {
                        startIndex = Math.min(startIndex, tempStart);
                    }
                });
                if (startIndex < Infinity && startIndex >= 0) {
                    cutSrc = src.substring(0, startIndex + 1);
                }
            }
            if (token = this.tokenizer.inlineText(cutSrc)) {
                src = src.substring(token.raw.length);
                if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started
                    prevChar = token.raw.slice(-1);
                }
                keepPrevChar = true;
                lastToken = tokens[tokens.length - 1];
                if (lastToken && lastToken.type === 'text') {
                    lastToken.raw += token.raw;
                    lastToken.text += token.text;
                }
                else {
                    tokens.push(token);
                }
                continue;
            }
            if (src) {
                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);
                if (this.options.silent) {
                    console.error(errMsg);
                    break;
                }
                else {
                    throw new Error(errMsg);
                }
            }
        }
        return tokens;
    }
}

/**
 * Renderer
 */
class _Renderer {
    options;
    constructor(options) {
        this.options = options || _defaults;
    }
    code(code, infostring, escaped) {
        const lang = (infostring || '').match(/^\S*/)?.[0];
        code = code.replace(/\n$/, '') + '\n';
        if (!lang) {
            return '<pre><code>'
                + (escaped ? code : escape$1(code, true))
                + '</code></pre>\n';
        }
        return '<pre><code class="language-'
            + escape$1(lang)
            + '">'
            + (escaped ? code : escape$1(code, true))
            + '</code></pre>\n';
    }
    blockquote(quote) {
        return `<blockquote>\n${quote}</blockquote>\n`;
    }
    html(html, block) {
        return html;
    }
    heading(text, level, raw) {
        // ignore IDs
        return `<h${level}>${text}</h${level}>\n`;
    }
    hr() {
        return '<hr>\n';
    }
    list(body, ordered, start) {
        const type = ordered ? 'ol' : 'ul';
        const startatt = (ordered && start !== 1) ? (' start="' + start + '"') : '';
        return '<' + type + startatt + '>\n' + body + '</' + type + '>\n';
    }
    listitem(text, task, checked) {
        return `<li>${text}</li>\n`;
    }
    checkbox(checked) {
        return '<input '
            + (checked ? 'checked="" ' : '')
            + 'disabled="" type="checkbox">';
    }
    paragraph(text) {
        return `<p>${text}</p>\n`;
    }
    table(header, body) {
        if (body)
            body = `<tbody>${body}</tbody>`;
        return '<table>\n'
            + '<thead>\n'
            + header
            + '</thead>\n'
            + body
            + '</table>\n';
    }
    tablerow(content) {
        return `<tr>\n${content}</tr>\n`;
    }
    tablecell(content, flags) {
        const type = flags.header ? 'th' : 'td';
        const tag = flags.align
            ? `<${type} align="${flags.align}">`
            : `<${type}>`;
        return tag + content + `</${type}>\n`;
    }
    /**
     * span level renderer
     */
    strong(text) {
        return `<strong>${text}</strong>`;
    }
    em(text) {
        return `<em>${text}</em>`;
    }
    codespan(text) {
        return `<code>${text}</code>`;
    }
    br() {
        return '<br>';
    }
    del(text) {
        return `<del>${text}</del>`;
    }
    link(href, title, text) {
        const cleanHref = cleanUrl(href);
        if (cleanHref === null) {
            return text;
        }
        href = cleanHref;
        let out = '<a href="' + href + '"';
        if (title) {
            out += ' title="' + title + '"';
        }
        out += '>' + text + '</a>';
        return out;
    }
    image(href, title, text) {
        const cleanHref = cleanUrl(href);
        if (cleanHref === null) {
            return text;
        }
        href = cleanHref;
        let out = `<img src="${href}" alt="${text}"`;
        if (title) {
            out += ` title="${title}"`;
        }
        out += '>';
        return out;
    }
    text(text) {
        return text;
    }
}

/**
 * TextRenderer
 * returns only the textual part of the token
 */
class _TextRenderer {
    // no need for block level renderers
    strong(text) {
        return text;
    }
    em(text) {
        return text;
    }
    codespan(text) {
        return text;
    }
    del(text) {
        return text;
    }
    html(text) {
        return text;
    }
    text(text) {
        return text;
    }
    link(href, title, text) {
        return '' + text;
    }
    image(href, title, text) {
        return '' + text;
    }
    br() {
        return '';
    }
}

/**
 * Parsing & Compiling
 */
class _Parser {
    options;
    renderer;
    textRenderer;
    constructor(options) {
        this.options = options || _defaults;
        this.options.renderer = this.options.renderer || new _Renderer();
        this.renderer = this.options.renderer;
        this.renderer.options = this.options;
        this.textRenderer = new _TextRenderer();
    }
    /**
     * Static Parse Method
     */
    static parse(tokens, options) {
        const parser = new _Parser(options);
        return parser.parse(tokens);
    }
    /**
     * Static Parse Inline Method
     */
    static parseInline(tokens, options) {
        const parser = new _Parser(options);
        return parser.parseInline(tokens);
    }
    /**
     * Parse Loop
     */
    parse(tokens, top = true) {
        let out = '';
        for (let i = 0; i < tokens.length; i++) {
            const token = tokens[i];
            // Run any renderer extensions
            if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {
                const genericToken = token;
                const ret = this.options.extensions.renderers[genericToken.type].call({ parser: this }, genericToken);
                if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(genericToken.type)) {
                    out += ret || '';
                    continue;
                }
            }
            switch (token.type) {
                case 'space': {
                    continue;
                }
                case 'hr': {
                    out += this.renderer.hr();
                    continue;
                }
                case 'heading': {
                    const headingToken = token;
                    out += this.renderer.heading(this.parseInline(headingToken.tokens), headingToken.depth, marked_esm_unescape(this.parseInline(headingToken.tokens, this.textRenderer)));
                    continue;
                }
                case 'code': {
                    const codeToken = token;
                    out += this.renderer.code(codeToken.text, codeToken.lang, !!codeToken.escaped);
                    continue;
                }
                case 'table': {
                    const tableToken = token;
                    let header = '';
                    // header
                    let cell = '';
                    for (let j = 0; j < tableToken.header.length; j++) {
                        cell += this.renderer.tablecell(this.parseInline(tableToken.header[j].tokens), { header: true, align: tableToken.align[j] });
                    }
                    header += this.renderer.tablerow(cell);
                    let body = '';
                    for (let j = 0; j < tableToken.rows.length; j++) {
                        const row = tableToken.rows[j];
                        cell = '';
                        for (let k = 0; k < row.length; k++) {
                            cell += this.renderer.tablecell(this.parseInline(row[k].tokens), { header: false, align: tableToken.align[k] });
                        }
                        body += this.renderer.tablerow(cell);
                    }
                    out += this.renderer.table(header, body);
                    continue;
                }
                case 'blockquote': {
                    const blockquoteToken = token;
                    const body = this.parse(blockquoteToken.tokens);
                    out += this.renderer.blockquote(body);
                    continue;
                }
                case 'list': {
                    const listToken = token;
                    const ordered = listToken.ordered;
                    const start = listToken.start;
                    const loose = listToken.loose;
                    let body = '';
                    for (let j = 0; j < listToken.items.length; j++) {
                        const item = listToken.items[j];
                        const checked = item.checked;
                        const task = item.task;
                        let itemBody = '';
                        if (item.task) {
                            const checkbox = this.renderer.checkbox(!!checked);
                            if (loose) {
                                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {
                                    item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;
                                    if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {
                                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;
                                    }
                                }
                                else {
                                    item.tokens.unshift({
                                        type: 'text',
                                        text: checkbox + ' '
                                    });
                                }
                            }
                            else {
                                itemBody += checkbox + ' ';
                            }
                        }
                        itemBody += this.parse(item.tokens, loose);
                        body += this.renderer.listitem(itemBody, task, !!checked);
                    }
                    out += this.renderer.list(body, ordered, start);
                    continue;
                }
                case 'html': {
                    const htmlToken = token;
                    out += this.renderer.html(htmlToken.text, htmlToken.block);
                    continue;
                }
                case 'paragraph': {
                    const paragraphToken = token;
                    out += this.renderer.paragraph(this.parseInline(paragraphToken.tokens));
                    continue;
                }
                case 'text': {
                    let textToken = token;
                    let body = textToken.tokens ? this.parseInline(textToken.tokens) : textToken.text;
                    while (i + 1 < tokens.length && tokens[i + 1].type === 'text') {
                        textToken = tokens[++i];
                        body += '\n' + (textToken.tokens ? this.parseInline(textToken.tokens) : textToken.text);
                    }
                    out += top ? this.renderer.paragraph(body) : body;
                    continue;
                }
                default: {
                    const errMsg = 'Token with "' + token.type + '" type was not found.';
                    if (this.options.silent) {
                        console.error(errMsg);
                        return '';
                    }
                    else {
                        throw new Error(errMsg);
                    }
                }
            }
        }
        return out;
    }
    /**
     * Parse Inline Tokens
     */
    parseInline(tokens, renderer) {
        renderer = renderer || this.renderer;
        let out = '';
        for (let i = 0; i < tokens.length; i++) {
            const token = tokens[i];
            // Run any renderer extensions
            if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {
                const ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);
                if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {
                    out += ret || '';
                    continue;
                }
            }
            switch (token.type) {
                case 'escape': {
                    const escapeToken = token;
                    out += renderer.text(escapeToken.text);
                    break;
                }
                case 'html': {
                    const tagToken = token;
                    out += renderer.html(tagToken.text);
                    break;
                }
                case 'link': {
                    const linkToken = token;
                    out += renderer.link(linkToken.href, linkToken.title, this.parseInline(linkToken.tokens, renderer));
                    break;
                }
                case 'image': {
                    const imageToken = token;
                    out += renderer.image(imageToken.href, imageToken.title, imageToken.text);
                    break;
                }
                case 'strong': {
                    const strongToken = token;
                    out += renderer.strong(this.parseInline(strongToken.tokens, renderer));
                    break;
                }
                case 'em': {
                    const emToken = token;
                    out += renderer.em(this.parseInline(emToken.tokens, renderer));
                    break;
                }
                case 'codespan': {
                    const codespanToken = token;
                    out += renderer.codespan(codespanToken.text);
                    break;
                }
                case 'br': {
                    out += renderer.br();
                    break;
                }
                case 'del': {
                    const delToken = token;
                    out += renderer.del(this.parseInline(delToken.tokens, renderer));
                    break;
                }
                case 'text': {
                    const textToken = token;
                    out += renderer.text(textToken.text);
                    break;
                }
                default: {
                    const errMsg = 'Token with "' + token.type + '" type was not found.';
                    if (this.options.silent) {
                        console.error(errMsg);
                        return '';
                    }
                    else {
                        throw new Error(errMsg);
                    }
                }
            }
        }
        return out;
    }
}

class _Hooks {
    options;
    constructor(options) {
        this.options = options || _defaults;
    }
    static passThroughHooks = new Set([
        'preprocess',
        'postprocess',
        'processAllTokens'
    ]);
    /**
     * Process markdown before marked
     */
    preprocess(markdown) {
        return markdown;
    }
    /**
     * Process HTML after marked is finished
     */
    postprocess(html) {
        return html;
    }
    /**
     * Process all tokens before walk tokens
     */
    processAllTokens(tokens) {
        return tokens;
    }
}

class Marked {
    defaults = _getDefaults();
    options = this.setOptions;
    parse = this.#parseMarkdown(_Lexer.lex, _Parser.parse);
    parseInline = this.#parseMarkdown(_Lexer.lexInline, _Parser.parseInline);
    Parser = _Parser;
    Renderer = _Renderer;
    TextRenderer = _TextRenderer;
    Lexer = _Lexer;
    Tokenizer = _Tokenizer;
    Hooks = _Hooks;
    constructor(...args) {
        this.use(...args);
    }
    /**
     * Run callback for every token
     */
    walkTokens(tokens, callback) {
        let values = [];
        for (const token of tokens) {
            values = values.concat(callback.call(this, token));
            switch (token.type) {
                case 'table': {
                    const tableToken = token;
                    for (const cell of tableToken.header) {
                        values = values.concat(this.walkTokens(cell.tokens, callback));
                    }
                    for (const row of tableToken.rows) {
                        for (const cell of row) {
                            values = values.concat(this.walkTokens(cell.tokens, callback));
                        }
                    }
                    break;
                }
                case 'list': {
                    const listToken = token;
                    values = values.concat(this.walkTokens(listToken.items, callback));
                    break;
                }
                default: {
                    const genericToken = token;
                    if (this.defaults.extensions?.childTokens?.[genericToken.type]) {
                        this.defaults.extensions.childTokens[genericToken.type].forEach((childTokens) => {
                            values = values.concat(this.walkTokens(genericToken[childTokens], callback));
                        });
                    }
                    else if (genericToken.tokens) {
                        values = values.concat(this.walkTokens(genericToken.tokens, callback));
                    }
                }
            }
        }
        return values;
    }
    use(...args) {
        const extensions = this.defaults.extensions || { renderers: {}, childTokens: {} };
        args.forEach((pack) => {
            // copy options to new object
            const opts = { ...pack };
            // set async to true if it was set to true before
            opts.async = this.defaults.async || opts.async || false;
            // ==-- Parse "addon" extensions --== //
            if (pack.extensions) {
                pack.extensions.forEach((ext) => {
                    if (!ext.name) {
                        throw new Error('extension name required');
                    }
                    if ('renderer' in ext) { // Renderer extensions
                        const prevRenderer = extensions.renderers[ext.name];
                        if (prevRenderer) {
                            // Replace extension with func to run new extension but fall back if false
                            extensions.renderers[ext.name] = function (...args) {
                                let ret = ext.renderer.apply(this, args);
                                if (ret === false) {
                                    ret = prevRenderer.apply(this, args);
                                }
                                return ret;
                            };
                        }
                        else {
                            extensions.renderers[ext.name] = ext.renderer;
                        }
                    }
                    if ('tokenizer' in ext) { // Tokenizer Extensions
                        if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {
                            throw new Error("extension level must be 'block' or 'inline'");
                        }
                        const extLevel = extensions[ext.level];
                        if (extLevel) {
                            extLevel.unshift(ext.tokenizer);
                        }
                        else {
                            extensions[ext.level] = [ext.tokenizer];
                        }
                        if (ext.start) { // Function to check for start of token
                            if (ext.level === 'block') {
                                if (extensions.startBlock) {
                                    extensions.startBlock.push(ext.start);
                                }
                                else {
                                    extensions.startBlock = [ext.start];
                                }
                            }
                            else if (ext.level === 'inline') {
                                if (extensions.startInline) {
                                    extensions.startInline.push(ext.start);
                                }
                                else {
                                    extensions.startInline = [ext.start];
                                }
                            }
                        }
                    }
                    if ('childTokens' in ext && ext.childTokens) { // Child tokens to be visited by walkTokens
                        extensions.childTokens[ext.name] = ext.childTokens;
                    }
                });
                opts.extensions = extensions;
            }
            // ==-- Parse "overwrite" extensions --== //
            if (pack.renderer) {
                const renderer = this.defaults.renderer || new _Renderer(this.defaults);
                for (const prop in pack.renderer) {
                    if (!(prop in renderer)) {
                        throw new Error(`renderer '${prop}' does not exist`);
                    }
                    if (prop === 'options') {
                        // ignore options property
                        continue;
                    }
                    const rendererProp = prop;
                    const rendererFunc = pack.renderer[rendererProp];
                    const prevRenderer = renderer[rendererProp];
                    // Replace renderer with func to run extension, but fall back if false
                    renderer[rendererProp] = (...args) => {
                        let ret = rendererFunc.apply(renderer, args);
                        if (ret === false) {
                            ret = prevRenderer.apply(renderer, args);
                        }
                        return ret || '';
                    };
                }
                opts.renderer = renderer;
            }
            if (pack.tokenizer) {
                const tokenizer = this.defaults.tokenizer || new _Tokenizer(this.defaults);
                for (const prop in pack.tokenizer) {
                    if (!(prop in tokenizer)) {
                        throw new Error(`tokenizer '${prop}' does not exist`);
                    }
                    if (['options', 'rules', 'lexer'].includes(prop)) {
                        // ignore options, rules, and lexer properties
                        continue;
                    }
                    const tokenizerProp = prop;
                    const tokenizerFunc = pack.tokenizer[tokenizerProp];
                    const prevTokenizer = tokenizer[tokenizerProp];
                    // Replace tokenizer with func to run extension, but fall back if false
                    // @ts-expect-error cannot type tokenizer function dynamically
                    tokenizer[tokenizerProp] = (...args) => {
                        let ret = tokenizerFunc.apply(tokenizer, args);
                        if (ret === false) {
                            ret = prevTokenizer.apply(tokenizer, args);
                        }
                        return ret;
                    };
                }
                opts.tokenizer = tokenizer;
            }
            // ==-- Parse Hooks extensions --== //
            if (pack.hooks) {
                const hooks = this.defaults.hooks || new _Hooks();
                for (const prop in pack.hooks) {
                    if (!(prop in hooks)) {
                        throw new Error(`hook '${prop}' does not exist`);
                    }
                    if (prop === 'options') {
                        // ignore options property
                        continue;
                    }
                    const hooksProp = prop;
                    const hooksFunc = pack.hooks[hooksProp];
                    const prevHook = hooks[hooksProp];
                    if (_Hooks.passThroughHooks.has(prop)) {
                        // @ts-expect-error cannot type hook function dynamically
                        hooks[hooksProp] = (arg) => {
                            if (this.defaults.async) {
                                return Promise.resolve(hooksFunc.call(hooks, arg)).then(ret => {
                                    return prevHook.call(hooks, ret);
                                });
                            }
                            const ret = hooksFunc.call(hooks, arg);
                            return prevHook.call(hooks, ret);
                        };
                    }
                    else {
                        // @ts-expect-error cannot type hook function dynamically
                        hooks[hooksProp] = (...args) => {
                            let ret = hooksFunc.apply(hooks, args);
                            if (ret === false) {
                                ret = prevHook.apply(hooks, args);
                            }
                            return ret;
                        };
                    }
                }
                opts.hooks = hooks;
            }
            // ==-- Parse WalkTokens extensions --== //
            if (pack.walkTokens) {
                const walkTokens = this.defaults.walkTokens;
                const packWalktokens = pack.walkTokens;
                opts.walkTokens = function (token) {
                    let values = [];
                    values.push(packWalktokens.call(this, token));
                    if (walkTokens) {
                        values = values.concat(walkTokens.call(this, token));
                    }
                    return values;
                };
            }
            this.defaults = { ...this.defaults, ...opts };
        });
        return this;
    }
    setOptions(opt) {
        this.defaults = { ...this.defaults, ...opt };
        return this;
    }
    lexer(src, options) {
        return _Lexer.lex(src, options ?? this.defaults);
    }
    parser(tokens, options) {
        return _Parser.parse(tokens, options ?? this.defaults);
    }
    #parseMarkdown(lexer, parser) {
        return (src, options) => {
            const origOpt = { ...options };
            const opt = { ...this.defaults, ...origOpt };
            // Show warning if an extension set async to true but the parse was called with async: false
            if (this.defaults.async === true && origOpt.async === false) {
                if (!opt.silent) {
                    console.warn('marked(): The async option was set to true by an extension. The async: false option sent to parse will be ignored.');
                }
                opt.async = true;
            }
            const throwError = this.#onError(!!opt.silent, !!opt.async);
            // throw error in case of non string input
            if (typeof src === 'undefined' || src === null) {
                return throwError(new Error('marked(): input parameter is undefined or null'));
            }
            if (typeof src !== 'string') {
                return throwError(new Error('marked(): input parameter is of type '
                    + Object.prototype.toString.call(src) + ', string expected'));
            }
            if (opt.hooks) {
                opt.hooks.options = opt;
            }
            if (opt.async) {
                return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)
                    .then(src => lexer(src, opt))
                    .then(tokens => opt.hooks ? opt.hooks.processAllTokens(tokens) : tokens)
                    .then(tokens => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)
                    .then(tokens => parser(tokens, opt))
                    .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)
                    .catch(throwError);
            }
            try {
                if (opt.hooks) {
                    src = opt.hooks.preprocess(src);
                }
                let tokens = lexer(src, opt);
                if (opt.hooks) {
                    tokens = opt.hooks.processAllTokens(tokens);
                }
                if (opt.walkTokens) {
                    this.walkTokens(tokens, opt.walkTokens);
                }
                let html = parser(tokens, opt);
                if (opt.hooks) {
                    html = opt.hooks.postprocess(html);
                }
                return html;
            }
            catch (e) {
                return throwError(e);
            }
        };
    }
    #onError(silent, async) {
        return (e) => {
            e.message += '\nPlease report this to https://github.com/markedjs/marked.';
            if (silent) {
                const msg = '<p>An error occurred:</p><pre>'
                    + escape$1(e.message + '', true)
                    + '</pre>';
                if (async) {
                    return Promise.resolve(msg);
                }
                return msg;
            }
            if (async) {
                return Promise.reject(e);
            }
            throw e;
        };
    }
}

const markedInstance = new Marked();
function marked(src, opt) {
    return markedInstance.parse(src, opt);
}
/**
 * Sets the default options.
 *
 * @param options Hash of options
 */
marked.options =
    marked.setOptions = function (options) {
        markedInstance.setOptions(options);
        marked.defaults = markedInstance.defaults;
        changeDefaults(marked.defaults);
        return marked;
    };
/**
 * Gets the original marked default options.
 */
marked.getDefaults = _getDefaults;
marked.defaults = _defaults;
/**
 * Use Extension
 */
marked.use = function (...args) {
    markedInstance.use(...args);
    marked.defaults = markedInstance.defaults;
    changeDefaults(marked.defaults);
    return marked;
};
/**
 * Run callback for every token
 */
marked.walkTokens = function (tokens, callback) {
    return markedInstance.walkTokens(tokens, callback);
};
/**
 * Compiles markdown to HTML without enclosing `p` tag.
 *
 * @param src String of markdown source to be compiled
 * @param options Hash of options
 * @return String of compiled HTML
 */
marked.parseInline = markedInstance.parseInline;
/**
 * Expose
 */
marked.Parser = _Parser;
marked.parser = _Parser.parse;
marked.Renderer = _Renderer;
marked.TextRenderer = _TextRenderer;
marked.Lexer = _Lexer;
marked.lexer = _Lexer.lex;
marked.Tokenizer = _Tokenizer;
marked.Hooks = _Hooks;
marked.parse = marked;
const options = marked.options;
const setOptions = marked.setOptions;
const use = marked.use;
const walkTokens = marked.walkTokens;
const parseInline = marked.parseInline;
const parse = (/* unused pure expression or super */ null && (marked));
const parser = _Parser.parse;
const lexer = _Lexer.lex;


//# sourceMappingURL=marked.esm.js.map

// EXTERNAL MODULE: ../../../../../../../../node_modules/dompurify/dist/purify.js
var purify = __webpack_require__(248);
var purify_default = /*#__PURE__*/__webpack_require__.n(purify);
;// CONCATENATED MODULE: ./src/Util/util.ts


function convertRubricData(d) {
    function sortFn(v1, v2) {
        return (v1.sort > v2.sort) ? 1 : -1;
    }
    const data = {
        "rubric_data_id": d.id,
        "id": String(d.root_node.id),
        "useScores": d.use_scores,
        "useRelativeWeights": d.use_relative_weights,
        "title": d.root_node.title,
        "choices": [],
        "criteria": []
    };
    d.levels.sort(sortFn);
    data.levels = d.levels.map((level) => ({
        "id": String(level.id),
        "title": level.title,
        "description": level.description || '',
        "score": level.score,
        "use_range_score": level.use_range_score || false,
        "minimum_score": typeof level.minimum_score === 'number' ? level.minimum_score : null,
        "is_default": level.is_default,
        "criterium_id": level.criterium_id ? String(level.criterium_id) : ''
    }));
    const clusters = (d.root_node.children || []).filter((v) => v.type === 'cluster');
    clusters.sort(sortFn);
    data.clusters = clusters.map((c) => {
        const cluster = {
            "id": String(c.id),
            "title": c.title,
            "criteria": []
        };
        const categories = (c.children || []).filter((v) => v.type === 'category');
        categories.sort(sortFn);
        cluster.categories = categories.map((c) => {
            const category = {
                "id": String(c.id),
                "title": c.title,
                "color": c.color || ''
            };
            const criteria = (c.children || []).filter((v) => v.type === 'criterium');
            criteria.sort(sortFn);
            category.criteria = criteria.map((c) => {
                const criterium = {
                    "id": String(c.id),
                    "title": c.title,
                    "weight": c.weight,
                    "rel_weight": c.rel_weight
                };
                const choices = c.choices || [];
                choices.sort(sortFn);
                choices.forEach((choice) => {
                    data.choices.push({
                        "criterium_id": String(criterium.id),
                        "level_id": String(choice.level.id),
                        "selected": choice.selected,
                        "feedback": choice.feedback || '',
                        "has_fixed_score": choice.has_fixed_score,
                        "fixed_score": choice.fixed_score
                    });
                });
                return criterium;
            });
            return category;
        });
        return cluster;
    });
    return data;
}
function toMarkdown(rawString) {
    return purify_default().sanitize(marked(rawString));
}

;// CONCATENATED MODULE: ./src/Domain/TreeNode.ts

class TreeNode {
    parent;
    title = '';
    id;
    _children = [];
    isRoot = false;
    constructor(title = '', id) {
        this.parent = null;
        if (!id)
            this.id = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15); //GUID
        else
            this.id = id;
        this.title = title;
    }
    toMarkdown() {
        return toMarkdown(this.title);
    }
    canHaveChildren() {
        return true;
    }
    hasChildren() {
        return this.children.length > 0;
    }
    get children() {
        return this._children;
    }
    set children(children) {
        this._children = children;
    }
    toString() {
        return this.title;
    }
    addChild(treeNode, index = 0) {
        treeNode.parent = this;
        this._children.splice(index, 0, treeNode);
        if (this.parent)
            this.parent.notifyAddChild(treeNode);
        if (this.isRoot)
            this.notifyAddChild(treeNode);
    }
    notifyAddChild(treeNode) {
        if (this.parent) { //bubble up the change
            this.parent.notifyAddChild(treeNode);
        }
    }
    notifyRemoveChild(treeNodeContainer, treeNode) {
        if (this.parent) //bubble up the chain
            this.parent.notifyRemoveChild(treeNodeContainer, treeNode);
    }
    removeChild(treeNode, notify = true) {
        if (treeNode.parent !== this) {
            throw new Error("treeNode: " + treeNode.title + " not part of treeNode: " + this.title);
        }
        const index = this._children.indexOf(treeNode);
        this._children.splice(index, 1);
        if (notify && this.parent) {
            this.parent.notifyRemoveChild(this, treeNode);
        }
        treeNode.parent = null;
    }
    moveChild(child, newIndex, oldIndex) {
        if (child.parent !== this) {
            throw new Error("treeNode: " + child.title + " not part of treeNode: " + this.title);
        }
        if (!oldIndex)
            oldIndex = this.children.indexOf(child);
        this.moveItemInArray(this.children, oldIndex, newIndex);
    }
    /*static moveTreeNodeToContainerAtIndex(treeNode: TreeNode, container: TreeNode, index:number ) {
        ContainerManager.removeTreeNodeFromContainer(treeNode, container);
    }*/
    moveItemInArray(array, from, to) {
        if (to >= array.length || from >= array.length)
            return;
        if (to < 0 || from < 0)
            return;
        array.splice(to, 0, array.splice(from, 1)[0]);
    }
}

;// CONCATENATED MODULE: ./src/Domain/Criterium.ts

class Criterium extends TreeNode {
    weight = 100;
    rel_weight = null;
    getType() {
        return 'criterium';
    }
    getScore() {
        return 0;
    }
    toString() {
        return `Criterium (id: ${this.id}, title: ${this.title})`;
    }
    canHaveChildren() {
        return false;
    }
    toJSON() {
        return {
            id: this.id,
            title: this.title,
            weight: this.weight,
            rel_weight: this.rel_weight
        };
    }
    static fromJSON(criterium) {
        let criteriumObject;
        if (typeof criterium === 'string') {
            criteriumObject = JSON.parse(criterium);
        }
        else {
            criteriumObject = criterium;
        }
        const newCriterium = new Criterium(criteriumObject.title, criteriumObject.id);
        newCriterium.weight = criteriumObject.weight;
        newCriterium.rel_weight = typeof criteriumObject.rel_weight === 'number' ? criteriumObject.rel_weight : null;
        return newCriterium;
    }
}

;// CONCATENATED MODULE: ./src/Domain/Category.ts


class Category extends TreeNode {
    color = 'blue';
    rgbColor(opacity = 1) {
        console.log(this.color);
        // note: hexStr should be #rrggbb
        var hex = parseInt(this.color.substring(1), 16);
        var r = (hex & 0xff0000) >> 16;
        var g = (hex & 0x00ff00) >> 8;
        var b = hex & 0x0000ff;
        return [r, g, b, opacity].join(',');
    }
    getType() {
        return 'category';
    }
    getScore() {
        return 0;
    }
    addCriterium(criterium) {
        super.addChild(criterium);
    }
    removeCriterium(criterium) {
        super.removeChild(criterium);
    }
    get criteria() {
        return this.children.filter(child => (child instanceof Criterium));
    }
    toJSON() {
        return {
            id: this.id,
            title: this.title,
            color: this.color,
            criteria: this._children
        };
    }
    static fromJSON(category) {
        let categoryObject;
        if (typeof category === 'string') {
            categoryObject = JSON.parse(category);
        }
        else {
            categoryObject = category;
        }
        const newCategory = new Category(categoryObject.title, categoryObject.id);
        newCategory.color = categoryObject.color;
        newCategory.id = categoryObject.id;
        const criteria = categoryObject.criteria
            .map(criteriumJsonObject => Criterium.fromJSON(criteriumJsonObject));
        criteria.forEach(criterium => criterium.parent = newCategory);
        // Note: Setting children directly loses the notifyAddChild behavior.
        newCategory._children = criteria;
        return newCategory;
    }
}

;// CONCATENATED MODULE: ./src/Domain/Cluster.ts



class Cluster extends TreeNode {
    collapsed = false;
    getType() {
        return 'cluster';
    }
    getScore() {
        return 0;
    }
    toggleCollapsed() {
        this.collapsed = !this.collapsed;
    }
    addCategory(category) {
        super.addChild(category);
    }
    addCriterium(criterium) {
        super.addChild(criterium);
    }
    removeCriterium(criterium) {
        super.removeChild(criterium);
    }
    removeCategory(category) {
        super.removeChild(category);
    }
    get criteria() {
        return this.children.filter(child => (child instanceof Criterium));
    }
    get categories() {
        return this.children.filter(child => (child instanceof Category));
    }
    get clusters() {
        return this.children; //invariant garded at addChild
    }
    toJSON() {
        return {
            id: this.id,
            title: this.title,
            categories: this.children.filter(child => (child instanceof Category)).map((category) => category.toJSON()),
            criteria: this.children.filter(child => (child instanceof Criterium)).map((criterium) => criterium.toJSON())
        };
    }
    static fromJSON(cluster) {
        let clusterObject;
        if (typeof cluster === 'string') {
            clusterObject = JSON.parse(cluster);
        }
        else {
            clusterObject = cluster;
        }
        const newCluster = new Cluster(clusterObject.title, clusterObject.id);
        const categories = clusterObject.categories
            .map(categoryJsonObject => Category.fromJSON(categoryJsonObject));
        const criteria = clusterObject.criteria
            .map(criteriumObject => Criterium.fromJSON(criteriumObject));
        const children = categories.concat(criteria);
        children.forEach(child => child.parent = newCluster);
        // Note: Setting children directly loses the notifyAddChild behavior.
        newCluster._children = children;
        return newCluster;
    }
}

;// CONCATENATED MODULE: ./src/Domain/Level.ts

class Level {
    id;
    title;
    description;
    score;
    useRangeScore;
    minimumScore;
    isDefault;
    criteriumId = '';
    constructor(title, description = '', score = 10, useRangeScore = false, minimumScore = null, isDefault = false, id) {
        this.title = title;
        this.description = description;
        this.score = score;
        this.useRangeScore = useRangeScore;
        this.minimumScore = minimumScore;
        this.isDefault = isDefault;
        if (!id) {
            this.id = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15); // GUID
        }
        else {
            this.id = id;
        }
    }
    get use_range_score() {
        return this.useRangeScore;
    }
    set use_range_score(useRangeScore) {
        this.useRangeScore = useRangeScore;
        if (!useRangeScore) {
            this.minimumScore = null;
        }
        else {
            this.minimumScore = 0;
        }
    }
    get minimum_score() {
        return this.minimumScore;
    }
    set minimum_score(score) {
        if (typeof score === 'number') {
            this.minimumScore = score;
        }
        else {
            this.minimumScore = null;
        }
    }
    get is_default() {
        return this.isDefault;
    }
    get criterium_id() {
        return this.criteriumId;
    }
    toString() {
        return `Level (id: ${this.id}, title: ${this.title})`;
    }
    toJSON() {
        return {
            id: this.id,
            title: this.title,
            description: this.description,
            score: this.score,
            use_range_score: this.useRangeScore,
            minimum_score: this.minimumScore,
            is_default: this.isDefault,
            criterium_id: this.criteriumId
        };
    }
    toMarkdown() {
        return toMarkdown(this.description);
    }
    static fromJSON(level) {
        let levelObject;
        if (typeof level === 'string') {
            levelObject = JSON.parse(level);
        }
        else {
            levelObject = level;
        }
        const newLevel = new Level(levelObject.title, levelObject.description, levelObject.score, levelObject.use_range_score || false, typeof levelObject.minimum_score === 'number' ? levelObject.minimum_score : null, levelObject.is_default, levelObject.id);
        newLevel.criteriumId = levelObject.criterium_id;
        return newLevel;
    }
}

;// CONCATENATED MODULE: ./src/Domain/Choice.ts

class Choice {
    selected;
    feedback;
    hasFixedScore = false;
    fixedScore_ = 10;
    static FIXED_SCORE = 10;
    constructor(selected = false, feedback = '') {
        this.selected = selected;
        this.feedback = feedback;
    }
    // @ts-ignore
    get fixedScore() {
        return this.fixedScore_;
    }
    // @ts-ignore
    set fixedScore(v) {
        if (typeof v === 'number') {
            this.fixedScore_ = v;
        }
        else {
            this.fixedScore_ = parseFloat(v);
        }
    }
    get description() {
        return this.feedback;
    }
    set description(desc) {
        this.feedback = desc;
    }
    toJSON(criteriumId, levelId) {
        return {
            selected: this.selected,
            feedback: this.feedback,
            has_fixed_score: this.hasFixedScore,
            fixed_score: this.fixedScore,
            criterium_id: criteriumId,
            level_id: levelId
        };
    }
    toMarkdown() {
        return toMarkdown(this.feedback);
    }
    static fromJSON(choice) {
        let choiceObject;
        if (typeof choice === 'string') {
            choiceObject = JSON.parse(choice);
        }
        else {
            choiceObject = choice;
        }
        const newChoice = new Choice(choiceObject.selected, choiceObject.feedback);
        newChoice.hasFixedScore = choiceObject.has_fixed_score;
        newChoice.fixedScore = choiceObject.fixed_score;
        return newChoice;
    }
}

;// CONCATENATED MODULE: ./src/Domain/Rubric.ts






function add(v1, v2) {
    return v1 + v2;
}
function rounded2dec(v) {
    return Math.round(v * 100) / 100;
}
class Rubric extends TreeNode {
    useScores = true;
    useRelativeWeights = true;
    hasAbsoluteWeights = false;
    levels = [];
    choices = new Map();
    constructor(title = '', id) {
        super(title, id);
        this.isRoot = true;
    }
    getType() {
        return 'rubric';
    }
    get useWeights() {
        return this.useScores && (this.useRelativeWeights || this.hasAbsoluteWeights);
    }
    get rubricLevels() {
        return this.levels.filter(level => !level.criteriumId);
    }
    get hasCustomLevels() {
        return this.levels.length !== this.rubricLevels.length;
    }
    get maxNumLevels() {
        let num = this.rubricLevels.length;
        if (!this.hasCustomLevels) {
            return num;
        }
        this.getAllCriteria().forEach(criterium => {
            const numCriteriumLevels = this.filterLevelsByCriterium(criterium).length;
            if (numCriteriumLevels > num) {
                num = numCriteriumLevels;
            }
        });
        return num;
    }
    filterLevelsByCriterium(criterium) {
        return this.levels.filter(level => level.criteriumId === criterium.id);
    }
    get clusters() {
        return this.children; //invariant garded at addChild
    }
    addCluster(cluster) {
        this.addChild(cluster);
    }
    removeCluster(cluster) {
        this.removeChild(cluster);
    }
    notifyAddChild(treeNode) {
        if (treeNode instanceof Criterium) {
            this.onCriteriumAdded(treeNode);
        }
        else { //if for example a cluster is added, we add any choices from criteria in that cluster. This could happen when bootstrapping from json data model
            let addedCriteria = this.getAllCriteria(treeNode);
            addedCriteria.forEach(criterium => {
                this.onCriteriumAdded(criterium);
            });
        }
        //no more bubbling
    }
    onCriteriumAdded(criterium) {
        if (this.filterLevelsByCriterium(criterium).length) {
            return;
        }
        this.rubricLevels.forEach(level => {
            //choice already exists for criterium? Could be through json bootstrapping.
            let choice = this.findChoice(criterium, level);
            if (!choice) {
                choice = new Choice(false, "");
            }
            this.addChoice(choice, criterium.id, level.id);
        });
    }
    notifyRemoveChild(parent, treeNode) {
        const criteriaToBeRemoved = this.getAllCriteria(treeNode);
        criteriaToBeRemoved.forEach(criterium => this.removeChoicesByCriterium(criterium));
    }
    toJSON() {
        return {
            id: this.id,
            useScores: this.useScores,
            useRelativeWeights: this.useRelativeWeights,
            title: this.title,
            levels: this.levels,
            clusters: this._children.map(cluster => cluster.toJSON()),
            choices: this.getChoicesJSON()
        };
    }
    getChoicesJSON() {
        let choicesArray = [];
        this.choices.forEach((levelMap, criteriumId) => {
            levelMap.forEach((choice, levelId) => {
                choicesArray.push(choice.toJSON(criteriumId, levelId));
            });
        });
        return choicesArray;
    }
    static fromJSON(rubric) {
        let rubricObject;
        if (typeof rubric === 'string') {
            rubricObject = JSON.parse(rubric);
        }
        else {
            rubricObject = rubric;
        }
        const newRubric = new Rubric(rubricObject.title, rubricObject.id);
        newRubric.levels.push(...rubricObject.levels.map(level => Level.fromJSON(level)));
        rubricObject.choices.forEach(rubricChoiceJsonObject => {
            newRubric.addChoice(Choice.fromJSON(rubricChoiceJsonObject), rubricChoiceJsonObject.criterium_id, rubricChoiceJsonObject.level_id);
        });
        const clusters = rubricObject.clusters
            .map(clusterJsonObject => Cluster.fromJSON(clusterJsonObject));
        clusters.forEach(cluster => cluster.parent = newRubric);
        // Note: Setting children directly loses the notifyAddChild behavior. So we have to perform the actions here.
        newRubric._children = clusters;
        newRubric.useScores = rubricObject.useScores;
        newRubric.useRelativeWeights = rubricObject.useRelativeWeights;
        newRubric.getAllCriteria().forEach(criterium => newRubric.onCriteriumAdded(criterium));
        return newRubric;
    }
    addChoice(choice, criteriumId, levelId) {
        let criteriumChoices = this.choices.get(criteriumId);
        if (criteriumChoices === undefined) {
            criteriumChoices = new Map();
            this.choices.set(criteriumId, criteriumChoices);
        }
        criteriumChoices.set(levelId, choice);
    }
    removeChoicesByCriterium(criterium) {
        this.choices.delete(criterium.id);
    }
    setChoicesCriteriumId(oldId, newId) {
        const criteriumChoices = this.choices.get(oldId);
        if (criteriumChoices) {
            this.choices.delete(oldId);
            this.choices.set(newId, criteriumChoices);
        }
    }
    setChoicesLevelId(oldId, newId) {
        this.getAllCriteria().forEach(criterium => {
            const criteriumChoices = this.choices.get(criterium.id);
            if (criteriumChoices) {
                const choice = criteriumChoices.get(oldId);
                if (choice) {
                    criteriumChoices.delete(oldId);
                    criteriumChoices.set(newId, choice);
                }
            }
        });
    }
    removeChoicesByLevel(level) {
        Array.from(this.choices.values()).forEach(levelChoices => levelChoices.delete(level.id));
    }
    findChoice(criterium, level) {
        let criteriumChoices = this.choices.get(criterium.id);
        if (criteriumChoices === undefined) {
            return undefined;
        }
        return criteriumChoices.get(level.id);
    }
    /**
     * Invariant: to the outside world a choice is always available for a criterium and level of the rubric.
     * @param criterium
     * @param level
     */
    getChoice(criterium, level) {
        let choice = this.findChoice(criterium, level);
        if (!choice) {
            throw new Error(`No choice found for criteria: ${criterium} and level: ${level}`);
        }
        return choice;
    }
    addLevel(level) {
        this.levels.push(level);
        if (level.criteriumId) {
            this.choices.delete(level.criteriumId);
            return;
        }
        this.getAllCriteria().forEach(criterium => {
            if (!this.filterLevelsByCriterium(criterium).length) {
                this.addChoice(new Choice(false, ""), criterium.id, level.id);
            }
        });
    }
    removeLevel(level) {
        let criterium;
        if (level.criteriumId) {
            criterium = this.getAllCriteria().find(criterium => criterium.id === level.criteriumId);
        }
        const index = this.levels.indexOf(level);
        this.levels.splice(index, 1);
        this.removeChoicesByLevel(level);
        if (criterium && !this.filterLevelsByCriterium(criterium).length) {
            const criteriumId = criterium.id;
            this.rubricLevels.forEach(level => {
                this.addChoice(new Choice(false, ""), criteriumId, level.id);
            });
        }
    }
    getFilteredLevels(level) {
        if (level.criteriumId) {
            const criterium = this.getAllCriteria().find(c => c.id === level.criteriumId);
            if (!criterium) {
                return null;
            }
            return this.filterLevelsByCriterium(criterium);
        }
        return this.rubricLevels;
    }
    moveLevelDown(level) {
        const levels = this.getFilteredLevels(level);
        if (!levels) {
            return;
        }
        const levelIndex = levels.indexOf(level);
        const nextLevel = levels[levelIndex + 1];
        if (!nextLevel) {
            return;
        }
        this.moveItemInArray(this.levels, this.levels.indexOf(level), this.levels.indexOf(nextLevel));
    }
    moveLevelUp(level) {
        const levels = this.getFilteredLevels(level);
        if (!levels) {
            return;
        }
        const levelIndex = levels.indexOf(level);
        const nextLevel = levels[levelIndex - 1];
        if (!nextLevel) {
            return;
        }
        this.moveItemInArray(this.levels, this.levels.indexOf(level), this.levels.indexOf(nextLevel));
    }
    moveItemInArray(array, from, to) {
        if (to >= array.length || from >= array.length)
            return;
        if (to < 0 || from < 0)
            return;
        array.splice(to, 0, array.splice(from, 1)[0]);
    }
    getChoiceScore(criterium, level) {
        let choice = this.getChoice(criterium, level);
        if (choice.hasFixedScore)
            return choice.fixedScore;
        return Math.round(criterium.weight * level.score) / 100;
    }
    getScore() {
        return this._children
            .reduce((accumulator, currentTreeNode) => accumulator + currentTreeNode.getScore(), 0);
    }
    getMaximumScore() {
        if (this.useRelativeWeights) {
            return 100;
        }
        let maxScore = 0;
        this.getAllCriteria().forEach(criterium => {
            const filteredLevels = this.filterLevelsByCriterium(criterium);
            let levelScores;
            if (filteredLevels.length) {
                levelScores = filteredLevels.map(level => level.score);
            }
            else {
                levelScores = this.rubricLevels.map(level => this.getChoiceScore(criterium, level));
            }
            const max = levelScores.reduce((curr, score) => Math.max(curr, score), 0);
            maxScore += max;
        });
        return maxScore;
    }
    getCriteriumMaxScore(criterium, precise = false) {
        if (this.useRelativeWeights) {
            return criterium.rel_weight !== null ? criterium.rel_weight : (precise ? this.eqRestWeightPrecise : this.eqRestWeight);
        }
        const scores = [0];
        const filteredLevels = this.filterLevelsByCriterium(criterium);
        if (filteredLevels.length) {
            filteredLevels.forEach(level => {
                scores.push(level.score);
            });
        }
        else {
            const criteriumChoices = this.choices.get(criterium.id);
            if (!criteriumChoices) {
                throw new Error(`No choice data found for: ${criterium}`);
            }
            criteriumChoices.forEach((choice, levelId) => {
                const level = this.rubricLevels.find(level => level.id === levelId);
                scores.push(this.getChoiceScore(criterium, level));
            });
        }
        return Math.max.apply(null, scores);
    }
    getCategoryMaxScore(category) {
        const score = this.getAllCriteria(category).map(criterium => this.getCriteriumMaxScore(criterium, true)).reduce(add, 0);
        return rounded2dec(score);
    }
    getClusterMaxScore(cluster) {
        const score = this.getAllCriteria(cluster).map(criterium => this.getCriteriumMaxScore(criterium, true)).reduce(add, 0);
        return rounded2dec(score);
    }
    getAllTreeNodes(treeNode = this) {
        const nodes = [];
        this.getChildrenRecursive(treeNode, nodes);
        return nodes;
    }
    getChildrenRecursive(treeNode, nodes) {
        nodes.push(treeNode);
        treeNode.children.filter(child => (child instanceof Criterium)).forEach(criterium => nodes.push(criterium));
        treeNode.children.filter(child => child.hasChildren()).forEach(child => this.getChildrenRecursive(child, nodes));
    }
    getAllCriteria(treeNode = this) {
        const criteria = [];
        this.getCriteriaRecursive(treeNode, criteria);
        return criteria;
    }
    getAllCategories(treeNode = this) {
        const categories = [];
        this.children.filter(child => (child instanceof Category)).forEach(category => categories.push(category));
        this.children.filter(child => (child instanceof Cluster)).forEach(cluster => categories.push(...cluster.categories));
        return categories;
    }
    getCriteriaRecursive(treeNode, criteria) {
        treeNode.children.filter(child => (child instanceof Criterium)).forEach(criterium => criteria.push(criterium));
        treeNode.children.filter(child => child.hasChildren()).forEach(child => this.getCriteriaRecursive(child, criteria));
    }
    get eqRestWeightPrecise() {
        // n => number of criteria without an explicitly set relative weight (only relevant when useRelativeWeights === true)
        const n = this.getAllCriteria().filter(criterium => criterium.rel_weight === null).length;
        if (!n) {
            return 0;
        }
        const sum = this.getAllCriteria().map(criterium => criterium.rel_weight || 0).reduce(add, 0);
        return (100 - sum) / n;
    }
    get eqRestWeight() {
        return rounded2dec(this.eqRestWeightPrecise);
    }
    getCriteriumWeight(criterium) {
        if (this.useRelativeWeights) {
            if (criterium.rel_weight !== null) {
                return criterium.rel_weight;
            }
            return this.eqRestWeightPrecise;
        }
        return criterium.weight;
    }
    getRelativeWeight(treeNode) {
        if (!this.useRelativeWeights) {
            return 0;
        }
        if (treeNode instanceof Criterium) {
            return this.getCriteriumWeight(treeNode);
        }
        return this.getAllCriteria(treeNode).map(criterium => this.getCriteriumWeight(criterium)).reduce(add, 0);
    }
    /*public getMaxDecimals() : number {
        let maxDecimals = 0;
        if (this.useScores && !this.useRelativeWeights) {
            this.getAllCriteria().forEach(criterium => {
                this.levels.forEach(level => {
                    const score = this.getChoiceScore(criterium, level);
                    const intScore = parseInt(score as any);
                    if (intScore !== score) {
                        const decimals = (score - intScore).toLocaleString('en-us').length - 2;
                        if (decimals > maxDecimals) {
                            maxDecimals = decimals;
                        }
                    }
                });
            });
        }
        return maxDecimals;
    }*/
    static resetAbsoluteWeights(rubric) {
        const criteria = rubric.getAllCriteria();
        const levels = rubric.levels;
        for (let i = 0; i < criteria.length; i++) {
            if (criteria[i].weight !== 100) {
                criteria[i].weight = 100;
            }
            for (let j = 0; j < levels.length; j++) {
                const choice = rubric.findChoice(criteria[i], levels[j]);
                if (choice?.hasFixedScore) {
                    choice.fixedScore = 0;
                    choice.hasFixedScore = false;
                }
            }
        }
        rubric.hasAbsoluteWeights = false;
    }
    static usesAbsoluteWeights(rubric) {
        const criteria = rubric.getAllCriteria();
        const levels = rubric.levels;
        for (let i = 0; i < criteria.length; i++) {
            if (criteria[i].weight !== 100) {
                return true;
            }
            for (let j = 0; j < levels.length; j++) {
                const choice = rubric.findChoice(criteria[i], levels[j]);
                if (choice?.hasFixedScore) {
                    return true;
                }
            }
        }
        return false;
    }
}

;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricDemoWrapper.vue?vue&type=template&id=b781e014
var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('router-view')
}
var staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/tslib/tslib.es6.mjs
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise, SuppressedError, Symbol */

var extendStatics = function(d, b) {
  extendStatics = Object.setPrototypeOf ||
      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
  return extendStatics(d, b);
};

function __extends(d, b) {
  if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
  extendStatics(d, b);
  function __() { this.constructor = d; }
  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
  __assign = Object.assign || function __assign(t) {
      for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
      return t;
  }
  return __assign.apply(this, arguments);
}

function __rest(s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
              t[p[i]] = s[p[i]];
      }
  return t;
}

function __decorate(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
  return function (target, key) { decorator(target, key, paramIndex); }
}

function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
  function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
  var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
  var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
  var _, done = false;
  for (var i = decorators.length - 1; i >= 0; i--) {
      var context = {};
      for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
      for (var p in contextIn.access) context.access[p] = contextIn.access[p];
      context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
      var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
      if (kind === "accessor") {
          if (result === void 0) continue;
          if (result === null || typeof result !== "object") throw new TypeError("Object expected");
          if (_ = accept(result.get)) descriptor.get = _;
          if (_ = accept(result.set)) descriptor.set = _;
          if (_ = accept(result.init)) initializers.unshift(_);
      }
      else if (_ = accept(result)) {
          if (kind === "field") initializers.unshift(_);
          else descriptor[key] = _;
      }
  }
  if (target) Object.defineProperty(target, contextIn.name, descriptor);
  done = true;
};

function __runInitializers(thisArg, initializers, value) {
  var useValue = arguments.length > 2;
  for (var i = 0; i < initializers.length; i++) {
      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
  }
  return useValue ? value : void 0;
};

function __propKey(x) {
  return typeof x === "symbol" ? x : "".concat(x);
};

function __setFunctionName(f, name, prefix) {
  if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
  return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};

function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
  return new (P || (P = Promise))(function (resolve, reject) {
      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
      function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}

function __generator(thisArg, body) {
  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
  function verb(n) { return function (v) { return step([n, v]); }; }
  function step(op) {
      if (f) throw new TypeError("Generator is already executing.");
      while (g && (g = 0, op[0] && (_ = 0)), _) try {
          if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
          if (y = 0, t) op = [op[0] & 2, t.value];
          switch (op[0]) {
              case 0: case 1: t = op; break;
              case 4: _.label++; return { value: op[1], done: false };
              case 5: _.label++; y = op[1]; op = [0]; continue;
              case 7: op = _.ops.pop(); _.trys.pop(); continue;
              default:
                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                  if (t[2]) _.ops.pop();
                  _.trys.pop(); continue;
          }
          op = body.call(thisArg, _);
      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
  }
}

var __createBinding = Object.create ? (function(o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  var desc = Object.getOwnPropertyDescriptor(m, k);
  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
  }
  Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

function __exportStar(m, o) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}

function __values(o) {
  var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
      next: function () {
          if (o && i >= o.length) o = void 0;
          return { value: o && o[i++], done: !o };
      }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o), r, ar = [], e;
  try {
      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
  }
  catch (error) { e = { error: error }; }
  finally {
      try {
          if (r && !r.done && (m = i["return"])) m.call(i);
      }
      finally { if (e) throw e.error; }
  }
  return ar;
}

/** @deprecated */
function __spread() {
  for (var ar = [], i = 0; i < arguments.length; i++)
      ar = ar.concat(__read(arguments[i]));
  return ar;
}

/** @deprecated */
function __spreadArrays() {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
  for (var r = Array(s), k = 0, i = 0; i < il; i++)
      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
          r[k] = a[j];
  return r;
}

function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
          if (!ar) ar = Array.prototype.slice.call(from, 0, i);
          ar[i] = from[i];
      }
  }
  return to.concat(ar || Array.prototype.slice.call(from));
}

function __await(v) {
  return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g = generator.apply(thisArg, _arguments || []), i, q = [];
  return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
  function fulfill(value) { resume("next", value); }
  function reject(value) { resume("throw", value); }
  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
  var i, p;
  return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m = o[Symbol.asyncIterator], i;
  return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
  return cooked;
};

var __setModuleDefault = Object.create ? (function(o, v) {
  Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
  o["default"] = v;
};

function __importStar(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  __setModuleDefault(result, mod);
  return result;
}

function __importDefault(mod) {
  return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, state, kind, f) {
  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
  return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}

function __classPrivateFieldSet(receiver, state, value, kind, f) {
  if (kind === "m") throw new TypeError("Private method is not writable");
  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
  return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
}

function __classPrivateFieldIn(state, receiver) {
  if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
  return typeof state === "function" ? receiver === state : state.has(receiver);
}

function __addDisposableResource(env, value, async) {
  if (value !== null && value !== void 0) {
    if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
    var dispose;
    if (async) {
        if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
        dispose = value[Symbol.asyncDispose];
    }
    if (dispose === void 0) {
        if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
        dispose = value[Symbol.dispose];
    }
    if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
    env.stack.push({ value: value, dispose: dispose, async: async });
  }
  else if (async) {
    env.stack.push({ async: true });
  }
  return value;
}

var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
  var e = new Error(message);
  return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};

function __disposeResources(env) {
  function fail(e) {
    env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
    env.hasError = true;
  }
  function next() {
    while (env.stack.length) {
      var rec = env.stack.pop();
      try {
        var result = rec.dispose && rec.dispose.call(rec.value);
        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });
      }
      catch (e) {
          fail(e);
      }
    }
    if (env.hasError) throw env.error;
  }
  return next();
}

/* harmony default export */ var tslib_es6 = ({
  __extends,
  __assign,
  __rest,
  __decorate,
  __param,
  __metadata,
  __awaiter,
  __generator,
  __createBinding,
  __exportStar,
  __values,
  __read,
  __spread,
  __spreadArrays,
  __spreadArray,
  __await,
  __asyncGenerator,
  __asyncDelegator,
  __asyncValues,
  __makeTemplateObject,
  __importStar,
  __importDefault,
  __classPrivateFieldGet,
  __classPrivateFieldSet,
  __classPrivateFieldIn,
  __addDisposableResource,
  __disposeResources,
});

// EXTERNAL MODULE: external {"commonjs":"vue","commonjs2":"vue","root":"Vue"}
var external_commonjs_vue_commonjs2_vue_root_Vue_ = __webpack_require__(203);
var external_commonjs_vue_commonjs2_vue_root_Vue_default = /*#__PURE__*/__webpack_require__.n(external_commonjs_vue_commonjs2_vue_root_Vue_);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/vue-class-component/dist/vue-class-component.esm.js
/**
  * vue-class-component v7.2.6
  * (c) 2015-present Evan You
  * @license MIT
  */


function _typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function (obj) {
      return typeof obj;
    };
  } else {
    _typeof = function (obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

    return arr2;
  }
}

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

// The rational behind the verbose Reflect-feature check below is the fact that there are polyfills
// which add an implementation for Reflect.defineMetadata but not for Reflect.getOwnMetadataKeys.
// Without this check consumers will encounter hard to track down runtime errors.
function reflectionIsSupported() {
  return typeof Reflect !== 'undefined' && Reflect.defineMetadata && Reflect.getOwnMetadataKeys;
}
function copyReflectionMetadata(to, from) {
  forwardMetadata(to, from);
  Object.getOwnPropertyNames(from.prototype).forEach(function (key) {
    forwardMetadata(to.prototype, from.prototype, key);
  });
  Object.getOwnPropertyNames(from).forEach(function (key) {
    forwardMetadata(to, from, key);
  });
}

function forwardMetadata(to, from, propertyKey) {
  var metaKeys = propertyKey ? Reflect.getOwnMetadataKeys(from, propertyKey) : Reflect.getOwnMetadataKeys(from);
  metaKeys.forEach(function (metaKey) {
    var metadata = propertyKey ? Reflect.getOwnMetadata(metaKey, from, propertyKey) : Reflect.getOwnMetadata(metaKey, from);

    if (propertyKey) {
      Reflect.defineMetadata(metaKey, metadata, to, propertyKey);
    } else {
      Reflect.defineMetadata(metaKey, metadata, to);
    }
  });
}

var fakeArray = {
  __proto__: []
};
var hasProto = fakeArray instanceof Array;
function vue_class_component_esm_createDecorator(factory) {
  return function (target, key, index) {
    var Ctor = typeof target === 'function' ? target : target.constructor;

    if (!Ctor.__decorators__) {
      Ctor.__decorators__ = [];
    }

    if (typeof index !== 'number') {
      index = undefined;
    }

    Ctor.__decorators__.push(function (options) {
      return factory(options, key, index);
    });
  };
}
function mixins() {
  for (var _len = arguments.length, Ctors = new Array(_len), _key = 0; _key < _len; _key++) {
    Ctors[_key] = arguments[_key];
  }

  return Vue.extend({
    mixins: Ctors
  });
}
function isPrimitive(value) {
  var type = _typeof(value);

  return value == null || type !== 'object' && type !== 'function';
}
function warn(message) {
  if (typeof console !== 'undefined') {
    console.warn('[vue-class-component] ' + message);
  }
}

function collectDataFromConstructor(vm, Component) {
  // override _init to prevent to init as Vue instance
  var originalInit = Component.prototype._init;

  Component.prototype._init = function () {
    var _this = this;

    // proxy to actual vm
    var keys = Object.getOwnPropertyNames(vm); // 2.2.0 compat (props are no longer exposed as self properties)

    if (vm.$options.props) {
      for (var key in vm.$options.props) {
        if (!vm.hasOwnProperty(key)) {
          keys.push(key);
        }
      }
    }

    keys.forEach(function (key) {
      Object.defineProperty(_this, key, {
        get: function get() {
          return vm[key];
        },
        set: function set(value) {
          vm[key] = value;
        },
        configurable: true
      });
    });
  }; // should be acquired class property values


  var data = new Component(); // restore original _init to avoid memory leak (#209)

  Component.prototype._init = originalInit; // create plain data object

  var plainData = {};
  Object.keys(data).forEach(function (key) {
    if (data[key] !== undefined) {
      plainData[key] = data[key];
    }
  });

  if (false) {}

  return plainData;
}

var $internalHooks = ['data', 'beforeCreate', 'created', 'beforeMount', 'mounted', 'beforeDestroy', 'destroyed', 'beforeUpdate', 'updated', 'activated', 'deactivated', 'render', 'errorCaptured', 'serverPrefetch' // 2.6
];
function componentFactory(Component) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  options.name = options.name || Component._componentTag || Component.name; // prototype props.

  var proto = Component.prototype;
  Object.getOwnPropertyNames(proto).forEach(function (key) {
    if (key === 'constructor') {
      return;
    } // hooks


    if ($internalHooks.indexOf(key) > -1) {
      options[key] = proto[key];
      return;
    }

    var descriptor = Object.getOwnPropertyDescriptor(proto, key);

    if (descriptor.value !== void 0) {
      // methods
      if (typeof descriptor.value === 'function') {
        (options.methods || (options.methods = {}))[key] = descriptor.value;
      } else {
        // typescript decorated data
        (options.mixins || (options.mixins = [])).push({
          data: function data() {
            return _defineProperty({}, key, descriptor.value);
          }
        });
      }
    } else if (descriptor.get || descriptor.set) {
      // computed properties
      (options.computed || (options.computed = {}))[key] = {
        get: descriptor.get,
        set: descriptor.set
      };
    }
  });
  (options.mixins || (options.mixins = [])).push({
    data: function data() {
      return collectDataFromConstructor(this, Component);
    }
  }); // decorate options

  var decorators = Component.__decorators__;

  if (decorators) {
    decorators.forEach(function (fn) {
      return fn(options);
    });
    delete Component.__decorators__;
  } // find super


  var superProto = Object.getPrototypeOf(Component.prototype);
  var Super = superProto instanceof (external_commonjs_vue_commonjs2_vue_root_Vue_default()) ? superProto.constructor : (external_commonjs_vue_commonjs2_vue_root_Vue_default());
  var Extended = Super.extend(options);
  forwardStaticMembers(Extended, Component, Super);

  if (reflectionIsSupported()) {
    copyReflectionMetadata(Extended, Component);
  }

  return Extended;
}
var reservedPropertyNames = (/* unused pure expression or super */ null && ([// Unique id
'cid', // Super Vue constructor
'super', // Component options that will be used by the component
'options', 'superOptions', 'extendOptions', 'sealedOptions', // Private assets
'component', 'directive', 'filter']));
var shouldIgnore = {
  prototype: true,
  arguments: true,
  callee: true,
  caller: true
};

function forwardStaticMembers(Extended, Original, Super) {
  // We have to use getOwnPropertyNames since Babel registers methods as non-enumerable
  Object.getOwnPropertyNames(Original).forEach(function (key) {
    // Skip the properties that should not be overwritten
    if (shouldIgnore[key]) {
      return;
    } // Some browsers does not allow reconfigure built-in properties


    var extendedDescriptor = Object.getOwnPropertyDescriptor(Extended, key);

    if (extendedDescriptor && !extendedDescriptor.configurable) {
      return;
    }

    var descriptor = Object.getOwnPropertyDescriptor(Original, key); // If the user agent does not support `__proto__` or its family (IE <= 10),
    // the sub class properties may be inherited properties from the super class in TypeScript.
    // We need to exclude such properties to prevent to overwrite
    // the component options object which stored on the extended constructor (See #192).
    // If the value is a referenced value (object or function),
    // we can check equality of them and exclude it if they have the same reference.
    // If it is a primitive value, it will be forwarded for safety.

    if (!hasProto) {
      // Only `cid` is explicitly exluded from property forwarding
      // because we cannot detect whether it is a inherited property or not
      // on the no `__proto__` environment even though the property is reserved.
      if (key === 'cid') {
        return;
      }

      var superDescriptor = Object.getOwnPropertyDescriptor(Super, key);

      if (!isPrimitive(descriptor.value) && superDescriptor && superDescriptor.value === descriptor.value) {
        return;
      }
    } // Warn if the users manually declare reserved properties


    if (false) {}

    Object.defineProperty(Extended, key, descriptor);
  });
}

function Component(options) {
  if (typeof options === 'function') {
    return componentFactory(options);
  }

  return function (Component) {
    return componentFactory(Component, options);
  };
}

Component.registerHooks = function registerHooks(keys) {
  $internalHooks.push.apply($internalHooks, _toConsumableArray(keys));
};

/* harmony default export */ var vue_class_component_esm = (Component);


;// CONCATENATED MODULE: ../../../../../../../../node_modules/vue-property-decorator/lib/decorators/Emit.js
var Emit_spreadArrays = (undefined && undefined.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
// Code copied from Vue/src/shared/util.js
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = function (str) { return str.replace(hyphenateRE, '-$1').toLowerCase(); };
/**
 * decorator of an event-emitter function
 * @param  event The name of the event
 * @return MethodDecorator
 */
function Emit(event) {
    return function (_target, propertyKey, descriptor) {
        var key = hyphenate(propertyKey);
        var original = descriptor.value;
        descriptor.value = function emitter() {
            var _this = this;
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var emit = function (returnValue) {
                var emitName = event || key;
                if (returnValue === undefined) {
                    if (args.length === 0) {
                        _this.$emit(emitName);
                    }
                    else if (args.length === 1) {
                        _this.$emit(emitName, args[0]);
                    }
                    else {
                        _this.$emit.apply(_this, Emit_spreadArrays([emitName], args));
                    }
                }
                else {
                    args.unshift(returnValue);
                    _this.$emit.apply(_this, Emit_spreadArrays([emitName], args));
                }
            };
            var returnValue = original.apply(this, args);
            if (isPromise(returnValue)) {
                returnValue.then(emit);
            }
            else {
                emit(returnValue);
            }
            return returnValue;
        };
    };
}
function isPromise(obj) {
    return obj instanceof Promise || (obj && typeof obj.then === 'function');
}

;// CONCATENATED MODULE: ../../../../../../../../node_modules/vue-property-decorator/lib/helpers/metadata.js
/** @see {@link https://github.com/vuejs/vue-class-component/blob/master/src/reflect.ts} */
var reflectMetadataIsSupported = typeof Reflect !== 'undefined' && typeof Reflect.getMetadata !== 'undefined';
function metadata_applyMetadata(options, target, key) {
    if (reflectMetadataIsSupported) {
        if (!Array.isArray(options) &&
            typeof options !== 'function' &&
            !options.hasOwnProperty('type') &&
            typeof options.type === 'undefined') {
            var type = Reflect.getMetadata('design:type', target, key);
            if (type !== Object) {
                options.type = type;
            }
        }
    }
}

;// CONCATENATED MODULE: ../../../../../../../../node_modules/vue-property-decorator/lib/decorators/Model.js


/**
 * decorator of model
 * @param  event event name
 * @param options options
 * @return PropertyDecorator
 */
function Model(event, options) {
    if (options === void 0) { options = {}; }
    return function (target, key) {
        applyMetadata(options, target, key);
        createDecorator(function (componentOptions, k) {
            ;
            (componentOptions.props || (componentOptions.props = {}))[k] = options;
            componentOptions.model = { prop: k, event: event || k };
        })(target, key);
    };
}

;// CONCATENATED MODULE: ../../../../../../../../node_modules/vue-property-decorator/lib/decorators/ModelSync.js


/**
 * decorator of synced model and prop
 * @param propName the name to interface with from outside, must be different from decorated property
 * @param  event event name
 * @param options options
 * @return PropertyDecorator
 */
function ModelSync(propName, event, options) {
    if (options === void 0) { options = {}; }
    return function (target, key) {
        applyMetadata(options, target, key);
        createDecorator(function (componentOptions, k) {
            ;
            (componentOptions.props || (componentOptions.props = {}))[propName] = options;
            componentOptions.model = { prop: propName, event: event || k };
            (componentOptions.computed || (componentOptions.computed = {}))[k] = {
                get: function () {
                    return this[propName];
                },
                set: function (value) {
                    // @ts-ignore
                    this.$emit(event, value);
                },
            };
        })(target, key);
    };
}

;// CONCATENATED MODULE: ../../../../../../../../node_modules/vue-property-decorator/lib/decorators/Prop.js


/**
 * decorator of a prop
 * @param  options the options for the prop
 * @return PropertyDecorator | void
 */
function Prop(options) {
    if (options === void 0) { options = {}; }
    return function (target, key) {
        metadata_applyMetadata(options, target, key);
        vue_class_component_esm_createDecorator(function (componentOptions, k) {
            ;
            (componentOptions.props || (componentOptions.props = {}))[k] = options;
        })(target, key);
    };
}

;// CONCATENATED MODULE: ../../../../../../../../node_modules/vue-property-decorator/lib/decorators/PropSync.js


/**
 * decorator of a synced prop
 * @param propName the name to interface with from outside, must be different from decorated property
 * @param options the options for the synced prop
 * @return PropertyDecorator | void
 */
function PropSync(propName, options) {
    if (options === void 0) { options = {}; }
    return function (target, key) {
        applyMetadata(options, target, key);
        createDecorator(function (componentOptions, k) {
            ;
            (componentOptions.props || (componentOptions.props = {}))[propName] = options;
            (componentOptions.computed || (componentOptions.computed = {}))[k] = {
                get: function () {
                    return this[propName];
                },
                set: function (value) {
                    this.$emit("update:" + propName, value);
                },
            };
        })(target, key);
    };
}

;// CONCATENATED MODULE: ../../../../../../../../node_modules/vue-property-decorator/lib/decorators/Watch.js

/**
 * decorator of a watch function
 * @param  path the path or the expression to observe
 * @param  WatchOption
 * @return MethodDecorator
 */
function Watch(path, options) {
    if (options === void 0) { options = {}; }
    var _a = options.deep, deep = _a === void 0 ? false : _a, _b = options.immediate, immediate = _b === void 0 ? false : _b;
    return vue_class_component_esm_createDecorator(function (componentOptions, handler) {
        if (typeof componentOptions.watch !== 'object') {
            componentOptions.watch = Object.create(null);
        }
        var watch = componentOptions.watch;
        if (typeof watch[path] === 'object' && !Array.isArray(watch[path])) {
            watch[path] = [watch[path]];
        }
        else if (typeof watch[path] === 'undefined') {
            watch[path] = [];
        }
        watch[path].push({ handler: handler, deep: deep, immediate: immediate });
    });
}

;// CONCATENATED MODULE: ../../../../../../../../node_modules/vue-property-decorator/lib/index.js
/** vue-property-decorator verson 9.1.2 MIT LICENSE copyright 2020 kaorun343 */
/// <reference types='reflect-metadata'/>
















;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricDemoWrapper.vue?vue&type=script&lang=ts


let RubricDemoWrapper = class RubricDemoWrapper extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
};
RubricDemoWrapper = __decorate([
    vue_class_component_esm({
        name: 'rubric-demo-wrapper'
    })
], RubricDemoWrapper);
/* harmony default export */ var RubricDemoWrappervue_type_script_lang_ts = (RubricDemoWrapper);

;// CONCATENATED MODULE: ./src/Views/RubricDemoWrapper.vue?vue&type=script&lang=ts
 /* harmony default export */ var Views_RubricDemoWrappervue_type_script_lang_ts = (RubricDemoWrappervue_type_script_lang_ts); 
;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-66.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-66.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-66.use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-66.use[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricDemoWrapper.vue?vue&type=style&index=0&id=b781e014&prod&lang=scss
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Views/RubricDemoWrapper.vue?vue&type=style&index=0&id=b781e014&prod&lang=scss

;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent(
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier /* server only */,
  shadowMode /* vue-cli only */
) {
  // Vue.extend constructor export interop
  var options =
    typeof scriptExports === 'function' ? scriptExports.options : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) {
    // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () {
          injectStyles.call(
            this,
            (options.functional ? this.parent : this).$root.$options.shadowRoot
          )
        }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functional component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection(h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing ? [].concat(existing, hook) : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}

;// CONCATENATED MODULE: ./src/Views/RubricDemoWrapper.vue



;


/* normalize component */

var component = normalizeComponent(
  Views_RubricDemoWrappervue_type_script_lang_ts,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Views_RubricDemoWrapper = (component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricBuilderWrapper.vue?vue&type=template&id=35b37b62
var RubricBuilderWrappervue_type_template_id_35b37b62_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return (_vm.debugServerResponse)?_c('div',[_c('rubric-builder',{attrs:{"api-config":_vm.apiConfig,"rubric-data":_vm.convertedRubricData,"version":_vm.version,"ui-state":_vm.uiState}}),_c('div',{attrs:{"id":"server-response"}})],1):_c('rubric-builder',{attrs:{"api-config":_vm.apiConfig,"rubric-data":_vm.convertedRubricData,"version":_vm.version,"ui-state":_vm.uiState}})
}
var RubricBuilderWrappervue_type_template_id_35b37b62_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricBuilder.vue?vue&type=template&id=0f0f1f28&scoped=true
var RubricBuildervue_type_template_id_0f0f1f28_scoped_true_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{class:{'builder-app': _vm.$route.name === 'Builder', 'builder-app-levels': _vm.$route.name === 'BuilderLevels'},attrs:{"id":"app"}},[(_vm.rubric && _vm.rubric.hasAbsoluteWeights)?_c('div',{staticClass:"alert-new-weights-system"},[_c('a',{attrs:{"href":"#"},on:{"click":function($event){return _vm.showResettingWeights()}}},[_c('i',{staticClass:"fa fa-exclamation-circle",attrs:{"aria-hidden":"true"}}),_vm._v(_vm._s(_vm.$t('new-weights-system')))])]):_vm._e(),_c('div',{staticClass:"app-header"},[_c('nav',{attrs:{"role":"navigation"}},[_c('ul',{staticClass:"app-header-nav"},[_c('li',{staticClass:"app-nav-item"},[_c('router-link',{staticClass:"app-link",attrs:{"to":{ name: 'BuilderPreview' }}},[_c('span',{staticClass:"link-text",attrs:{"tabindex":"-1"}},[_vm._v(_vm._s(_vm.$t('preview')))])])],1),_c('li',{staticClass:"app-nav-item"},[_c('router-link',{staticClass:"app-link",attrs:{"to":{ name: 'Builder' }}},[_c('span',{staticClass:"link-text",attrs:{"tabindex":"-1"}},[_vm._v(_vm._s(_vm.$t('builder')))])])],1),_c('li',{staticClass:"app-nav-item"},[_c('router-link',{staticClass:"app-link",attrs:{"to":{ name: 'BuilderLevels' }}},[_c('span',{staticClass:"link-text",attrs:{"tabindex":"-1"}},[_vm._v(_vm._s(_vm.$t('levels')))])])],1),_c('li',{staticClass:"app-nav-item"},[_c('router-link',{staticClass:"app-link",attrs:{"to":{ name: 'BuilderFull' }}},[_c('span',{staticClass:"link-text",attrs:{"tabindex":"-1"}},[_vm._v(_vm._s(_vm.$t('level-descriptions')))])])],1)])]),_c('save-area',{attrs:{"show-save-state":_vm.$route.name !== 'BuilderPreview',"data-connector":_vm.dataConnector,"error":_vm.errorCode ? _vm.$t(`error-${_vm.errorCode}`) : null}})],1),_c('div',{staticClass:"rubrics",class:{'mod-mg': _vm.$route.name === 'Builder' || _vm.$route.name === 'BuilderLevels' }},[(_vm.rubric)?_c('div',{class:{ 'rubrics-wrapper': _vm.$route.name === 'Builder', 'rubrics-wrapper-levels': _vm.$route.name === 'BuilderLevels' }},[_c('router-view',{attrs:{"rubric":_vm.rubric,"data-connector":_vm.$route.name !== 'BuilderPreview' && _vm.dataConnector,"selected-criterium":_vm.$route.name === 'Builder' && _vm.selectedCriterium,"ui-state":(_vm.$route.name === 'Builder' || _vm.$route.name === 'BuilderPreview') ? _vm.uiState : null},on:{"criterium-selected":_vm.selectCriterium}})],1):_c('div',{staticClass:"app-container-loading"},[_c('p',[_vm._v("Loading Rubrics...")]),_vm._m(0)])]),(_vm.rubric && _vm.rubric.hasAbsoluteWeights && _vm.showResetWeightsDialog)?_c('div',{staticClass:"modal-bg",on:{"click":function($event){$event.stopPropagation();_vm.showResetWeightsDialog = false}}},[_c('div',{staticClass:"modal-content",on:{"click":function($event){$event.stopPropagation();}}},[_c('div',{staticClass:"modal-content-wrapper"},[_c('div',{staticClass:"modal-content-msg",domProps:{"innerHTML":_vm._s(_vm.$t('weights-system-msg', { imgurl: _vm.newWeightsImageURL }))}}),_c('div',[_c('button',{staticClass:"btn-strong mod-confirm",on:{"click":function($event){$event.stopPropagation();return _vm.resetAbsoluteWeights.apply(null, arguments)}}},[_vm._v(_vm._s(_vm.$t('move-new')))]),_c('button',{staticClass:"btn-strong",on:{"click":function($event){$event.stopPropagation();_vm.showResetWeightsDialog = false}}},[_vm._v(_vm._s(_vm.$t('keep-old')))])])])])]):_vm._e()])
}
var RubricBuildervue_type_template_id_0f0f1f28_scoped_true_staticRenderFns = [function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:"lds-ellipsis",attrs:{"aria-hidden":"true"}},[_c('div'),_c('div'),_c('div'),_c('div')])
}]


;// CONCATENATED MODULE: ./src/Views/RubricBuilder.vue?vue&type=template&id=0f0f1f28&scoped=true

;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/ScoreRubricView.vue?vue&type=template&id=1807b061
var ScoreRubricViewvue_type_template_id_1807b061_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:"app-container",class:_vm.mainClass},[_c('div',{staticClass:"rubric-panes-wrapper"},[_c('div',{staticClass:"rubric-panes",class:{ 'is-criterium-selected': !!_vm.selectedCriterium },on:{"click":_vm.hideMenu,"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"esc",27,$event.key,["Esc","Escape"]))return null;return _vm.hideMenu.apply(null, arguments)}}},[_c('rubric-pane',{attrs:{"id":"view1","show-split-view":_vm.uiState.showSplitView,"rubric":_vm.rubric,"data-connector":_vm.dataConnector,"selected-cluster":_vm.selectedClusterView1,"other-selected-cluster":_vm.selectedClusterView2,"selected-criterium":_vm.selectedCriterium,"cluster-actions-enabled":_vm.newClusterDialogView === '',"category-actions-enabled":_vm.newCategoryDialogView === '',"menu-actions-id":_vm.menuActionsId,"is-editing":_vm.isEditing,"edit-category-color-id":_vm.editCategoryColorId,"drag-item-type":_vm.dragItemType,"draggable-disabled":_vm.draggableDisabled,"banned-for-drop":_vm.bannedForDrop},on:{"split-view-changed":function($event){_vm.uiState.showSplitView = $event},"cluster-selected":function($event){return _vm.onClusterSelected($event, 'view1')},"criterium-selected":_vm.selectCriterium,"dialog-new-cluster":function($event){_vm.newClusterDialogView = $event},"dialog-new-category":function($event){_vm.newCategoryDialogView = $event},"item-actions":function($event){return _vm.onItemActions($event)},"start-edit":_vm.onStartEdit,"finish-edit":_vm.onFinishEdit,"change-color":_vm.onChangeColor,"remove":_vm.showRemoveDialog,"color-picker":_vm.onColorPicker,"start-drag":_vm.startDrag,"end-drag":_vm.endDrag,"over-element":_vm.dragOverElement}}),_c('transition',{attrs:{"name":"selected-fade","mode":"out-in"}},[(_vm.uiState.showSplitView)?_c('rubric-pane',{attrs:{"id":"view2","show-split-view":_vm.uiState.showSplitView,"rubric":_vm.rubric,"data-connector":_vm.dataConnector,"selected-cluster":_vm.selectedClusterView2,"other-selected-cluster":_vm.selectedClusterView1,"selected-criterium":_vm.selectedCriterium,"cluster-actions-enabled":_vm.newClusterDialogView === '',"category-actions-enabled":_vm.newCategoryDialogView === '',"menu-actions-id":_vm.menuActionsId,"is-editing":_vm.isEditing,"edit-category-color-id":_vm.editCategoryColorId,"drag-item-type":_vm.dragItemType,"draggable-disabled":_vm.draggableDisabled,"banned-for-drop":_vm.bannedForDrop},on:{"cluster-selected":function($event){return _vm.onClusterSelected($event, 'view2')},"criterium-selected":_vm.selectCriterium,"dialog-new-cluster":function($event){_vm.newClusterDialogView = $event},"dialog-new-category":function($event){_vm.newCategoryDialogView = $event},"item-actions":function($event){return _vm.onItemActions($event)},"start-edit":_vm.onStartEdit,"finish-edit":_vm.onFinishEdit,"change-color":_vm.onChangeColor,"remove":_vm.showRemoveDialog,"color-picker":_vm.onColorPicker,"start-drag":_vm.startDrag,"end-drag":_vm.endDrag,"over-element":_vm.dragOverElement}}):_vm._e()],1)],1)]),_c('transition',{attrs:{"name":"selected-fade","mode":"out-in"}},[(_vm.selectedCriterium)?_c('criterium-details-view',{attrs:{"rubric":_vm.rubric,"criterium":_vm.selectedCriterium,"data-connector":_vm.dataConnector},on:{"close":function($event){return _vm.selectCriterium(null)},"change-criterium":_vm.onChangeCriterium,"change-choice":_vm.onChangeChoice}}):_vm._e()],1),_c('remove-dialog',{attrs:{"remove-item":_vm.removeItem},on:{"remove":_vm.onRemoveItem,"cancel":_vm.hideRemoveDialog}})],1)
}
var ScoreRubricViewvue_type_template_id_1807b061_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/RubricPane.vue?vue&type=template&id=e26a1792
var RubricPanevue_type_template_id_e26a1792_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:"clusters-wrapper",class:{ 'is-split': _vm.showSplitView, 'category-dragging': _vm.categoryDragging },attrs:{"id":`clusters-wrapper-${_vm.id}`}},[_c('button',{staticClass:"btn-collapse",class:{ 'is-open': _vm.showClusters },on:{"click":_vm.toggleShowClusters}},[_c('i',{staticClass:"fa fa-institution"}),_c('span',[_vm._v(_vm._s(_vm.$t('subsections')))])]),_c('div',{staticClass:"clusters-collapse"},[_c('transition',{attrs:{"name":"clusters-slide"}},[_c('div',{key:_vm.showClusters ? 'open' : 'closed',staticClass:"clusters-view",class:{ 'no-drop': _vm.clusterDragging && _vm.bannedForDrop === `${_vm.id}_clusters`, 'is-closed': !_vm.showClusters, 'mod-separator': _vm.clusterActionsEnabled },style:('--num-clusters: ' + _vm.clusters.length),on:{"mouseover":function($event){return _vm.dragMouseOver(`${_vm.id}_clusters`)},"mouseout":_vm.dragMouseOut}},[(_vm.id === 'view1')?_c('split-view-button',{attrs:{"show-split-view":_vm.showSplitView},on:{"changed":function($event){return _vm.$emit('split-view-changed', $event)}}}):_vm._e(),_c('draggable',{staticClass:"b-clusters",class:{ 'cluster-dragging': _vm.clusterDragging },attrs:{"handle":".handle","disabled":_vm.draggableDisabled,"id":`${_vm.id}_clusters`,"tag":"ul","group":"clusters","ghost-class":"ghost","list":_vm.clusters,"forceFallback":true,"animation":250,"move":_vm.onMoveCluster},on:{"start":function($event){return _vm.startDrag($event, 'cluster')},"end":_vm.endDrag,"change":_vm.onChangeCluster}},_vm._l((_vm.clusters),function(cluster,index){return _c('cluster-view',{key:`${_vm.id}_${cluster.id}`,staticClass:"b-cluster-list-item",attrs:{"tag":"li","id":`${_vm.id}_${cluster.id}`,"cluster":cluster,"menu-actions-id":_vm.menuActionsId,"selected":_vm.isSelected(cluster)},on:{"cluster-selected":_vm.selectCluster,"item-actions":function($event){return _vm.$emit('item-actions', $event)},"remove":_vm.onRemove,"start-edit":function($event){return _vm.onStartEdit(cluster)},"finish-edit":function($event){return _vm.onFinishEdit(cluster, ...arguments)}}})}),1),_c('new-cluster',{staticClass:"rubric-actions",attrs:{"view-id":_vm.id,"actions-enabled":_vm.clusterActionsEnabled},on:{"dialog-view":function($event){return _vm.$emit('dialog-new-cluster', $event)},"cluster-added":_vm.addCluster}})],1)])],1),(_vm.selectedCluster)?_c('h1',{staticClass:"b-cluster-selected-title"},[_vm._v(_vm._s(_vm.selectedCluster.title))]):_vm._e(),_c('transition',{attrs:{"name":_vm.categoriesTransitionName,"mode":"out-in"}},[_c('div',{key:_vm.selectedCluster ? _vm.selectedCluster.id : 'none',ref:"cluster-content",staticClass:"cluster-content",class:{ 'no-drop': _vm.categoryDragging && _vm.bannedForDrop === `${_vm.id}_categories` },on:{"mouseover":function($event){_vm.categoryDragging && _vm.dragMouseOver(`${_vm.id}_categories`)},"mouseout":function($event){_vm.categoryDragging && _vm.dragMouseOut}}},[_c('draggable',{staticClass:"b-categories",attrs:{"disabled":_vm.draggableDisabled,"id":`${_vm.id}_categories`,"tag":"ul","group":"categories","handle":".category-handle","ghost-class":"ghost","list":_vm.categories,"forceFallback":true,"animation":250,"move":_vm.onMoveCategory},on:{"start":function($event){return _vm.startDrag($event, 'category')},"end":_vm.endDrag,"change":_vm.onChangeCategory}},[_vm._l((_vm.categories),function(category){return _c('li',{key:`${_vm.id}_${category.id}`,staticClass:"b-category",class:{ 'no-drop': _vm.criteriumDragging && _vm.bannedForDrop === `${_vm.id}_${category.id}` },style:({'--category-color': category.color}),attrs:{"id":`${_vm.id}_${category.id}`},on:{"mouseover":function($event){_vm.criteriumDragging && _vm.dragMouseOver(`${_vm.id}_${category.id}`)},"mouseout":function($event){_vm.criteriumDragging && _vm.dragMouseOut}}},[_c('category-view',{key:`${_vm.id}_${category.id}`,attrs:{"id":`${_vm.id}_${category.id}`,"category":category,"menu-actions-id":_vm.menuActionsId,"edit-category-color-id":_vm.editCategoryColorId},on:{"color-picker":function($event){return _vm.$emit('color-picker', $event)},"item-actions":function($event){return _vm.$emit('item-actions', $event)},"remove":_vm.onRemove,"start-edit":function($event){return _vm.onStartEdit(category)},"finish-edit":function($event){return _vm.onFinishEdit(category, ...arguments)},"change-color":function($event){return _vm.$emit('change-color', category)}}}),(category.criteria.length === 0 && !_vm.categoriesAddingCriterium[category.id] && !_vm.criteriumDragging)?_c('div',{staticClass:"criteria-empty-list"},[_vm._v(_vm._s(_vm.$t('no-criteria-yet')))]):_vm._e(),_c('draggable',{key:`${_vm.id}_${category.id}_draggable`,staticClass:"b-criteria",attrs:{"disabled":_vm.draggableDisabled,"tag":"ul","group":"criteria","handle":".criterium-handle","ghost-class":"ghost","swapTreshold":"0.75","list":category.criteria,"forceFallback":true,"animation":250,"move":_vm.onMoveCriterium},on:{"start":function($event){return _vm.startDrag($event,'criterium')},"end":_vm.endDrag,"change":function($event){return _vm.onChangeCriterium($event, category)}}},_vm._l((category.criteria),function(criterium){return _c('criterium-view',{key:`${_vm.id}_${criterium.id}`,staticClass:"b-criterium-list-item",attrs:{"tag":"li","id":`${_vm.id}_${criterium.id}`,"criterium":criterium,"menu-actions-id":_vm.menuActionsId,"selected":_vm.isSelected(criterium)},on:{"criterium-selected":_vm.selectCriterium,"item-actions":function($event){return _vm.$emit('item-actions', $event)},"remove":_vm.onRemove,"start-edit":function($event){return _vm.onStartEdit(criterium)},"finish-edit":function($event){return _vm.onFinishEdit(criterium, ...arguments)}}})}),1),_c('new-criterium',{staticClass:"category-actions",attrs:{"criterium-dragging":_vm.criteriumDragging},on:{"criterium-adding":function($event){return _vm.addingCriteriumForCategory(category, $event)},"criterium-added":function($event){return _vm.addCriterium(category, $event)}}})],1)}),(_vm.criteriumDragging)?_c('li',{staticClass:"b-category",attrs:{"slot":"footer"},slot:"footer"},[_c('div',{staticClass:"b-category-list-item mod-null-category-drag"},[_c('div',{staticClass:"item-header-bar mod-category"},[_c('div',{staticClass:"b-category-title-wrapper"},[_c('h2',{staticClass:"b-category-title mod-null-category-drag"},[_vm._v(_vm._s(_vm.$t('new-criteria-list'))+"...")])])])]),_c('draggable',{staticClass:"b-criteria",attrs:{"tag":"ul","group":"criteria","handle":".criterium-handle","ghost-class":"ghost","swapTreshold":"0.75","list":[],"forceFallback":true,"animation":250},on:{"end":_vm.endDrag,"change":_vm.onChangeCriteriumInCluster}})],1):(_vm.categories.length === 0)?_c('li',{staticClass:"b-category-drag-filler",attrs:{"slot":"footer"},slot:"footer"}):_vm._e()],2),(_vm.selectedCluster)?_c('new-category',{staticClass:"cluster-actions",attrs:{"view-id":_vm.id,"actions-enabled":_vm.categoryActionsEnabled},on:{"dialog-view":function($event){return _vm.$emit('dialog-new-category', $event)},"category-added":_vm.addCategory}}):_vm._e()],1)])],1)
}
var RubricPanevue_type_template_id_e26a1792_staticRenderFns = []


// EXTERNAL MODULE: ../../../../../../../../node_modules/vuedraggable/dist/vuedraggable.umd.js
var vuedraggable_umd = __webpack_require__(530);
var vuedraggable_umd_default = /*#__PURE__*/__webpack_require__.n(vuedraggable_umd);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/ClusterView.vue?vue&type=template&id=4e9cf7b7
var ClusterViewvue_type_template_id_4e9cf7b7_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c(_vm.tag,{tag:"component",attrs:{"id":_vm.id,"tabindex":"0"},on:{"keydown":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter"))return null;return _vm.$emit('cluster-selected', _vm.cluster)},"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"]))return null;return _vm.$emit('cluster-selected', _vm.cluster)},"click":function($event){$event.stopPropagation();return _vm.$emit('cluster-selected', _vm.cluster)}}},[_c('div',{staticClass:"b-cluster handle cluster-handle",class:{ 'is-selected': _vm.selected, 'is-menu-visible': _vm.showMenuActions },attrs:{"tabindex":"-1"}},[_c('div',{staticClass:"item-header-bar"},[_c('div',{staticClass:"b-cluster-title",attrs:{"title":_vm.cluster.title},on:{"dblclick":_vm.startEditing}},[_vm._v(" "+_vm._s(_vm.cluster.title)+" ")]),_c('button',{staticClass:"btn-toggle-menu mod-cluster",class:{'is-menu-visible': _vm.showMenuActions},attrs:{"aria-label":!_vm.showMenuActions && _vm.$t('open-menu'),"title":!_vm.showMenuActions && _vm.$t('open-menu')},on:{"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"]))return null;$event.stopPropagation();},"keydown":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter"))return null;$event.stopPropagation();},"click":function($event){$event.preventDefault();$event.stopPropagation();return _vm.onItemActions.apply(null, arguments)}}},[_c('i',{class:_vm.showMenuActions ? 'fa fa-close' : 'fa fa-ellipsis-h'})]),_c('div',{staticClass:"action-menu mod-cluster mod-menu-fixed",class:{'is-menu-visible': _vm.showMenuActions },style:({ left: `${_vm.menuX}px`, top: `${_vm.menuY}px`})},[_c('ul',{staticClass:"action-menu-list"},[_c('li',{staticClass:"action-menu-list-item",class:{ 'is-cluster-selected': _vm.selected },attrs:{"role":"button","tabindex":"0"},on:{"click":function($event){$event.stopPropagation();return _vm.startEditing.apply(null, arguments)},"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"])&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter"))return null;return _vm.startEditing.apply(null, arguments)}}},[_c('i',{staticClass:"action-menu-icon fa fa-pencil",attrs:{"aria-hidden":"true"}}),_c('span',{staticClass:"action-menu-text"},[_vm._v(_vm._s(_vm.$t('edit-title' )))])]),_c('li',{staticClass:"action-menu-list-item",class:{ 'is-cluster-selected': _vm.selected },attrs:{"role":"button","tabindex":"0"},on:{"click":function($event){$event.stopPropagation();return _vm.$emit('remove', _vm.cluster)},"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"])&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter"))return null;return _vm.$emit('remove', _vm.cluster)}}},[_c('i',{staticClass:"action-menu-icon fa fa-remove",attrs:{"aria-hidden":"true"}}),_c('span',{staticClass:"action-menu-text"},[_vm._v(_vm._s(_vm.$t('remove')))])])])])]),(_vm.isEditing)?_c('div',{staticClass:"edit-title"},[_c('div',{staticClass:"modal-bg",on:{"click":function($event){$event.stopPropagation();}}}),_c('name-input',{staticClass:"item-new mod-edit",attrs:{"ok-title":_vm.$t('edit'),"placeholder":_vm.$t('title-subsection')},on:{"ok":_vm.finishEditing,"cancel":_vm.cancel},model:{value:(_vm.newTitle),callback:function ($$v) {_vm.newTitle=$$v},expression:"newTitle"}})],1):_vm._e()])])
}
var ClusterViewvue_type_template_id_4e9cf7b7_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/NameInput.vue?vue&type=template&id=0f5131ec
var NameInputvue_type_template_id_0f5131ec_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:"name-input",on:{"click":function($event){$event.stopPropagation();}}},[_c('div',{staticClass:"name-input-title"},[_c('textarea',{ref:"name-input",staticClass:"name-input-field mod-textarea",attrs:{"placeholder":_vm.placeholder},domProps:{"value":_vm.value},on:{"keyup":[_vm.onChange,function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"esc",27,$event.key,["Esc","Escape"]))return null;return _vm.cancel.apply(null, arguments)}],"keydown":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter"))return null;$event.preventDefault();return _vm.ok.apply(null, arguments)},"input":_vm.onInput}})]),_c('div',{staticClass:"name-input-actions"},[_c('button',{staticClass:"btn-strong mod-confirm",attrs:{"disabled":!(_vm.allowEmpty || _vm.hasInput)},on:{"click":_vm.ok}},[_vm._v(_vm._s(_vm.okTitle || _vm.$t('ok')))]),_c('button',{staticClass:"btn-strong",on:{"click":_vm.cancel}},[_vm._v(_vm._s(_vm.cancelTitle || _vm.$t('cancel')))])])])
}
var NameInputvue_type_template_id_0f5131ec_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/NameInput.vue?vue&type=script&lang=ts


function updateHeight(elem) {
    elem.style.height = '';
    elem.style.height = `${elem.scrollHeight}px`;
}
let NameInput = class NameInput extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    placeholder;
    classname;
    value;
    okTitle;
    cancelTitle;
    allowEmpty;
    hasInput = false;
    ok() {
        if (!(this.hasInput || this.allowEmpty)) {
            return;
        }
        this.$emit('ok');
    }
    cancel() {
        this.$emit('cancel');
    }
    clearInput() {
        this.$emit('input', '');
        this.hasInput = false;
        if (this.$refs['name-input']) {
            this.$refs['name-input'].focus();
        }
    }
    onInput(event) {
        this.$emit('input', event.target.value);
        updateHeight(event.target);
    }
    onChange() {
        if (this.$refs['name-input']) {
            this.hasInput = this.$refs['name-input'].value !== '';
        }
    }
    mounted() {
        if (this.value) {
            this.hasInput = true;
        }
        if (this.$refs['name-input']) {
            this.$refs['name-input'].focus();
            if (this.value !== '') {
                updateHeight(this.$refs['name-input']);
            }
        }
    }
};
__decorate([
    Prop(),
    __metadata("design:type", String)
], NameInput.prototype, "placeholder", void 0);
__decorate([
    Prop(),
    __metadata("design:type", String)
], NameInput.prototype, "classname", void 0);
__decorate([
    Prop(),
    __metadata("design:type", String)
], NameInput.prototype, "value", void 0);
__decorate([
    Prop(),
    __metadata("design:type", String)
], NameInput.prototype, "okTitle", void 0);
__decorate([
    Prop(),
    __metadata("design:type", String)
], NameInput.prototype, "cancelTitle", void 0);
__decorate([
    Prop({ default: false }),
    __metadata("design:type", Boolean)
], NameInput.prototype, "allowEmpty", void 0);
NameInput = __decorate([
    vue_class_component_esm({
        name: 'name-input',
        components: {}
    })
], NameInput);
/* harmony default export */ var NameInputvue_type_script_lang_ts = (NameInput);

;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/NameInput.vue?vue&type=script&lang=ts
 /* harmony default export */ var Rubric_NameInputvue_type_script_lang_ts = (NameInputvue_type_script_lang_ts); 
// EXTERNAL MODULE: ../../../../../../../../node_modules/@intlify/vue-i18n-loader/lib/index.js!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/NameInput.vue?vue&type=custom&index=0&blockType=i18n
var NameInputvue_type_custom_index_0_blockType_i18n = __webpack_require__(437);
var NameInputvue_type_custom_index_0_blockType_i18n_default = /*#__PURE__*/__webpack_require__.n(NameInputvue_type_custom_index_0_blockType_i18n);
;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/NameInput.vue?vue&type=custom&index=0&blockType=i18n
 /* harmony default export */ var Rubric_NameInputvue_type_custom_index_0_blockType_i18n = ((NameInputvue_type_custom_index_0_blockType_i18n_default())); 
;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/NameInput.vue





/* normalize component */
;
var NameInput_component = normalizeComponent(
  Rubric_NameInputvue_type_script_lang_ts,
  NameInputvue_type_template_id_0f5131ec_render,
  NameInputvue_type_template_id_0f5131ec_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* custom blocks */
;
if (typeof Rubric_NameInputvue_type_custom_index_0_blockType_i18n === 'function') Rubric_NameInputvue_type_custom_index_0_blockType_i18n(NameInput_component)

/* harmony default export */ var Rubric_NameInput = (NameInput_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/ClusterView.vue?vue&type=script&lang=ts
var _a, _b;




let ClusterView = class ClusterView extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    isEditing = false;
    oldTitle = '';
    newTitle = '';
    menuX = 0;
    menuY = 0;
    tag;
    id;
    menuActionsId;
    selected;
    cluster;
    mounted() {
        this.resetTitle();
    }
    onItemActions(event) {
        this.$emit('item-actions', this.id);
        const rect = event.target.getBoundingClientRect();
        this.menuX = rect.x;
        this.menuY = rect.bottom + 36;
    }
    resetTitle() {
        this.newTitle = this.cluster.title;
    }
    get showMenuActions() {
        return this.menuActionsId === this.id;
    }
    startEditing() {
        // todo: dataConnector: how to deal with updates?
        this.isEditing = true;
        this.oldTitle = this.cluster.title;
        this.$emit('start-edit');
    }
    finishEditing(canceled = false) {
        this.$emit('finish-edit', this.newTitle, canceled);
        this.isEditing = false;
        this.oldTitle = '';
    }
    cancel() {
        this.cluster.title = this.oldTitle;
        this.finishEditing(true);
        this.resetTitle();
    }
    // Because mounted() only occurs once, and this component keeps its own state, we have to check if the title has changed through an external update.
    onTitleChanged() {
        this.resetTitle();
    }
};
__decorate([
    Prop({ type: String, default: 'div' }),
    __metadata("design:type", typeof (_a = typeof String !== "undefined" && String) === "function" ? _a : Object)
], ClusterView.prototype, "tag", void 0);
__decorate([
    Prop({ type: String, required: true }),
    __metadata("design:type", String)
], ClusterView.prototype, "id", void 0);
__decorate([
    Prop({ type: String, required: true }),
    __metadata("design:type", String)
], ClusterView.prototype, "menuActionsId", void 0);
__decorate([
    Prop({ type: Boolean, required: true }),
    __metadata("design:type", Boolean)
], ClusterView.prototype, "selected", void 0);
__decorate([
    Prop({ type: Cluster, required: true }),
    __metadata("design:type", typeof (_b = typeof Cluster !== "undefined" && Cluster) === "function" ? _b : Object)
], ClusterView.prototype, "cluster", void 0);
__decorate([
    Watch('cluster.title'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], ClusterView.prototype, "onTitleChanged", null);
ClusterView = __decorate([
    vue_class_component_esm({
        name: 'cluster-view',
        components: { NameInput: Rubric_NameInput }
    })
], ClusterView);
/* harmony default export */ var ClusterViewvue_type_script_lang_ts = (ClusterView);

;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/ClusterView.vue?vue&type=script&lang=ts
 /* harmony default export */ var Rubric_ClusterViewvue_type_script_lang_ts = (ClusterViewvue_type_script_lang_ts); 
// EXTERNAL MODULE: ../../../../../../../../node_modules/@intlify/vue-i18n-loader/lib/index.js!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/ClusterView.vue?vue&type=custom&index=0&blockType=i18n
var ClusterViewvue_type_custom_index_0_blockType_i18n = __webpack_require__(849);
var ClusterViewvue_type_custom_index_0_blockType_i18n_default = /*#__PURE__*/__webpack_require__.n(ClusterViewvue_type_custom_index_0_blockType_i18n);
;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/ClusterView.vue?vue&type=custom&index=0&blockType=i18n
 /* harmony default export */ var Rubric_ClusterViewvue_type_custom_index_0_blockType_i18n = ((ClusterViewvue_type_custom_index_0_blockType_i18n_default())); 
;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/ClusterView.vue





/* normalize component */
;
var ClusterView_component = normalizeComponent(
  Rubric_ClusterViewvue_type_script_lang_ts,
  ClusterViewvue_type_template_id_4e9cf7b7_render,
  ClusterViewvue_type_template_id_4e9cf7b7_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* custom blocks */
;
if (typeof Rubric_ClusterViewvue_type_custom_index_0_blockType_i18n === 'function') Rubric_ClusterViewvue_type_custom_index_0_blockType_i18n(ClusterView_component)

/* harmony default export */ var Rubric_ClusterView = (ClusterView_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/CategoryView.vue?vue&type=template&id=2fefe528
var CategoryViewvue_type_template_id_2fefe528_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:"b-category-list-item handle category-handle",class:{ 'mod-null-category': !_vm.category.title },attrs:{"id":_vm.id}},[_c('div',{staticClass:"item-header-bar mod-category"},[(_vm.category.title)?_c('button',{staticClass:"btn-category-color",class:{ 'xvue-swatches__diagonal': _vm.category.color === '' },style:({'background-color': _vm.category.color || null}),attrs:{"aria-label":_vm.$t('color-picker'),"title":_vm.$t('color-picker'),"aria-expanded":_vm.isColorPickerOpened ? 'true' : 'false',"aria-controls":_vm.id + '--swatches'},on:{"click":function($event){return _vm.openColorPickerForCategory(_vm.category)}}}):_vm._e(),_c('div',{staticClass:"b-category-header-wrapper",class:{ 'mod-null-category': !_vm.category.title }},[(_vm.isColorPickerOpened)?_c('swatches',{attrs:{"id":_vm.id + '--swatches',"swatches":_vm.swatchColors,"background-color":"transparent","show-border":"","swatch-size":"20","inline":""},on:{"input":_vm.closeColorPicker},model:{value:(_vm.category.color),callback:function ($$v) {_vm.$set(_vm.category, "color", $$v)},expression:"category.color"}}):_vm._e(),_c('h2',{staticClass:"b-category-title",class:{ 'mod-null-category': !_vm.category.title },on:{"dblclick":function($event){$event.stopPropagation();return _vm.startEditing.apply(null, arguments)}}},[_vm._v(_vm._s(_vm.category.title || _vm.$t('list-of-criteria')))])],1),_c('button',{staticClass:"btn-toggle-menu mod-category",class:{'is-menu-visible': _vm.showMenuActions},attrs:{"aria-label":!_vm.showMenuActions && _vm.$t('open-menu'),"title":!_vm.showMenuActions && _vm.$t('open-menu')},on:{"click":function($event){$event.stopPropagation();return _vm.$emit('item-actions', _vm.id)}}},[_c('i',{class:_vm.showMenuActions ? 'fa fa-close' : 'fa fa-ellipsis-h'})]),_c('div',{staticClass:"action-menu mod-category",class:{'is-menu-visible': _vm.showMenuActions}},[_c('ul',{staticClass:"action-menu-list"},[_c('li',{staticClass:"action-menu-list-item",attrs:{"tabindex":"0"},on:{"click":function($event){$event.stopPropagation();return _vm.startEditing.apply(null, arguments)},"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"])&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter"))return null;return _vm.startEditing.apply(null, arguments)}}},[_c('i',{staticClass:"action-menu-icon fa fa-pencil"}),_c('span',{staticClass:"action-menu-text"},[_vm._v(_vm._s(_vm.category.title ? _vm.$t('edit-title') : _vm.$t('change-into-category')))])]),_c('li',{staticClass:"action-menu-list-item",attrs:{"tabindex":"0"},on:{"click":function($event){$event.stopPropagation();return _vm.$emit('remove', _vm.category)},"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"])&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter"))return null;return _vm.$emit('remove', _vm.category)}}},[_c('i',{staticClass:"action-menu-icon fa fa-remove"}),_c('span',{staticClass:"action-menu-text"},[_vm._v(_vm._s(_vm.$t('remove')))])])])])]),(_vm.isEditing)?_c('div',{staticClass:"edit-title"},[_c('div',{staticClass:"modal-bg"}),_c('name-input',{staticClass:"item-new mod-edit",attrs:{"ok-title":_vm.$t('edit'),"allow-empty":"true","placeholder":_vm.$t('title-category')},on:{"ok":_vm.finishEditing,"cancel":_vm.cancel},model:{value:(_vm.newTitle),callback:function ($$v) {_vm.newTitle=$$v},expression:"newTitle"}})],1):_vm._e()])
}
var CategoryViewvue_type_template_id_2fefe528_staticRenderFns = []


// EXTERNAL MODULE: external "vue-swatches"
var external_vue_swatches_ = __webpack_require__(897);
var external_vue_swatches_default = /*#__PURE__*/__webpack_require__.n(external_vue_swatches_);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/CategoryView.vue?vue&type=script&lang=ts
var CategoryViewvue_type_script_lang_ts_a;





let CategoryView = class CategoryView extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    isEditing = false;
    oldTitle = '';
    newTitle = '';
    // Color palette generated with http://medialab.github.io/iwanthue/
    swatchColors = ['', '#000000', '#5e318e', '#bd002f', '#b10099', '#1c5ce2', '#00943e', '#0182ed', '#fddf00', '#ff2b84', '#e76f01', '#c58d00', '#ff9385', '#b7aaff', '#a4c592', '#56e9c2'];
    id;
    menuActionsId;
    editCategoryColorId;
    category;
    mounted() {
        this.resetTitle();
    }
    resetTitle() {
        this.newTitle = this.category.title;
    }
    get showMenuActions() {
        return this.menuActionsId === this.id;
    }
    openColorPickerForCategory(category) {
        const id = category ? this.id : '';
        this.$emit('color-picker', this.editCategoryColorId !== id ? id : '');
    }
    get isColorPickerOpened() {
        if (this.editCategoryColorId === '') {
            return false;
        }
        return this.id === this.editCategoryColorId;
    }
    closeColorPicker() {
        window.setTimeout(() => this.openColorPickerForCategory(null), 400);
    }
    startEditing() {
        this.isEditing = true;
        this.oldTitle = this.category.title;
        this.$emit('start-edit');
    }
    finishEditing(canceled = false) {
        this.isEditing = false;
        this.oldTitle = '';
        this.$emit('finish-edit', this.newTitle, canceled);
    }
    cancel() {
        this.category.title = this.oldTitle;
        this.finishEditing(true);
        this.resetTitle();
    }
    // Because mounted() only occurs once, and this component keeps its own state, we have to check if the title has changed through an external update.
    onTitleChanged() {
        this.resetTitle();
    }
    onColorChanged() {
        this.$emit('change-color');
    }
};
__decorate([
    Prop({ type: String, required: true }),
    __metadata("design:type", String)
], CategoryView.prototype, "id", void 0);
__decorate([
    Prop({ type: String, required: true }),
    __metadata("design:type", String)
], CategoryView.prototype, "menuActionsId", void 0);
__decorate([
    Prop({ type: String, required: true }),
    __metadata("design:type", String)
], CategoryView.prototype, "editCategoryColorId", void 0);
__decorate([
    Prop({ type: Category, required: true }),
    __metadata("design:type", typeof (CategoryViewvue_type_script_lang_ts_a = typeof Category !== "undefined" && Category) === "function" ? CategoryViewvue_type_script_lang_ts_a : Object)
], CategoryView.prototype, "category", void 0);
__decorate([
    Watch('category.title'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], CategoryView.prototype, "onTitleChanged", null);
__decorate([
    Watch('category.color'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], CategoryView.prototype, "onColorChanged", null);
CategoryView = __decorate([
    vue_class_component_esm({
        name: 'category-view',
        components: { NameInput: Rubric_NameInput, Swatches: (external_vue_swatches_default()) }
    })
], CategoryView);
/* harmony default export */ var CategoryViewvue_type_script_lang_ts = (CategoryView);

;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/CategoryView.vue?vue&type=script&lang=ts
 /* harmony default export */ var Rubric_CategoryViewvue_type_script_lang_ts = (CategoryViewvue_type_script_lang_ts); 
// EXTERNAL MODULE: ../../../../../../../../node_modules/@intlify/vue-i18n-loader/lib/index.js!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/CategoryView.vue?vue&type=custom&index=0&blockType=i18n
var CategoryViewvue_type_custom_index_0_blockType_i18n = __webpack_require__(445);
var CategoryViewvue_type_custom_index_0_blockType_i18n_default = /*#__PURE__*/__webpack_require__.n(CategoryViewvue_type_custom_index_0_blockType_i18n);
;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/CategoryView.vue?vue&type=custom&index=0&blockType=i18n
 /* harmony default export */ var Rubric_CategoryViewvue_type_custom_index_0_blockType_i18n = ((CategoryViewvue_type_custom_index_0_blockType_i18n_default())); 
;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/CategoryView.vue





/* normalize component */
;
var CategoryView_component = normalizeComponent(
  Rubric_CategoryViewvue_type_script_lang_ts,
  CategoryViewvue_type_template_id_2fefe528_render,
  CategoryViewvue_type_template_id_2fefe528_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* custom blocks */
;
if (typeof Rubric_CategoryViewvue_type_custom_index_0_blockType_i18n === 'function') Rubric_CategoryViewvue_type_custom_index_0_blockType_i18n(CategoryView_component)

/* harmony default export */ var Rubric_CategoryView = (CategoryView_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/CriteriumView.vue?vue&type=template&id=8d77b3ee
var CriteriumViewvue_type_template_id_8d77b3ee_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c(_vm.tag,{tag:"component",staticClass:"handle criterium-handle",attrs:{"id":_vm.id}},[_c('div',{staticClass:"b-criterium",class:{ 'is-selected': _vm.selected }},[_c('div',{staticClass:"item-header-bar mod-criterium"},[_c('div',{staticClass:"b-criterium-title-wrapper",attrs:{"tabindex":"0"},on:{"click":function($event){return _vm.$emit('criterium-selected', _vm.criterium)},"dblclick":function($event){$event.stopPropagation();return _vm.startEditing.apply(null, arguments)},"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"])&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter"))return null;return _vm.$emit('criterium-selected', _vm.criterium)}}},[_c('h3',{staticClass:"b-criterium-title u-markdown-criterium",attrs:{"tabindex":"-1"},domProps:{"innerHTML":_vm._s(_vm.criterium.toMarkdown())}})]),_c('button',{staticClass:"btn-toggle-menu mod-criterium",class:{'is-menu-visible': _vm.showMenuActions},attrs:{"aria-label":!_vm.showMenuActions && _vm.$t('open-menu'),"title":!_vm.showMenuActions && _vm.$t('open-menu')},on:{"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"]))return null;$event.stopPropagation();},"keydown":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter"))return null;$event.stopPropagation();},"click":function($event){$event.stopPropagation();return _vm.$emit('item-actions', _vm.id)}}},[_c('i',{class:_vm.showMenuActions ? 'fa fa-close' : 'fa fa-ellipsis-h'})]),_c('div',{staticClass:"action-menu mod-criterium",class:{'is-menu-visible': _vm.showMenuActions}},[_c('ul',{staticClass:"action-menu-list"},[_c('li',{staticClass:"action-menu-list-item menu-list-item-details",attrs:{"tabindex":"0"},on:{"click":function($event){return _vm.$emit('criterium-selected', _vm.criterium)},"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"])&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter"))return null;return _vm.$emit('criterium-selected', _vm.criterium)}}},[_c('i',{staticClass:"action-menu-icon fa fa-search"}),_c('span',{staticClass:"action-menu-text"},[_vm._v(_vm._s(_vm.$t('details')))])]),_c('li',{staticClass:"action-menu-list-item",attrs:{"tabindex":"0"},on:{"click":function($event){$event.stopPropagation();return _vm.startEditing.apply(null, arguments)},"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"])&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter"))return null;return _vm.startEditing.apply(null, arguments)}}},[_c('i',{staticClass:"action-menu-icon fa fa-pencil"}),_c('span',{staticClass:"action-menu-text"},[_vm._v(_vm._s(_vm.$t('edit-title')))])]),_c('li',{staticClass:"action-menu-list-item",attrs:{"tabindex":"0"},on:{"click":function($event){$event.stopPropagation();return _vm.$emit('remove', _vm.criterium)},"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"])&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter"))return null;return _vm.$emit('remove', _vm.criterium)}}},[_c('i',{staticClass:"action-menu-icon fa fa-remove"}),_c('span',{staticClass:"action-menu-text"},[_vm._v(_vm._s(_vm.$t('remove')))])])])])]),(_vm.isEditing)?_c('div',{staticClass:"edit-title"},[_c('div',{staticClass:"modal-bg"}),_c('name-input',{staticClass:"item-new mod-edit",attrs:{"ok-title":_vm.$t('edit'),"placeholder":_vm.$t('title-criterium')},on:{"ok":_vm.finishEditing,"cancel":_vm.cancel},model:{value:(_vm.newTitle),callback:function ($$v) {_vm.newTitle=$$v},expression:"newTitle"}})],1):_vm._e()])])
}
var CriteriumViewvue_type_template_id_8d77b3ee_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/CriteriumView.vue?vue&type=script&lang=ts
var CriteriumViewvue_type_script_lang_ts_a, CriteriumViewvue_type_script_lang_ts_b;




let CriteriumView = class CriteriumView extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    isEditing = false;
    oldTitle = '';
    newTitle = '';
    id;
    tag;
    menuActionsId;
    selected;
    criterium;
    mounted() {
        this.resetTitle();
    }
    resetTitle() {
        this.newTitle = this.criterium.title;
    }
    get showMenuActions() {
        return this.menuActionsId === this.id;
    }
    startEditing() {
        // todo: dataConnector: how to deal with updates?
        this.isEditing = true;
        this.oldTitle = this.criterium.title;
        this.$emit('start-edit');
    }
    finishEditing(canceled = false) {
        this.isEditing = false;
        this.oldTitle = '';
        this.$emit('finish-edit', this.newTitle, canceled);
    }
    cancel() {
        this.criterium.title = this.oldTitle;
        this.finishEditing(true);
        this.resetTitle();
    }
    // Because mounted() only occurs once, and this component keeps its own state, we have to check if the title has changed through an external update.
    onTitleChanged() {
        this.resetTitle();
    }
};
__decorate([
    Prop({ type: String, required: true }),
    __metadata("design:type", String)
], CriteriumView.prototype, "id", void 0);
__decorate([
    Prop({ type: String, default: 'div' }),
    __metadata("design:type", typeof (CriteriumViewvue_type_script_lang_ts_a = typeof String !== "undefined" && String) === "function" ? CriteriumViewvue_type_script_lang_ts_a : Object)
], CriteriumView.prototype, "tag", void 0);
__decorate([
    Prop({ type: String, required: true }),
    __metadata("design:type", String)
], CriteriumView.prototype, "menuActionsId", void 0);
__decorate([
    Prop({ type: Boolean, required: true }),
    __metadata("design:type", Boolean)
], CriteriumView.prototype, "selected", void 0);
__decorate([
    Prop({ type: Criterium, required: true }),
    __metadata("design:type", typeof (CriteriumViewvue_type_script_lang_ts_b = typeof Criterium !== "undefined" && Criterium) === "function" ? CriteriumViewvue_type_script_lang_ts_b : Object)
], CriteriumView.prototype, "criterium", void 0);
__decorate([
    Watch('criterium.title'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], CriteriumView.prototype, "onTitleChanged", null);
CriteriumView = __decorate([
    vue_class_component_esm({
        name: 'criterium-view',
        components: { NameInput: Rubric_NameInput }
    })
], CriteriumView);
/* harmony default export */ var CriteriumViewvue_type_script_lang_ts = (CriteriumView);

;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/CriteriumView.vue?vue&type=script&lang=ts
 /* harmony default export */ var Rubric_CriteriumViewvue_type_script_lang_ts = (CriteriumViewvue_type_script_lang_ts); 
// EXTERNAL MODULE: ../../../../../../../../node_modules/@intlify/vue-i18n-loader/lib/index.js!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/CriteriumView.vue?vue&type=custom&index=0&blockType=i18n
var CriteriumViewvue_type_custom_index_0_blockType_i18n = __webpack_require__(652);
var CriteriumViewvue_type_custom_index_0_blockType_i18n_default = /*#__PURE__*/__webpack_require__.n(CriteriumViewvue_type_custom_index_0_blockType_i18n);
;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/CriteriumView.vue?vue&type=custom&index=0&blockType=i18n
 /* harmony default export */ var Rubric_CriteriumViewvue_type_custom_index_0_blockType_i18n = ((CriteriumViewvue_type_custom_index_0_blockType_i18n_default())); 
;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/CriteriumView.vue





/* normalize component */
;
var CriteriumView_component = normalizeComponent(
  Rubric_CriteriumViewvue_type_script_lang_ts,
  CriteriumViewvue_type_template_id_8d77b3ee_render,
  CriteriumViewvue_type_template_id_8d77b3ee_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* custom blocks */
;
if (typeof Rubric_CriteriumViewvue_type_custom_index_0_blockType_i18n === 'function') Rubric_CriteriumViewvue_type_custom_index_0_blockType_i18n(CriteriumView_component)

/* harmony default export */ var Rubric_CriteriumView = (CriteriumView_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/NewCluster.vue?vue&type=template&id=ebb23266
var NewClustervue_type_template_id_ebb23266_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:"actions",class:{'is-open': _vm.inputFormShown}},[(_vm.inputFormShown)?_c('div',[_c('name-input',{staticClass:"cluster-new item-new",attrs:{"ok-title":_vm.$t('add'),"placeholder":_vm.$t('title-new-subsection')},on:{"ok":_vm.addNewCluster,"cancel":_vm.cancel},model:{value:(_vm.newCluster.title),callback:function ($$v) {_vm.$set(_vm.newCluster, "title", $$v)},expression:"newCluster.title"}})],1):_c('button',{staticClass:"btn-new",attrs:{"disabled":!_vm.actionsEnabled},on:{"keydown":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter"))return null;return _vm.blockEnterUp.apply(null, arguments)},"click":_vm.createNewCluster}},[_vm._v(_vm._s(_vm.$t('add-subsection')))])])
}
var NewClustervue_type_template_id_ebb23266_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/NewCluster.vue?vue&type=script&lang=ts




let NewCluster = class NewCluster extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    newCluster = null;
    blockKeyUpEnter = false;
    viewId;
    actionsEnabled;
    get inputFormShown() {
        return this.newCluster !== null;
    }
    createNewCluster() {
        this.newCluster = new Cluster();
        this.emit(this.viewId);
    }
    blockEnterUp() {
        this.blockKeyUpEnter = true;
    }
    checkAndReleaseBlockEnterUp() {
        if (this.blockKeyUpEnter) {
            this.blockKeyUpEnter = false;
            return true;
        }
        return false;
    }
    addNewCluster() {
        if (this.checkAndReleaseBlockEnterUp()) {
            return;
        }
        this.$emit('cluster-added', this.newCluster);
        this.cancel();
    }
    cancel() {
        this.newCluster = null;
        this.emit('');
    }
    emit(value) {
        if (this.viewId !== null) {
            this.$emit('dialog-view', value);
        }
    }
};
__decorate([
    Prop({ type: String, default: null }),
    __metadata("design:type", Object)
], NewCluster.prototype, "viewId", void 0);
__decorate([
    Prop({ type: Boolean, default: true }),
    __metadata("design:type", Boolean)
], NewCluster.prototype, "actionsEnabled", void 0);
NewCluster = __decorate([
    vue_class_component_esm({
        name: 'new-cluster',
        components: { NameInput: Rubric_NameInput }
    })
], NewCluster);
/* harmony default export */ var NewClustervue_type_script_lang_ts = (NewCluster);

;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/NewCluster.vue?vue&type=script&lang=ts
 /* harmony default export */ var Rubric_NewClustervue_type_script_lang_ts = (NewClustervue_type_script_lang_ts); 
// EXTERNAL MODULE: ../../../../../../../../node_modules/@intlify/vue-i18n-loader/lib/index.js!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/NewCluster.vue?vue&type=custom&index=0&blockType=i18n
var NewClustervue_type_custom_index_0_blockType_i18n = __webpack_require__(478);
var NewClustervue_type_custom_index_0_blockType_i18n_default = /*#__PURE__*/__webpack_require__.n(NewClustervue_type_custom_index_0_blockType_i18n);
;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/NewCluster.vue?vue&type=custom&index=0&blockType=i18n
 /* harmony default export */ var Rubric_NewClustervue_type_custom_index_0_blockType_i18n = ((NewClustervue_type_custom_index_0_blockType_i18n_default())); 
;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/NewCluster.vue





/* normalize component */
;
var NewCluster_component = normalizeComponent(
  Rubric_NewClustervue_type_script_lang_ts,
  NewClustervue_type_template_id_ebb23266_render,
  NewClustervue_type_template_id_ebb23266_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* custom blocks */
;
if (typeof Rubric_NewClustervue_type_custom_index_0_blockType_i18n === 'function') Rubric_NewClustervue_type_custom_index_0_blockType_i18n(NewCluster_component)

/* harmony default export */ var Rubric_NewCluster = (NewCluster_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/NewCategory.vue?vue&type=template&id=e1ef2ae4
var NewCategoryvue_type_template_id_e1ef2ae4_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return (_vm.inputFormShown)?_c('div',{staticClass:"category-name-input"},[_c('name-input',{staticClass:"category-new item-new",attrs:{"ok-title":_vm.$t('add'),"placeholder":_vm.$t('title-new-category')},on:{"ok":_vm.addNewCategory,"cancel":_vm.cancel},model:{value:(_vm.newCategory.title),callback:function ($$v) {_vm.$set(_vm.newCategory, "title", $$v)},expression:"newCategory.title"}})],1):_c('div',{staticClass:"actions"},[_c('button',{staticClass:"btn-new mod-category-add",attrs:{"disabled":!_vm.actionsEnabled},on:{"keydown":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter"))return null;return _vm.blockEnterUp.apply(null, arguments)},"click":_vm.createNewCategory}},[_vm._v(_vm._s(_vm.$t('add-category')))])])
}
var NewCategoryvue_type_template_id_e1ef2ae4_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/NewCategory.vue?vue&type=script&lang=ts




let NewCategory = class NewCategory extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    newCategory = null;
    blockKeyUpEnter = false;
    viewId;
    actionsEnabled;
    get inputFormShown() {
        return this.newCategory !== null;
    }
    createNewCategory() {
        this.newCategory = new Category();
        this.newCategory.color = '';
        this.emit(this.viewId);
    }
    blockEnterUp() {
        this.blockKeyUpEnter = true;
    }
    checkAndReleaseBlockEnterUp() {
        if (this.blockKeyUpEnter) {
            this.blockKeyUpEnter = false;
            return true;
        }
        return false;
    }
    addNewCategory() {
        if (this.checkAndReleaseBlockEnterUp()) {
            return;
        }
        this.$emit('category-added', this.newCategory);
        this.cancel();
    }
    cancel() {
        this.newCategory = null;
        this.emit('');
    }
    emit(value) {
        if (this.viewId !== null) {
            this.$emit('dialog-view', value);
        }
    }
};
__decorate([
    Prop({ type: String, default: null }),
    __metadata("design:type", Object)
], NewCategory.prototype, "viewId", void 0);
__decorate([
    Prop({ type: Boolean, default: true }),
    __metadata("design:type", Boolean)
], NewCategory.prototype, "actionsEnabled", void 0);
NewCategory = __decorate([
    vue_class_component_esm({
        name: 'new-category',
        components: { NameInput: Rubric_NameInput }
    })
], NewCategory);
/* harmony default export */ var NewCategoryvue_type_script_lang_ts = (NewCategory);

;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/NewCategory.vue?vue&type=script&lang=ts
 /* harmony default export */ var Rubric_NewCategoryvue_type_script_lang_ts = (NewCategoryvue_type_script_lang_ts); 
// EXTERNAL MODULE: ../../../../../../../../node_modules/@intlify/vue-i18n-loader/lib/index.js!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/NewCategory.vue?vue&type=custom&index=0&blockType=i18n
var NewCategoryvue_type_custom_index_0_blockType_i18n = __webpack_require__(917);
var NewCategoryvue_type_custom_index_0_blockType_i18n_default = /*#__PURE__*/__webpack_require__.n(NewCategoryvue_type_custom_index_0_blockType_i18n);
;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/NewCategory.vue?vue&type=custom&index=0&blockType=i18n
 /* harmony default export */ var Rubric_NewCategoryvue_type_custom_index_0_blockType_i18n = ((NewCategoryvue_type_custom_index_0_blockType_i18n_default())); 
;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/NewCategory.vue





/* normalize component */
;
var NewCategory_component = normalizeComponent(
  Rubric_NewCategoryvue_type_script_lang_ts,
  NewCategoryvue_type_template_id_e1ef2ae4_render,
  NewCategoryvue_type_template_id_e1ef2ae4_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* custom blocks */
;
if (typeof Rubric_NewCategoryvue_type_custom_index_0_blockType_i18n === 'function') Rubric_NewCategoryvue_type_custom_index_0_blockType_i18n(NewCategory_component)

/* harmony default export */ var Rubric_NewCategory = (NewCategory_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/NewCriterium.vue?vue&type=template&id=244e6f92
var NewCriteriumvue_type_template_id_244e6f92_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return (_vm.inputFormShown)?_c('div',[_c('name-input',{ref:"name-input",staticClass:"criterium-new item-new",attrs:{"ok-title":_vm.$t('add'),"placeholder":_vm.$t('title-new-criterium')},on:{"ok":_vm.addNewCriterium,"cancel":_vm.cancel},model:{value:(_vm.newCriterium.title),callback:function ($$v) {_vm.$set(_vm.newCriterium, "title", $$v)},expression:"newCriterium.title"}})],1):_c('div',{staticClass:"actions",class:{criteriumDragging: _vm.criteriumDragging}},[_c('button',{staticClass:"btn-new",attrs:{"disabled":!_vm.actionsEnabled},on:{"keydown":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter"))return null;return _vm.blockEnterUp.apply(null, arguments)},"click":_vm.createNewCriterium}},[_vm._v(_vm._s(_vm.$t('add-criterium')))])])
}
var NewCriteriumvue_type_template_id_244e6f92_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/NewCriterium.vue?vue&type=script&lang=ts




let NewCriterium = class NewCriterium extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    newCriterium = null;
    blockKeyUpEnter = false;
    criteriumDragging;
    actionsEnabled;
    get inputFormShown() {
        return this.newCriterium !== null;
    }
    createNewCriterium() {
        this.newCriterium = new Criterium();
        this.$emit('criterium-adding', true);
    }
    blockEnterUp() {
        this.blockKeyUpEnter = true;
    }
    checkAndReleaseBlockEnterUp() {
        if (this.blockKeyUpEnter) {
            this.blockKeyUpEnter = false;
            return true;
        }
        return false;
    }
    addNewCriterium() {
        if (this.checkAndReleaseBlockEnterUp()) {
            return;
        }
        this.$emit('criterium-added', this.newCriterium);
        this.$emit('criterium-adding', false);
        this.createNewCriterium();
    }
    cancel() {
        this.newCriterium = null;
        this.$emit('criterium-adding', false);
    }
    newCriteriumChanged() {
        this.$nextTick(() => {
            if (this.inputFormShown) {
                const nameInput = this.$refs['name-input'].$el;
                if (nameInput.scrollIntoViewIfNeeded) {
                    nameInput.scrollIntoViewIfNeeded();
                }
                else {
                    nameInput.scrollIntoView();
                }
            }
        });
    }
};
__decorate([
    Prop({ type: Boolean, default: false }),
    __metadata("design:type", Boolean)
], NewCriterium.prototype, "criteriumDragging", void 0);
__decorate([
    Prop({ type: Boolean, default: true }),
    __metadata("design:type", Boolean)
], NewCriterium.prototype, "actionsEnabled", void 0);
__decorate([
    Watch('newCriterium'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], NewCriterium.prototype, "newCriteriumChanged", null);
NewCriterium = __decorate([
    vue_class_component_esm({
        name: 'new-criterium',
        components: { NameInput: Rubric_NameInput }
    })
], NewCriterium);
/* harmony default export */ var NewCriteriumvue_type_script_lang_ts = (NewCriterium);

;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/NewCriterium.vue?vue&type=script&lang=ts
 /* harmony default export */ var Rubric_NewCriteriumvue_type_script_lang_ts = (NewCriteriumvue_type_script_lang_ts); 
// EXTERNAL MODULE: ../../../../../../../../node_modules/@intlify/vue-i18n-loader/lib/index.js!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/NewCriterium.vue?vue&type=custom&index=0&blockType=i18n
var NewCriteriumvue_type_custom_index_0_blockType_i18n = __webpack_require__(653);
var NewCriteriumvue_type_custom_index_0_blockType_i18n_default = /*#__PURE__*/__webpack_require__.n(NewCriteriumvue_type_custom_index_0_blockType_i18n);
;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/NewCriterium.vue?vue&type=custom&index=0&blockType=i18n
 /* harmony default export */ var Rubric_NewCriteriumvue_type_custom_index_0_blockType_i18n = ((NewCriteriumvue_type_custom_index_0_blockType_i18n_default())); 
;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/NewCriterium.vue





/* normalize component */
;
var NewCriterium_component = normalizeComponent(
  Rubric_NewCriteriumvue_type_script_lang_ts,
  NewCriteriumvue_type_template_id_244e6f92_render,
  NewCriteriumvue_type_template_id_244e6f92_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* custom blocks */
;
if (typeof Rubric_NewCriteriumvue_type_custom_index_0_blockType_i18n === 'function') Rubric_NewCriteriumvue_type_custom_index_0_blockType_i18n(NewCriterium_component)

/* harmony default export */ var Rubric_NewCriterium = (NewCriterium_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/SplitViewButton.vue?vue&type=template&id=21e06a52
var SplitViewButtonvue_type_template_id_21e06a52_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('button',{staticClass:"btn-show-split-view",class:{ checked: _vm.showSplitView },attrs:{"title":_vm.$t('split-view'),"aria-hidden":"true"},on:{"click":function($event){$event.preventDefault();return _vm.$emit('changed', !_vm.showSplitView)}}},[_c('svg',{staticClass:"svg show-split-view",attrs:{"tabindex":"-1","viewBox":"-50 -50 100 100"}},[_c('path',{attrs:{"id":"path-1","d":"M-40 -39 L40 -39 L40 -9 L-40 -9Z"}}),_c('path',{attrs:{"id":"path-2","d":"M-40 9L40 9L40 39L-40 39Z"}})])])
}
var SplitViewButtonvue_type_template_id_21e06a52_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/SplitViewButton.vue?vue&type=script&lang=ts


let SplitViewButton = class SplitViewButton extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    showSplitView;
};
__decorate([
    Prop({ type: Boolean, required: true }),
    __metadata("design:type", Boolean)
], SplitViewButton.prototype, "showSplitView", void 0);
SplitViewButton = __decorate([
    vue_class_component_esm({
        name: 'split-view-button'
    })
], SplitViewButton);
/* harmony default export */ var SplitViewButtonvue_type_script_lang_ts = (SplitViewButton);

;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/SplitViewButton.vue?vue&type=script&lang=ts
 /* harmony default export */ var Rubric_SplitViewButtonvue_type_script_lang_ts = (SplitViewButtonvue_type_script_lang_ts); 
;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-66.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-66.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-66.use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-66.use[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/SplitViewButton.vue?vue&type=style&index=0&id=21e06a52&prod&lang=scss
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/SplitViewButton.vue?vue&type=style&index=0&id=21e06a52&prod&lang=scss

// EXTERNAL MODULE: ../../../../../../../../node_modules/@intlify/vue-i18n-loader/lib/index.js!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/SplitViewButton.vue?vue&type=custom&index=0&blockType=i18n
var SplitViewButtonvue_type_custom_index_0_blockType_i18n = __webpack_require__(236);
var SplitViewButtonvue_type_custom_index_0_blockType_i18n_default = /*#__PURE__*/__webpack_require__.n(SplitViewButtonvue_type_custom_index_0_blockType_i18n);
;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/SplitViewButton.vue?vue&type=custom&index=0&blockType=i18n
 /* harmony default export */ var Rubric_SplitViewButtonvue_type_custom_index_0_blockType_i18n = ((SplitViewButtonvue_type_custom_index_0_blockType_i18n_default())); 
;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/SplitViewButton.vue



;


/* normalize component */

var SplitViewButton_component = normalizeComponent(
  Rubric_SplitViewButtonvue_type_script_lang_ts,
  SplitViewButtonvue_type_template_id_21e06a52_render,
  SplitViewButtonvue_type_template_id_21e06a52_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* custom blocks */
;
if (typeof Rubric_SplitViewButtonvue_type_custom_index_0_blockType_i18n === 'function') Rubric_SplitViewButtonvue_type_custom_index_0_blockType_i18n(SplitViewButton_component)

/* harmony default export */ var Rubric_SplitViewButton = (SplitViewButton_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/helpers/bind.js


function bind(fn, thisArg) {
  return function wrap() {
    return fn.apply(thisArg, arguments);
  };
}

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/utils.js




// utils is a library of generic helper functions non-specific to axios

const {toString: utils_toString} = Object.prototype;
const {getPrototypeOf} = Object;

const kindOf = (cache => thing => {
    const str = utils_toString.call(thing);
    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
})(Object.create(null));

const kindOfTest = (type) => {
  type = type.toLowerCase();
  return (thing) => kindOf(thing) === type
}

const typeOfTest = type => thing => typeof thing === type;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 *
 * @returns {boolean} True if value is an Array, otherwise false
 */
const {isArray} = Array;

/**
 * Determine if a value is undefined
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if the value is undefined, otherwise false
 */
const isUndefined = typeOfTest('undefined');

/**
 * Determine if a value is a Buffer
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Buffer, otherwise false
 */
function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)
    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
const isArrayBuffer = kindOfTest('ArrayBuffer');


/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  let result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a String, otherwise false
 */
const isString = typeOfTest('string');

/**
 * Determine if a value is a Function
 *
 * @param {*} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
const isFunction = typeOfTest('function');

/**
 * Determine if a value is a Number
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Number, otherwise false
 */
const isNumber = typeOfTest('number');

/**
 * Determine if a value is an Object
 *
 * @param {*} thing The value to test
 *
 * @returns {boolean} True if value is an Object, otherwise false
 */
const isObject = (thing) => thing !== null && typeof thing === 'object';

/**
 * Determine if a value is a Boolean
 *
 * @param {*} thing The value to test
 * @returns {boolean} True if value is a Boolean, otherwise false
 */
const isBoolean = thing => thing === true || thing === false;

/**
 * Determine if a value is a plain Object
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a plain Object, otherwise false
 */
const isPlainObject = (val) => {
  if (kindOf(val) !== 'object') {
    return false;
  }

  const prototype = getPrototypeOf(val);
  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);
}

/**
 * Determine if a value is a Date
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Date, otherwise false
 */
const isDate = kindOfTest('Date');

/**
 * Determine if a value is a File
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a File, otherwise false
 */
const isFile = kindOfTest('File');

/**
 * Determine if a value is a Blob
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Blob, otherwise false
 */
const isBlob = kindOfTest('Blob');

/**
 * Determine if a value is a FileList
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a File, otherwise false
 */
const isFileList = kindOfTest('FileList');

/**
 * Determine if a value is a Stream
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Stream, otherwise false
 */
const isStream = (val) => isObject(val) && isFunction(val.pipe);

/**
 * Determine if a value is a FormData
 *
 * @param {*} thing The value to test
 *
 * @returns {boolean} True if value is an FormData, otherwise false
 */
const isFormData = (thing) => {
  let kind;
  return thing && (
    (typeof FormData === 'function' && thing instanceof FormData) || (
      isFunction(thing.append) && (
        (kind = kindOf(thing)) === 'formdata' ||
        // detect form-data instance
        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')
      )
    )
  )
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
const isURLSearchParams = kindOfTest('URLSearchParams');

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 *
 * @returns {String} The String freed of excess whitespace
 */
const trim = (str) => str.trim ?
  str.trim() : str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 *
 * @param {Boolean} [allOwnKeys = false]
 * @returns {any}
 */
function forEach(obj, fn, {allOwnKeys = false} = {}) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  let i;
  let l;

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);
    const len = keys.length;
    let key;

    for (i = 0; i < len; i++) {
      key = keys[i];
      fn.call(null, obj[key], key, obj);
    }
  }
}

function findKey(obj, key) {
  key = key.toLowerCase();
  const keys = Object.keys(obj);
  let i = keys.length;
  let _key;
  while (i-- > 0) {
    _key = keys[i];
    if (key === _key.toLowerCase()) {
      return _key;
    }
  }
  return null;
}

const _global = (() => {
  /*eslint no-undef:0*/
  if (typeof globalThis !== "undefined") return globalThis;
  return typeof self !== "undefined" ? self : (typeof window !== 'undefined' ? window : global)
})();

const isContextDefined = (context) => !isUndefined(context) && context !== _global;

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 *
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  const {caseless} = isContextDefined(this) && this || {};
  const result = {};
  const assignValue = (val, key) => {
    const targetKey = caseless && findKey(result, key) || key;
    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {
      result[targetKey] = merge(result[targetKey], val);
    } else if (isPlainObject(val)) {
      result[targetKey] = merge({}, val);
    } else if (isArray(val)) {
      result[targetKey] = val.slice();
    } else {
      result[targetKey] = val;
    }
  }

  for (let i = 0, l = arguments.length; i < l; i++) {
    arguments[i] && forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 *
 * @param {Boolean} [allOwnKeys]
 * @returns {Object} The resulting value of object a
 */
const extend = (a, b, thisArg, {allOwnKeys}= {}) => {
  forEach(b, (val, key) => {
    if (thisArg && isFunction(val)) {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  }, {allOwnKeys});
  return a;
}

/**
 * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
 *
 * @param {string} content with BOM
 *
 * @returns {string} content value without BOM
 */
const stripBOM = (content) => {
  if (content.charCodeAt(0) === 0xFEFF) {
    content = content.slice(1);
  }
  return content;
}

/**
 * Inherit the prototype methods from one constructor into another
 * @param {function} constructor
 * @param {function} superConstructor
 * @param {object} [props]
 * @param {object} [descriptors]
 *
 * @returns {void}
 */
const inherits = (constructor, superConstructor, props, descriptors) => {
  constructor.prototype = Object.create(superConstructor.prototype, descriptors);
  constructor.prototype.constructor = constructor;
  Object.defineProperty(constructor, 'super', {
    value: superConstructor.prototype
  });
  props && Object.assign(constructor.prototype, props);
}

/**
 * Resolve object with deep prototype chain to a flat object
 * @param {Object} sourceObj source object
 * @param {Object} [destObj]
 * @param {Function|Boolean} [filter]
 * @param {Function} [propFilter]
 *
 * @returns {Object}
 */
const toFlatObject = (sourceObj, destObj, filter, propFilter) => {
  let props;
  let i;
  let prop;
  const merged = {};

  destObj = destObj || {};
  // eslint-disable-next-line no-eq-null,eqeqeq
  if (sourceObj == null) return destObj;

  do {
    props = Object.getOwnPropertyNames(sourceObj);
    i = props.length;
    while (i-- > 0) {
      prop = props[i];
      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {
        destObj[prop] = sourceObj[prop];
        merged[prop] = true;
      }
    }
    sourceObj = filter !== false && getPrototypeOf(sourceObj);
  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);

  return destObj;
}

/**
 * Determines whether a string ends with the characters of a specified string
 *
 * @param {String} str
 * @param {String} searchString
 * @param {Number} [position= 0]
 *
 * @returns {boolean}
 */
const endsWith = (str, searchString, position) => {
  str = String(str);
  if (position === undefined || position > str.length) {
    position = str.length;
  }
  position -= searchString.length;
  const lastIndex = str.indexOf(searchString, position);
  return lastIndex !== -1 && lastIndex === position;
}


/**
 * Returns new array from array like object or null if failed
 *
 * @param {*} [thing]
 *
 * @returns {?Array}
 */
const toArray = (thing) => {
  if (!thing) return null;
  if (isArray(thing)) return thing;
  let i = thing.length;
  if (!isNumber(i)) return null;
  const arr = new Array(i);
  while (i-- > 0) {
    arr[i] = thing[i];
  }
  return arr;
}

/**
 * Checking if the Uint8Array exists and if it does, it returns a function that checks if the
 * thing passed in is an instance of Uint8Array
 *
 * @param {TypedArray}
 *
 * @returns {Array}
 */
// eslint-disable-next-line func-names
const isTypedArray = (TypedArray => {
  // eslint-disable-next-line func-names
  return thing => {
    return TypedArray && thing instanceof TypedArray;
  };
})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));

/**
 * For each entry in the object, call the function with the key and value.
 *
 * @param {Object<any, any>} obj - The object to iterate over.
 * @param {Function} fn - The function to call for each entry.
 *
 * @returns {void}
 */
const forEachEntry = (obj, fn) => {
  const generator = obj && obj[Symbol.iterator];

  const iterator = generator.call(obj);

  let result;

  while ((result = iterator.next()) && !result.done) {
    const pair = result.value;
    fn.call(obj, pair[0], pair[1]);
  }
}

/**
 * It takes a regular expression and a string, and returns an array of all the matches
 *
 * @param {string} regExp - The regular expression to match against.
 * @param {string} str - The string to search.
 *
 * @returns {Array<boolean>}
 */
const matchAll = (regExp, str) => {
  let matches;
  const arr = [];

  while ((matches = regExp.exec(str)) !== null) {
    arr.push(matches);
  }

  return arr;
}

/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */
const isHTMLForm = kindOfTest('HTMLFormElement');

const toCamelCase = str => {
  return str.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,
    function replacer(m, p1, p2) {
      return p1.toUpperCase() + p2;
    }
  );
};

/* Creating a function that will check if an object has a property. */
const utils_hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);

/**
 * Determine if a value is a RegExp object
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a RegExp object, otherwise false
 */
const isRegExp = kindOfTest('RegExp');

const reduceDescriptors = (obj, reducer) => {
  const descriptors = Object.getOwnPropertyDescriptors(obj);
  const reducedDescriptors = {};

  forEach(descriptors, (descriptor, name) => {
    let ret;
    if ((ret = reducer(descriptor, name, obj)) !== false) {
      reducedDescriptors[name] = ret || descriptor;
    }
  });

  Object.defineProperties(obj, reducedDescriptors);
}

/**
 * Makes all methods read-only
 * @param {Object} obj
 */

const freezeMethods = (obj) => {
  reduceDescriptors(obj, (descriptor, name) => {
    // skip restricted props in strict mode
    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {
      return false;
    }

    const value = obj[name];

    if (!isFunction(value)) return;

    descriptor.enumerable = false;

    if ('writable' in descriptor) {
      descriptor.writable = false;
      return;
    }

    if (!descriptor.set) {
      descriptor.set = () => {
        throw Error('Can not rewrite read-only method \'' + name + '\'');
      };
    }
  });
}

const toObjectSet = (arrayOrString, delimiter) => {
  const obj = {};

  const define = (arr) => {
    arr.forEach(value => {
      obj[value] = true;
    });
  }

  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));

  return obj;
}

const noop = () => {}

const toFiniteNumber = (value, defaultValue) => {
  value = +value;
  return Number.isFinite(value) ? value : defaultValue;
}

const ALPHA = 'abcdefghijklmnopqrstuvwxyz'

const DIGIT = '0123456789';

const ALPHABET = {
  DIGIT,
  ALPHA,
  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT
}

const generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {
  let str = '';
  const {length} = alphabet;
  while (size--) {
    str += alphabet[Math.random() * length|0]
  }

  return str;
}

/**
 * If the thing is a FormData object, return true, otherwise return false.
 *
 * @param {unknown} thing - The thing to check.
 *
 * @returns {boolean}
 */
function isSpecCompliantForm(thing) {
  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);
}

const toJSONObject = (obj) => {
  const stack = new Array(10);

  const visit = (source, i) => {

    if (isObject(source)) {
      if (stack.indexOf(source) >= 0) {
        return;
      }

      if(!('toJSON' in source)) {
        stack[i] = source;
        const target = isArray(source) ? [] : {};

        forEach(source, (value, key) => {
          const reducedValue = visit(value, i + 1);
          !isUndefined(reducedValue) && (target[key] = reducedValue);
        });

        stack[i] = undefined;

        return target;
      }
    }

    return source;
  }

  return visit(obj, 0);
}

const isAsyncFn = kindOfTest('AsyncFunction');

const isThenable = (thing) =>
  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);

/* harmony default export */ var utils = ({
  isArray,
  isArrayBuffer,
  isBuffer,
  isFormData,
  isArrayBufferView,
  isString,
  isNumber,
  isBoolean,
  isObject,
  isPlainObject,
  isUndefined,
  isDate,
  isFile,
  isBlob,
  isRegExp,
  isFunction,
  isStream,
  isURLSearchParams,
  isTypedArray,
  isFileList,
  forEach,
  merge,
  extend,
  trim,
  stripBOM,
  inherits,
  toFlatObject,
  kindOf,
  kindOfTest,
  endsWith,
  toArray,
  forEachEntry,
  matchAll,
  isHTMLForm,
  hasOwnProperty: utils_hasOwnProperty,
  hasOwnProp: utils_hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection
  reduceDescriptors,
  freezeMethods,
  toObjectSet,
  toCamelCase,
  noop,
  toFiniteNumber,
  findKey,
  global: _global,
  isContextDefined,
  ALPHABET,
  generateString,
  isSpecCompliantForm,
  toJSONObject,
  isAsyncFn,
  isThenable
});

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/core/AxiosError.js




/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [config] The config.
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 *
 * @returns {Error} The created error.
 */
function AxiosError(message, code, config, request, response) {
  Error.call(this);

  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, this.constructor);
  } else {
    this.stack = (new Error()).stack;
  }

  this.message = message;
  this.name = 'AxiosError';
  code && (this.code = code);
  config && (this.config = config);
  request && (this.request = request);
  response && (this.response = response);
}

utils.inherits(AxiosError, Error, {
  toJSON: function toJSON() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: utils.toJSONObject(this.config),
      code: this.code,
      status: this.response && this.response.status ? this.response.status : null
    };
  }
});

const AxiosError_prototype = AxiosError.prototype;
const descriptors = {};

[
  'ERR_BAD_OPTION_VALUE',
  'ERR_BAD_OPTION',
  'ECONNABORTED',
  'ETIMEDOUT',
  'ERR_NETWORK',
  'ERR_FR_TOO_MANY_REDIRECTS',
  'ERR_DEPRECATED',
  'ERR_BAD_RESPONSE',
  'ERR_BAD_REQUEST',
  'ERR_CANCELED',
  'ERR_NOT_SUPPORT',
  'ERR_INVALID_URL'
// eslint-disable-next-line func-names
].forEach(code => {
  descriptors[code] = {value: code};
});

Object.defineProperties(AxiosError, descriptors);
Object.defineProperty(AxiosError_prototype, 'isAxiosError', {value: true});

// eslint-disable-next-line func-names
AxiosError.from = (error, code, config, request, response, customProps) => {
  const axiosError = Object.create(AxiosError_prototype);

  utils.toFlatObject(error, axiosError, function filter(obj) {
    return obj !== Error.prototype;
  }, prop => {
    return prop !== 'isAxiosError';
  });

  AxiosError.call(axiosError, error.message, code, config, request, response);

  axiosError.cause = error;

  axiosError.name = error.name;

  customProps && Object.assign(axiosError, customProps);

  return axiosError;
};

/* harmony default export */ var core_AxiosError = (AxiosError);

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/helpers/null.js
// eslint-disable-next-line strict
/* harmony default export */ var helpers_null = (null);

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/helpers/toFormData.js




// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored


/**
 * Determines if the given thing is a array or js object.
 *
 * @param {string} thing - The object or array to be visited.
 *
 * @returns {boolean}
 */
function isVisitable(thing) {
  return utils.isPlainObject(thing) || utils.isArray(thing);
}

/**
 * It removes the brackets from the end of a string
 *
 * @param {string} key - The key of the parameter.
 *
 * @returns {string} the key without the brackets.
 */
function removeBrackets(key) {
  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;
}

/**
 * It takes a path, a key, and a boolean, and returns a string
 *
 * @param {string} path - The path to the current key.
 * @param {string} key - The key of the current object being iterated over.
 * @param {string} dots - If true, the key will be rendered with dots instead of brackets.
 *
 * @returns {string} The path to the current key.
 */
function renderKey(path, key, dots) {
  if (!path) return key;
  return path.concat(key).map(function each(token, i) {
    // eslint-disable-next-line no-param-reassign
    token = removeBrackets(token);
    return !dots && i ? '[' + token + ']' : token;
  }).join(dots ? '.' : '');
}

/**
 * If the array is an array and none of its elements are visitable, then it's a flat array.
 *
 * @param {Array<any>} arr - The array to check
 *
 * @returns {boolean}
 */
function isFlatArray(arr) {
  return utils.isArray(arr) && !arr.some(isVisitable);
}

const predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {
  return /^is[A-Z]/.test(prop);
});

/**
 * Convert a data object to FormData
 *
 * @param {Object} obj
 * @param {?Object} [formData]
 * @param {?Object} [options]
 * @param {Function} [options.visitor]
 * @param {Boolean} [options.metaTokens = true]
 * @param {Boolean} [options.dots = false]
 * @param {?Boolean} [options.indexes = false]
 *
 * @returns {Object}
 **/

/**
 * It converts an object into a FormData object
 *
 * @param {Object<any, any>} obj - The object to convert to form data.
 * @param {string} formData - The FormData object to append to.
 * @param {Object<string, any>} options
 *
 * @returns
 */
function toFormData(obj, formData, options) {
  if (!utils.isObject(obj)) {
    throw new TypeError('target must be an object');
  }

  // eslint-disable-next-line no-param-reassign
  formData = formData || new (helpers_null || FormData)();

  // eslint-disable-next-line no-param-reassign
  options = utils.toFlatObject(options, {
    metaTokens: true,
    dots: false,
    indexes: false
  }, false, function defined(option, source) {
    // eslint-disable-next-line no-eq-null,eqeqeq
    return !utils.isUndefined(source[option]);
  });

  const metaTokens = options.metaTokens;
  // eslint-disable-next-line no-use-before-define
  const visitor = options.visitor || defaultVisitor;
  const dots = options.dots;
  const indexes = options.indexes;
  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;
  const useBlob = _Blob && utils.isSpecCompliantForm(formData);

  if (!utils.isFunction(visitor)) {
    throw new TypeError('visitor must be a function');
  }

  function convertValue(value) {
    if (value === null) return '';

    if (utils.isDate(value)) {
      return value.toISOString();
    }

    if (!useBlob && utils.isBlob(value)) {
      throw new core_AxiosError('Blob is not supported. Use a Buffer instead.');
    }

    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {
      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);
    }

    return value;
  }

  /**
   * Default visitor.
   *
   * @param {*} value
   * @param {String|Number} key
   * @param {Array<String|Number>} path
   * @this {FormData}
   *
   * @returns {boolean} return true to visit the each prop of the value recursively
   */
  function defaultVisitor(value, key, path) {
    let arr = value;

    if (value && !path && typeof value === 'object') {
      if (utils.endsWith(key, '{}')) {
        // eslint-disable-next-line no-param-reassign
        key = metaTokens ? key : key.slice(0, -2);
        // eslint-disable-next-line no-param-reassign
        value = JSON.stringify(value);
      } else if (
        (utils.isArray(value) && isFlatArray(value)) ||
        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))
        )) {
        // eslint-disable-next-line no-param-reassign
        key = removeBrackets(key);

        arr.forEach(function each(el, index) {
          !(utils.isUndefined(el) || el === null) && formData.append(
            // eslint-disable-next-line no-nested-ternary
            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),
            convertValue(el)
          );
        });
        return false;
      }
    }

    if (isVisitable(value)) {
      return true;
    }

    formData.append(renderKey(path, key, dots), convertValue(value));

    return false;
  }

  const stack = [];

  const exposedHelpers = Object.assign(predicates, {
    defaultVisitor,
    convertValue,
    isVisitable
  });

  function build(value, path) {
    if (utils.isUndefined(value)) return;

    if (stack.indexOf(value) !== -1) {
      throw Error('Circular reference detected in ' + path.join('.'));
    }

    stack.push(value);

    utils.forEach(value, function each(el, key) {
      const result = !(utils.isUndefined(el) || el === null) && visitor.call(
        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers
      );

      if (result === true) {
        build(el, path ? path.concat(key) : [key]);
      }
    });

    stack.pop();
  }

  if (!utils.isObject(obj)) {
    throw new TypeError('data must be an object');
  }

  build(obj);

  return formData;
}

/* harmony default export */ var helpers_toFormData = (toFormData);

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/helpers/AxiosURLSearchParams.js




/**
 * It encodes a string by replacing all characters that are not in the unreserved set with
 * their percent-encoded equivalents
 *
 * @param {string} str - The string to encode.
 *
 * @returns {string} The encoded string.
 */
function encode(str) {
  const charMap = {
    '!': '%21',
    "'": '%27',
    '(': '%28',
    ')': '%29',
    '~': '%7E',
    '%20': '+',
    '%00': '\x00'
  };
  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {
    return charMap[match];
  });
}

/**
 * It takes a params object and converts it to a FormData object
 *
 * @param {Object<string, any>} params - The parameters to be converted to a FormData object.
 * @param {Object<string, any>} options - The options object passed to the Axios constructor.
 *
 * @returns {void}
 */
function AxiosURLSearchParams(params, options) {
  this._pairs = [];

  params && helpers_toFormData(params, this, options);
}

const AxiosURLSearchParams_prototype = AxiosURLSearchParams.prototype;

AxiosURLSearchParams_prototype.append = function append(name, value) {
  this._pairs.push([name, value]);
};

AxiosURLSearchParams_prototype.toString = function toString(encoder) {
  const _encode = encoder ? function(value) {
    return encoder.call(this, value, encode);
  } : encode;

  return this._pairs.map(function each(pair) {
    return _encode(pair[0]) + '=' + _encode(pair[1]);
  }, '').join('&');
};

/* harmony default export */ var helpers_AxiosURLSearchParams = (AxiosURLSearchParams);

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/helpers/buildURL.js





/**
 * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their
 * URI encoded counterparts
 *
 * @param {string} val The value to be encoded.
 *
 * @returns {string} The encoded value.
 */
function buildURL_encode(val) {
  return encodeURIComponent(val).
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @param {?object} options
 *
 * @returns {string} The formatted url
 */
function buildURL(url, params, options) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }
  
  const _encode = options && options.encode || buildURL_encode;

  const serializeFn = options && options.serialize;

  let serializedParams;

  if (serializeFn) {
    serializedParams = serializeFn(params, options);
  } else {
    serializedParams = utils.isURLSearchParams(params) ?
      params.toString() :
      new helpers_AxiosURLSearchParams(params, options).toString(_encode);
  }

  if (serializedParams) {
    const hashmarkIndex = url.indexOf("#");

    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }
    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
}

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/core/InterceptorManager.js




class InterceptorManager {
  constructor() {
    this.handlers = [];
  }

  /**
   * Add a new interceptor to the stack
   *
   * @param {Function} fulfilled The function to handle `then` for a `Promise`
   * @param {Function} rejected The function to handle `reject` for a `Promise`
   *
   * @return {Number} An ID used to remove interceptor later
   */
  use(fulfilled, rejected, options) {
    this.handlers.push({
      fulfilled,
      rejected,
      synchronous: options ? options.synchronous : false,
      runWhen: options ? options.runWhen : null
    });
    return this.handlers.length - 1;
  }

  /**
   * Remove an interceptor from the stack
   *
   * @param {Number} id The ID that was returned by `use`
   *
   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
   */
  eject(id) {
    if (this.handlers[id]) {
      this.handlers[id] = null;
    }
  }

  /**
   * Clear all interceptors from the stack
   *
   * @returns {void}
   */
  clear() {
    if (this.handlers) {
      this.handlers = [];
    }
  }

  /**
   * Iterate over all the registered interceptors
   *
   * This method is particularly useful for skipping over any
   * interceptors that may have become `null` calling `eject`.
   *
   * @param {Function} fn The function to call for each interceptor
   *
   * @returns {void}
   */
  forEach(fn) {
    utils.forEach(this.handlers, function forEachHandler(h) {
      if (h !== null) {
        fn(h);
      }
    });
  }
}

/* harmony default export */ var core_InterceptorManager = (InterceptorManager);

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/defaults/transitional.js


/* harmony default export */ var defaults_transitional = ({
  silentJSONParsing: true,
  forcedJSONParsing: true,
  clarifyTimeoutError: false
});

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/platform/browser/classes/URLSearchParams.js



/* harmony default export */ var classes_URLSearchParams = (typeof URLSearchParams !== 'undefined' ? URLSearchParams : helpers_AxiosURLSearchParams);

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/platform/browser/classes/FormData.js


/* harmony default export */ var classes_FormData = (typeof FormData !== 'undefined' ? FormData : null);

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/platform/browser/classes/Blob.js


/* harmony default export */ var classes_Blob = (typeof Blob !== 'undefined' ? Blob : null);

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/platform/browser/index.js




/* harmony default export */ var browser = ({
  isBrowser: true,
  classes: {
    URLSearchParams: classes_URLSearchParams,
    FormData: classes_FormData,
    Blob: classes_Blob
  },
  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']
});

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/platform/common/utils.js
const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 *
 * @returns {boolean}
 */
const hasStandardBrowserEnv = (
  (product) => {
    return hasBrowserEnv && ['ReactNative', 'NativeScript', 'NS'].indexOf(product) < 0
  })(typeof navigator !== 'undefined' && navigator.product);

/**
 * Determine if we're running in a standard browser webWorker environment
 *
 * Although the `isStandardBrowserEnv` method indicates that
 * `allows axios to run in a web worker`, the WebWorker will still be
 * filtered out due to its judgment standard
 * `typeof window !== 'undefined' && typeof document !== 'undefined'`.
 * This leads to a problem when axios post `FormData` in webWorker
 */
const hasStandardBrowserWebWorkerEnv = (() => {
  return (
    typeof WorkerGlobalScope !== 'undefined' &&
    // eslint-disable-next-line no-undef
    self instanceof WorkerGlobalScope &&
    typeof self.importScripts === 'function'
  );
})();



;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/platform/index.js



/* harmony default export */ var platform = ({
  ...common_utils_namespaceObject,
  ...browser
});

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/helpers/toURLEncodedForm.js






function toURLEncodedForm(data, options) {
  return helpers_toFormData(data, new platform.classes.URLSearchParams(), Object.assign({
    visitor: function(value, key, path, helpers) {
      if (platform.isNode && utils.isBuffer(value)) {
        this.append(key, value.toString('base64'));
        return false;
      }

      return helpers.defaultVisitor.apply(this, arguments);
    }
  }, options));
}

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/helpers/formDataToJSON.js




/**
 * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']
 *
 * @param {string} name - The name of the property to get.
 *
 * @returns An array of strings.
 */
function parsePropPath(name) {
  // foo[x][y][z]
  // foo.x.y.z
  // foo-x-y-z
  // foo x y z
  return utils.matchAll(/\w+|\[(\w*)]/g, name).map(match => {
    return match[0] === '[]' ? '' : match[1] || match[0];
  });
}

/**
 * Convert an array to an object.
 *
 * @param {Array<any>} arr - The array to convert to an object.
 *
 * @returns An object with the same keys and values as the array.
 */
function arrayToObject(arr) {
  const obj = {};
  const keys = Object.keys(arr);
  let i;
  const len = keys.length;
  let key;
  for (i = 0; i < len; i++) {
    key = keys[i];
    obj[key] = arr[key];
  }
  return obj;
}

/**
 * It takes a FormData object and returns a JavaScript object
 *
 * @param {string} formData The FormData object to convert to JSON.
 *
 * @returns {Object<string, any> | null} The converted object.
 */
function formDataToJSON(formData) {
  function buildPath(path, value, target, index) {
    let name = path[index++];
    const isNumericKey = Number.isFinite(+name);
    const isLast = index >= path.length;
    name = !name && utils.isArray(target) ? target.length : name;

    if (isLast) {
      if (utils.hasOwnProp(target, name)) {
        target[name] = [target[name], value];
      } else {
        target[name] = value;
      }

      return !isNumericKey;
    }

    if (!target[name] || !utils.isObject(target[name])) {
      target[name] = [];
    }

    const result = buildPath(path, value, target[name], index);

    if (result && utils.isArray(target[name])) {
      target[name] = arrayToObject(target[name]);
    }

    return !isNumericKey;
  }

  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {
    const obj = {};

    utils.forEachEntry(formData, (name, value) => {
      buildPath(parsePropPath(name), value, obj, 0);
    });

    return obj;
  }

  return null;
}

/* harmony default export */ var helpers_formDataToJSON = (formDataToJSON);

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/defaults/index.js










/**
 * It takes a string, tries to parse it, and if it fails, it returns the stringified version
 * of the input
 *
 * @param {any} rawValue - The value to be stringified.
 * @param {Function} parser - A function that parses a string into a JavaScript object.
 * @param {Function} encoder - A function that takes a value and returns a string.
 *
 * @returns {string} A stringified version of the rawValue.
 */
function stringifySafely(rawValue, parser, encoder) {
  if (utils.isString(rawValue)) {
    try {
      (parser || JSON.parse)(rawValue);
      return utils.trim(rawValue);
    } catch (e) {
      if (e.name !== 'SyntaxError') {
        throw e;
      }
    }
  }

  return (encoder || JSON.stringify)(rawValue);
}

const defaults = {

  transitional: defaults_transitional,

  adapter: ['xhr', 'http'],

  transformRequest: [function transformRequest(data, headers) {
    const contentType = headers.getContentType() || '';
    const hasJSONContentType = contentType.indexOf('application/json') > -1;
    const isObjectPayload = utils.isObject(data);

    if (isObjectPayload && utils.isHTMLForm(data)) {
      data = new FormData(data);
    }

    const isFormData = utils.isFormData(data);

    if (isFormData) {
      if (!hasJSONContentType) {
        return data;
      }
      return hasJSONContentType ? JSON.stringify(helpers_formDataToJSON(data)) : data;
    }

    if (utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);
      return data.toString();
    }

    let isFileList;

    if (isObjectPayload) {
      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {
        return toURLEncodedForm(data, this.formSerializer).toString();
      }

      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {
        const _FormData = this.env && this.env.FormData;

        return helpers_toFormData(
          isFileList ? {'files[]': data} : data,
          _FormData && new _FormData(),
          this.formSerializer
        );
      }
    }

    if (isObjectPayload || hasJSONContentType ) {
      headers.setContentType('application/json', false);
      return stringifySafely(data);
    }

    return data;
  }],

  transformResponse: [function transformResponse(data) {
    const transitional = this.transitional || defaults.transitional;
    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;
    const JSONRequested = this.responseType === 'json';

    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {
      const silentJSONParsing = transitional && transitional.silentJSONParsing;
      const strictJSONParsing = !silentJSONParsing && JSONRequested;

      try {
        return JSON.parse(data);
      } catch (e) {
        if (strictJSONParsing) {
          if (e.name === 'SyntaxError') {
            throw core_AxiosError.from(e, core_AxiosError.ERR_BAD_RESPONSE, this, null, this.response);
          }
          throw e;
        }
      }
    }

    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,
  maxBodyLength: -1,

  env: {
    FormData: platform.classes.FormData,
    Blob: platform.classes.Blob
  },

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  },

  headers: {
    common: {
      'Accept': 'application/json, text/plain, */*',
      'Content-Type': undefined
    }
  }
};

utils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {
  defaults.headers[method] = {};
});

/* harmony default export */ var lib_defaults = (defaults);

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/helpers/parseHeaders.js




// RawAxiosHeaders whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
const ignoreDuplicateOf = utils.toObjectSet([
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
]);

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} rawHeaders Headers needing to be parsed
 *
 * @returns {Object} Headers parsed into an object
 */
/* harmony default export */ var parseHeaders = (rawHeaders => {
  const parsed = {};
  let key;
  let val;
  let i;

  rawHeaders && rawHeaders.split('\n').forEach(function parser(line) {
    i = line.indexOf(':');
    key = line.substring(0, i).trim().toLowerCase();
    val = line.substring(i + 1).trim();

    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {
      return;
    }

    if (key === 'set-cookie') {
      if (parsed[key]) {
        parsed[key].push(val);
      } else {
        parsed[key] = [val];
      }
    } else {
      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
    }
  });

  return parsed;
});

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/core/AxiosHeaders.js





const $internals = Symbol('internals');

function normalizeHeader(header) {
  return header && String(header).trim().toLowerCase();
}

function normalizeValue(value) {
  if (value === false || value == null) {
    return value;
  }

  return utils.isArray(value) ? value.map(normalizeValue) : String(value);
}

function parseTokens(str) {
  const tokens = Object.create(null);
  const tokensRE = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
  let match;

  while ((match = tokensRE.exec(str))) {
    tokens[match[1]] = match[2];
  }

  return tokens;
}

const isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());

function matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {
  if (utils.isFunction(filter)) {
    return filter.call(this, value, header);
  }

  if (isHeaderNameFilter) {
    value = header;
  }

  if (!utils.isString(value)) return;

  if (utils.isString(filter)) {
    return value.indexOf(filter) !== -1;
  }

  if (utils.isRegExp(filter)) {
    return filter.test(value);
  }
}

function formatHeader(header) {
  return header.trim()
    .toLowerCase().replace(/([a-z\d])(\w*)/g, (w, char, str) => {
      return char.toUpperCase() + str;
    });
}

function buildAccessors(obj, header) {
  const accessorName = utils.toCamelCase(' ' + header);

  ['get', 'set', 'has'].forEach(methodName => {
    Object.defineProperty(obj, methodName + accessorName, {
      value: function(arg1, arg2, arg3) {
        return this[methodName].call(this, header, arg1, arg2, arg3);
      },
      configurable: true
    });
  });
}

class AxiosHeaders {
  constructor(headers) {
    headers && this.set(headers);
  }

  set(header, valueOrRewrite, rewrite) {
    const self = this;

    function setHeader(_value, _header, _rewrite) {
      const lHeader = normalizeHeader(_header);

      if (!lHeader) {
        throw new Error('header name must be a non-empty string');
      }

      const key = utils.findKey(self, lHeader);

      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {
        self[key || _header] = normalizeValue(_value);
      }
    }

    const setHeaders = (headers, _rewrite) =>
      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));

    if (utils.isPlainObject(header) || header instanceof this.constructor) {
      setHeaders(header, valueOrRewrite)
    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {
      setHeaders(parseHeaders(header), valueOrRewrite);
    } else {
      header != null && setHeader(valueOrRewrite, header, rewrite);
    }

    return this;
  }

  get(header, parser) {
    header = normalizeHeader(header);

    if (header) {
      const key = utils.findKey(this, header);

      if (key) {
        const value = this[key];

        if (!parser) {
          return value;
        }

        if (parser === true) {
          return parseTokens(value);
        }

        if (utils.isFunction(parser)) {
          return parser.call(this, value, key);
        }

        if (utils.isRegExp(parser)) {
          return parser.exec(value);
        }

        throw new TypeError('parser must be boolean|regexp|function');
      }
    }
  }

  has(header, matcher) {
    header = normalizeHeader(header);

    if (header) {
      const key = utils.findKey(this, header);

      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));
    }

    return false;
  }

  delete(header, matcher) {
    const self = this;
    let deleted = false;

    function deleteHeader(_header) {
      _header = normalizeHeader(_header);

      if (_header) {
        const key = utils.findKey(self, _header);

        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {
          delete self[key];

          deleted = true;
        }
      }
    }

    if (utils.isArray(header)) {
      header.forEach(deleteHeader);
    } else {
      deleteHeader(header);
    }

    return deleted;
  }

  clear(matcher) {
    const keys = Object.keys(this);
    let i = keys.length;
    let deleted = false;

    while (i--) {
      const key = keys[i];
      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {
        delete this[key];
        deleted = true;
      }
    }

    return deleted;
  }

  normalize(format) {
    const self = this;
    const headers = {};

    utils.forEach(this, (value, header) => {
      const key = utils.findKey(headers, header);

      if (key) {
        self[key] = normalizeValue(value);
        delete self[header];
        return;
      }

      const normalized = format ? formatHeader(header) : String(header).trim();

      if (normalized !== header) {
        delete self[header];
      }

      self[normalized] = normalizeValue(value);

      headers[normalized] = true;
    });

    return this;
  }

  concat(...targets) {
    return this.constructor.concat(this, ...targets);
  }

  toJSON(asStrings) {
    const obj = Object.create(null);

    utils.forEach(this, (value, header) => {
      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);
    });

    return obj;
  }

  [Symbol.iterator]() {
    return Object.entries(this.toJSON())[Symbol.iterator]();
  }

  toString() {
    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\n');
  }

  get [Symbol.toStringTag]() {
    return 'AxiosHeaders';
  }

  static from(thing) {
    return thing instanceof this ? thing : new this(thing);
  }

  static concat(first, ...targets) {
    const computed = new this(first);

    targets.forEach((target) => computed.set(target));

    return computed;
  }

  static accessor(header) {
    const internals = this[$internals] = (this[$internals] = {
      accessors: {}
    });

    const accessors = internals.accessors;
    const prototype = this.prototype;

    function defineAccessor(_header) {
      const lHeader = normalizeHeader(_header);

      if (!accessors[lHeader]) {
        buildAccessors(prototype, _header);
        accessors[lHeader] = true;
      }
    }

    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);

    return this;
  }
}

AxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);

// reserved names hotfix
utils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {
  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`
  return {
    get: () => value,
    set(headerValue) {
      this[mapped] = headerValue;
    }
  }
});

utils.freezeMethods(AxiosHeaders);

/* harmony default export */ var core_AxiosHeaders = (AxiosHeaders);

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/core/transformData.js






/**
 * Transform the data for a request or a response
 *
 * @param {Array|Function} fns A single function or Array of functions
 * @param {?Object} response The response object
 *
 * @returns {*} The resulting transformed data
 */
function transformData(fns, response) {
  const config = this || lib_defaults;
  const context = response || config;
  const headers = core_AxiosHeaders.from(context.headers);
  let data = context.data;

  utils.forEach(fns, function transform(fn) {
    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);
  });

  headers.normalize();

  return data;
}

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/cancel/isCancel.js


function isCancel(value) {
  return !!(value && value.__CANCEL__);
}

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/cancel/CanceledError.js





/**
 * A `CanceledError` is an object that is thrown when an operation is canceled.
 *
 * @param {string=} message The message.
 * @param {Object=} config The config.
 * @param {Object=} request The request.
 *
 * @returns {CanceledError} The created error.
 */
function CanceledError(message, config, request) {
  // eslint-disable-next-line no-eq-null,eqeqeq
  core_AxiosError.call(this, message == null ? 'canceled' : message, core_AxiosError.ERR_CANCELED, config, request);
  this.name = 'CanceledError';
}

utils.inherits(CanceledError, core_AxiosError, {
  __CANCEL__: true
});

/* harmony default export */ var cancel_CanceledError = (CanceledError);

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/core/settle.js




/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 *
 * @returns {object} The response.
 */
function settle(resolve, reject, response) {
  const validateStatus = response.config.validateStatus;
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(new core_AxiosError(
      'Request failed with status code ' + response.status,
      [core_AxiosError.ERR_BAD_REQUEST, core_AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],
      response.config,
      response.request,
      response
    ));
  }
}

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/helpers/cookies.js



/* harmony default export */ var cookies = (platform.hasStandardBrowserEnv ?

  // Standard browser envs support document.cookie
  {
    write(name, value, expires, path, domain, secure) {
      const cookie = [name + '=' + encodeURIComponent(value)];

      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());

      utils.isString(path) && cookie.push('path=' + path);

      utils.isString(domain) && cookie.push('domain=' + domain);

      secure === true && cookie.push('secure');

      document.cookie = cookie.join('; ');
    },

    read(name) {
      const match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
      return (match ? decodeURIComponent(match[3]) : null);
    },

    remove(name) {
      this.write(name, '', Date.now() - 86400000);
    }
  }

  :

  // Non-standard browser env (web workers, react-native) lack needed support.
  {
    write() {},
    read() {
      return null;
    },
    remove() {}
  });


;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/helpers/isAbsoluteURL.js


/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 *
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(url);
}

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/helpers/combineURLs.js


/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 *
 * @returns {string} The combined URL
 */
function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
}

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/core/buildFullPath.js





/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 *
 * @returns {string} The combined full path
 */
function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
}

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/helpers/isURLSameOrigin.js





/* harmony default export */ var isURLSameOrigin = (platform.hasStandardBrowserEnv ?

// Standard browser envs have full support of the APIs needed to test
// whether the request URL is of the same origin as current location.
  (function standardBrowserEnv() {
    const msie = /(msie|trident)/i.test(navigator.userAgent);
    const urlParsingNode = document.createElement('a');
    let originURL;

    /**
    * Parse a URL to discover its components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
    function resolveURL(url) {
      let href = url;

      if (msie) {
        // IE needs attribute set twice to normalize properties
        urlParsingNode.setAttribute('href', href);
        href = urlParsingNode.href;
      }

      urlParsingNode.setAttribute('href', href);

      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
      return {
        href: urlParsingNode.href,
        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
        host: urlParsingNode.host,
        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
        hostname: urlParsingNode.hostname,
        port: urlParsingNode.port,
        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
          urlParsingNode.pathname :
          '/' + urlParsingNode.pathname
      };
    }

    originURL = resolveURL(window.location.href);

    /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
    return function isURLSameOrigin(requestURL) {
      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
      return (parsed.protocol === originURL.protocol &&
          parsed.host === originURL.host);
    };
  })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
  (function nonStandardBrowserEnv() {
    return function isURLSameOrigin() {
      return true;
    };
  })());

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/helpers/parseProtocol.js


function parseProtocol(url) {
  const match = /^([-+\w]{1,25})(:?\/\/|:)/.exec(url);
  return match && match[1] || '';
}

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/helpers/speedometer.js


/**
 * Calculate data maxRate
 * @param {Number} [samplesCount= 10]
 * @param {Number} [min= 1000]
 * @returns {Function}
 */
function speedometer(samplesCount, min) {
  samplesCount = samplesCount || 10;
  const bytes = new Array(samplesCount);
  const timestamps = new Array(samplesCount);
  let head = 0;
  let tail = 0;
  let firstSampleTS;

  min = min !== undefined ? min : 1000;

  return function push(chunkLength) {
    const now = Date.now();

    const startedAt = timestamps[tail];

    if (!firstSampleTS) {
      firstSampleTS = now;
    }

    bytes[head] = chunkLength;
    timestamps[head] = now;

    let i = tail;
    let bytesCount = 0;

    while (i !== head) {
      bytesCount += bytes[i++];
      i = i % samplesCount;
    }

    head = (head + 1) % samplesCount;

    if (head === tail) {
      tail = (tail + 1) % samplesCount;
    }

    if (now - firstSampleTS < min) {
      return;
    }

    const passed = startedAt && now - startedAt;

    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;
  };
}

/* harmony default export */ var helpers_speedometer = (speedometer);

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/adapters/xhr.js
















function progressEventReducer(listener, isDownloadStream) {
  let bytesNotified = 0;
  const _speedometer = helpers_speedometer(50, 250);

  return e => {
    const loaded = e.loaded;
    const total = e.lengthComputable ? e.total : undefined;
    const progressBytes = loaded - bytesNotified;
    const rate = _speedometer(progressBytes);
    const inRange = loaded <= total;

    bytesNotified = loaded;

    const data = {
      loaded,
      total,
      progress: total ? (loaded / total) : undefined,
      bytes: progressBytes,
      rate: rate ? rate : undefined,
      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,
      event: e
    };

    data[isDownloadStream ? 'download' : 'upload'] = true;

    listener(data);
  };
}

const isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';

/* harmony default export */ var xhr = (isXHRAdapterSupported && function (config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    let requestData = config.data;
    const requestHeaders = core_AxiosHeaders.from(config.headers).normalize();
    let {responseType, withXSRFToken} = config;
    let onCanceled;
    function done() {
      if (config.cancelToken) {
        config.cancelToken.unsubscribe(onCanceled);
      }

      if (config.signal) {
        config.signal.removeEventListener('abort', onCanceled);
      }
    }

    let contentType;

    if (utils.isFormData(requestData)) {
      if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {
        requestHeaders.setContentType(false); // Let the browser set it
      } else if ((contentType = requestHeaders.getContentType()) !== false) {
        // fix semicolon duplication issue for ReactNative FormData implementation
        const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];
        requestHeaders.setContentType([type || 'multipart/form-data', ...tokens].join('; '));
      }
    }

    let request = new XMLHttpRequest();

    // HTTP basic authentication
    if (config.auth) {
      const username = config.auth.username || '';
      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';
      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));
    }

    const fullPath = buildFullPath(config.baseURL, config.url);

    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    function onloadend() {
      if (!request) {
        return;
      }
      // Prepare the response
      const responseHeaders = core_AxiosHeaders.from(
        'getAllResponseHeaders' in request && request.getAllResponseHeaders()
      );
      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?
        request.responseText : request.response;
      const response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config,
        request
      };

      settle(function _resolve(value) {
        resolve(value);
        done();
      }, function _reject(err) {
        reject(err);
        done();
      }, response);

      // Clean up request
      request = null;
    }

    if ('onloadend' in request) {
      // Use onloadend if available
      request.onloadend = onloadend;
    } else {
      // Listen for ready state to emulate onloadend
      request.onreadystatechange = function handleLoad() {
        if (!request || request.readyState !== 4) {
          return;
        }

        // The request errored out and we didn't get a response, this will be
        // handled by onerror instead
        // With one exception: request that using file: protocol, most browsers
        // will return status as 0 even though it's a successful request
        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
          return;
        }
        // readystate handler is calling before onerror or ontimeout handlers,
        // so we should call onloadend on the next 'tick'
        setTimeout(onloadend);
      };
    }

    // Handle browser request cancellation (as opposed to a manual cancellation)
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }

      reject(new core_AxiosError('Request aborted', core_AxiosError.ECONNABORTED, config, request));

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(new core_AxiosError('Network Error', core_AxiosError.ERR_NETWORK, config, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';
      const transitional = config.transitional || defaults_transitional;
      if (config.timeoutErrorMessage) {
        timeoutErrorMessage = config.timeoutErrorMessage;
      }
      reject(new core_AxiosError(
        timeoutErrorMessage,
        transitional.clarifyTimeoutError ? core_AxiosError.ETIMEDOUT : core_AxiosError.ECONNABORTED,
        config,
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if(platform.hasStandardBrowserEnv) {
      withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(config));

      if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(fullPath))) {
        // Add xsrf header
        const xsrfValue = config.xsrfHeaderName && config.xsrfCookieName && cookies.read(config.xsrfCookieName);

        if (xsrfValue) {
          requestHeaders.set(config.xsrfHeaderName, xsrfValue);
        }
      }
    }

    // Remove Content-Type if data is undefined
    requestData === undefined && requestHeaders.setContentType(null);

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {
        request.setRequestHeader(key, val);
      });
    }

    // Add withCredentials to request if needed
    if (!utils.isUndefined(config.withCredentials)) {
      request.withCredentials = !!config.withCredentials;
    }

    // Add responseType to request if needed
    if (responseType && responseType !== 'json') {
      request.responseType = config.responseType;
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));
    }

    if (config.cancelToken || config.signal) {
      // Handle cancellation
      // eslint-disable-next-line func-names
      onCanceled = cancel => {
        if (!request) {
          return;
        }
        reject(!cancel || cancel.type ? new cancel_CanceledError(null, config, request) : cancel);
        request.abort();
        request = null;
      };

      config.cancelToken && config.cancelToken.subscribe(onCanceled);
      if (config.signal) {
        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);
      }
    }

    const protocol = parseProtocol(fullPath);

    if (protocol && platform.protocols.indexOf(protocol) === -1) {
      reject(new core_AxiosError('Unsupported protocol ' + protocol + ':', core_AxiosError.ERR_BAD_REQUEST, config));
      return;
    }


    // Send the request
    request.send(requestData || null);
  });
});

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/adapters/adapters.js





const knownAdapters = {
  http: helpers_null,
  xhr: xhr
}

utils.forEach(knownAdapters, (fn, value) => {
  if (fn) {
    try {
      Object.defineProperty(fn, 'name', {value});
    } catch (e) {
      // eslint-disable-next-line no-empty
    }
    Object.defineProperty(fn, 'adapterName', {value});
  }
});

const renderReason = (reason) => `- ${reason}`;

const isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;

/* harmony default export */ var adapters = ({
  getAdapter: (adapters) => {
    adapters = utils.isArray(adapters) ? adapters : [adapters];

    const {length} = adapters;
    let nameOrAdapter;
    let adapter;

    const rejectedReasons = {};

    for (let i = 0; i < length; i++) {
      nameOrAdapter = adapters[i];
      let id;

      adapter = nameOrAdapter;

      if (!isResolvedHandle(nameOrAdapter)) {
        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];

        if (adapter === undefined) {
          throw new core_AxiosError(`Unknown adapter '${id}'`);
        }
      }

      if (adapter) {
        break;
      }

      rejectedReasons[id || '#' + i] = adapter;
    }

    if (!adapter) {

      const reasons = Object.entries(rejectedReasons)
        .map(([id, state]) => `adapter ${id} ` +
          (state === false ? 'is not supported by the environment' : 'is not available in the build')
        );

      let s = length ?
        (reasons.length > 1 ? 'since :\n' + reasons.map(renderReason).join('\n') : ' ' + renderReason(reasons[0])) :
        'as no adapter specified';

      throw new core_AxiosError(
        `There is no suitable adapter to dispatch the request ` + s,
        'ERR_NOT_SUPPORT'
      );
    }

    return adapter;
  },
  adapters: knownAdapters
});

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/core/dispatchRequest.js









/**
 * Throws a `CanceledError` if cancellation has been requested.
 *
 * @param {Object} config The config that is to be used for the request
 *
 * @returns {void}
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }

  if (config.signal && config.signal.aborted) {
    throw new cancel_CanceledError(null, config);
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 *
 * @returns {Promise} The Promise to be fulfilled
 */
function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  config.headers = core_AxiosHeaders.from(config.headers);

  // Transform request data
  config.data = transformData.call(
    config,
    config.transformRequest
  );

  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {
    config.headers.setContentType('application/x-www-form-urlencoded', false);
  }

  const adapter = adapters.getAdapter(config.adapter || lib_defaults.adapter);

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData.call(
      config,
      config.transformResponse,
      response
    );

    response.headers = core_AxiosHeaders.from(response.headers);

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData.call(
          config,
          config.transformResponse,
          reason.response
        );
        reason.response.headers = core_AxiosHeaders.from(reason.response.headers);
      }
    }

    return Promise.reject(reason);
  });
}

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/core/mergeConfig.js





const headersToObject = (thing) => thing instanceof core_AxiosHeaders ? thing.toJSON() : thing;

/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 *
 * @returns {Object} New object resulting from merging config2 to config1
 */
function mergeConfig(config1, config2) {
  // eslint-disable-next-line no-param-reassign
  config2 = config2 || {};
  const config = {};

  function getMergedValue(target, source, caseless) {
    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
      return utils.merge.call({caseless}, target, source);
    } else if (utils.isPlainObject(source)) {
      return utils.merge({}, source);
    } else if (utils.isArray(source)) {
      return source.slice();
    }
    return source;
  }

  // eslint-disable-next-line consistent-return
  function mergeDeepProperties(a, b, caseless) {
    if (!utils.isUndefined(b)) {
      return getMergedValue(a, b, caseless);
    } else if (!utils.isUndefined(a)) {
      return getMergedValue(undefined, a, caseless);
    }
  }

  // eslint-disable-next-line consistent-return
  function valueFromConfig2(a, b) {
    if (!utils.isUndefined(b)) {
      return getMergedValue(undefined, b);
    }
  }

  // eslint-disable-next-line consistent-return
  function defaultToConfig2(a, b) {
    if (!utils.isUndefined(b)) {
      return getMergedValue(undefined, b);
    } else if (!utils.isUndefined(a)) {
      return getMergedValue(undefined, a);
    }
  }

  // eslint-disable-next-line consistent-return
  function mergeDirectKeys(a, b, prop) {
    if (prop in config2) {
      return getMergedValue(a, b);
    } else if (prop in config1) {
      return getMergedValue(undefined, a);
    }
  }

  const mergeMap = {
    url: valueFromConfig2,
    method: valueFromConfig2,
    data: valueFromConfig2,
    baseURL: defaultToConfig2,
    transformRequest: defaultToConfig2,
    transformResponse: defaultToConfig2,
    paramsSerializer: defaultToConfig2,
    timeout: defaultToConfig2,
    timeoutMessage: defaultToConfig2,
    withCredentials: defaultToConfig2,
    withXSRFToken: defaultToConfig2,
    adapter: defaultToConfig2,
    responseType: defaultToConfig2,
    xsrfCookieName: defaultToConfig2,
    xsrfHeaderName: defaultToConfig2,
    onUploadProgress: defaultToConfig2,
    onDownloadProgress: defaultToConfig2,
    decompress: defaultToConfig2,
    maxContentLength: defaultToConfig2,
    maxBodyLength: defaultToConfig2,
    beforeRedirect: defaultToConfig2,
    transport: defaultToConfig2,
    httpAgent: defaultToConfig2,
    httpsAgent: defaultToConfig2,
    cancelToken: defaultToConfig2,
    socketPath: defaultToConfig2,
    responseEncoding: defaultToConfig2,
    validateStatus: mergeDirectKeys,
    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)
  };

  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {
    const merge = mergeMap[prop] || mergeDeepProperties;
    const configValue = merge(config1[prop], config2[prop], prop);
    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);
  });

  return config;
}

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/env/data.js
const VERSION = "1.6.2";
;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/helpers/validator.js





const validators = {};

// eslint-disable-next-line func-names
['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {
  validators[type] = function validator(thing) {
    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;
  };
});

const deprecatedWarnings = {};

/**
 * Transitional option validator
 *
 * @param {function|boolean?} validator - set to false if the transitional option has been removed
 * @param {string?} version - deprecated version / removed since version
 * @param {string?} message - some message with additional info
 *
 * @returns {function}
 */
validators.transitional = function transitional(validator, version, message) {
  function formatMessage(opt, desc) {
    return '[Axios v' + VERSION + '] Transitional option \'' + opt + '\'' + desc + (message ? '. ' + message : '');
  }

  // eslint-disable-next-line func-names
  return (value, opt, opts) => {
    if (validator === false) {
      throw new core_AxiosError(
        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),
        core_AxiosError.ERR_DEPRECATED
      );
    }

    if (version && !deprecatedWarnings[opt]) {
      deprecatedWarnings[opt] = true;
      // eslint-disable-next-line no-console
      console.warn(
        formatMessage(
          opt,
          ' has been deprecated since v' + version + ' and will be removed in the near future'
        )
      );
    }

    return validator ? validator(value, opt, opts) : true;
  };
};

/**
 * Assert object's properties type
 *
 * @param {object} options
 * @param {object} schema
 * @param {boolean?} allowUnknown
 *
 * @returns {object}
 */

function assertOptions(options, schema, allowUnknown) {
  if (typeof options !== 'object') {
    throw new core_AxiosError('options must be an object', core_AxiosError.ERR_BAD_OPTION_VALUE);
  }
  const keys = Object.keys(options);
  let i = keys.length;
  while (i-- > 0) {
    const opt = keys[i];
    const validator = schema[opt];
    if (validator) {
      const value = options[opt];
      const result = value === undefined || validator(value, opt, options);
      if (result !== true) {
        throw new core_AxiosError('option ' + opt + ' must be ' + result, core_AxiosError.ERR_BAD_OPTION_VALUE);
      }
      continue;
    }
    if (allowUnknown !== true) {
      throw new core_AxiosError('Unknown option ' + opt, core_AxiosError.ERR_BAD_OPTION);
    }
  }
}

/* harmony default export */ var validator = ({
  assertOptions,
  validators
});

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/core/Axios.js











const Axios_validators = validator.validators;

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 *
 * @return {Axios} A new instance of Axios
 */
class Axios {
  constructor(instanceConfig) {
    this.defaults = instanceConfig;
    this.interceptors = {
      request: new core_InterceptorManager(),
      response: new core_InterceptorManager()
    };
  }

  /**
   * Dispatch a request
   *
   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
   * @param {?Object} config
   *
   * @returns {Promise} The Promise to be fulfilled
   */
  request(configOrUrl, config) {
    /*eslint no-param-reassign:0*/
    // Allow for axios('example/url'[, config]) a la fetch API
    if (typeof configOrUrl === 'string') {
      config = config || {};
      config.url = configOrUrl;
    } else {
      config = configOrUrl || {};
    }

    config = mergeConfig(this.defaults, config);

    const {transitional, paramsSerializer, headers} = config;

    if (transitional !== undefined) {
      validator.assertOptions(transitional, {
        silentJSONParsing: Axios_validators.transitional(Axios_validators.boolean),
        forcedJSONParsing: Axios_validators.transitional(Axios_validators.boolean),
        clarifyTimeoutError: Axios_validators.transitional(Axios_validators.boolean)
      }, false);
    }

    if (paramsSerializer != null) {
      if (utils.isFunction(paramsSerializer)) {
        config.paramsSerializer = {
          serialize: paramsSerializer
        }
      } else {
        validator.assertOptions(paramsSerializer, {
          encode: Axios_validators.function,
          serialize: Axios_validators.function
        }, true);
      }
    }

    // Set config.method
    config.method = (config.method || this.defaults.method || 'get').toLowerCase();

    // Flatten headers
    let contextHeaders = headers && utils.merge(
      headers.common,
      headers[config.method]
    );

    headers && utils.forEach(
      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
      (method) => {
        delete headers[method];
      }
    );

    config.headers = core_AxiosHeaders.concat(contextHeaders, headers);

    // filter out skipped interceptors
    const requestInterceptorChain = [];
    let synchronousRequestInterceptors = true;
    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {
        return;
      }

      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;

      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
    });

    const responseInterceptorChain = [];
    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
    });

    let promise;
    let i = 0;
    let len;

    if (!synchronousRequestInterceptors) {
      const chain = [dispatchRequest.bind(this), undefined];
      chain.unshift.apply(chain, requestInterceptorChain);
      chain.push.apply(chain, responseInterceptorChain);
      len = chain.length;

      promise = Promise.resolve(config);

      while (i < len) {
        promise = promise.then(chain[i++], chain[i++]);
      }

      return promise;
    }

    len = requestInterceptorChain.length;

    let newConfig = config;

    i = 0;

    while (i < len) {
      const onFulfilled = requestInterceptorChain[i++];
      const onRejected = requestInterceptorChain[i++];
      try {
        newConfig = onFulfilled(newConfig);
      } catch (error) {
        onRejected.call(this, error);
        break;
      }
    }

    try {
      promise = dispatchRequest.call(this, newConfig);
    } catch (error) {
      return Promise.reject(error);
    }

    i = 0;
    len = responseInterceptorChain.length;

    while (i < len) {
      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);
    }

    return promise;
  }

  getUri(config) {
    config = mergeConfig(this.defaults, config);
    const fullPath = buildFullPath(config.baseURL, config.url);
    return buildURL(fullPath, config.params, config.paramsSerializer);
  }
}

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(mergeConfig(config || {}, {
      method,
      url,
      data: (config || {}).data
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/

  function generateHTTPMethod(isForm) {
    return function httpMethod(url, data, config) {
      return this.request(mergeConfig(config || {}, {
        method,
        headers: isForm ? {
          'Content-Type': 'multipart/form-data'
        } : {},
        url,
        data
      }));
    };
  }

  Axios.prototype[method] = generateHTTPMethod();

  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);
});

/* harmony default export */ var core_Axios = (Axios);

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/cancel/CancelToken.js




/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @param {Function} executor The executor function.
 *
 * @returns {CancelToken}
 */
class CancelToken {
  constructor(executor) {
    if (typeof executor !== 'function') {
      throw new TypeError('executor must be a function.');
    }

    let resolvePromise;

    this.promise = new Promise(function promiseExecutor(resolve) {
      resolvePromise = resolve;
    });

    const token = this;

    // eslint-disable-next-line func-names
    this.promise.then(cancel => {
      if (!token._listeners) return;

      let i = token._listeners.length;

      while (i-- > 0) {
        token._listeners[i](cancel);
      }
      token._listeners = null;
    });

    // eslint-disable-next-line func-names
    this.promise.then = onfulfilled => {
      let _resolve;
      // eslint-disable-next-line func-names
      const promise = new Promise(resolve => {
        token.subscribe(resolve);
        _resolve = resolve;
      }).then(onfulfilled);

      promise.cancel = function reject() {
        token.unsubscribe(_resolve);
      };

      return promise;
    };

    executor(function cancel(message, config, request) {
      if (token.reason) {
        // Cancellation has already been requested
        return;
      }

      token.reason = new cancel_CanceledError(message, config, request);
      resolvePromise(token.reason);
    });
  }

  /**
   * Throws a `CanceledError` if cancellation has been requested.
   */
  throwIfRequested() {
    if (this.reason) {
      throw this.reason;
    }
  }

  /**
   * Subscribe to the cancel signal
   */

  subscribe(listener) {
    if (this.reason) {
      listener(this.reason);
      return;
    }

    if (this._listeners) {
      this._listeners.push(listener);
    } else {
      this._listeners = [listener];
    }
  }

  /**
   * Unsubscribe from the cancel signal
   */

  unsubscribe(listener) {
    if (!this._listeners) {
      return;
    }
    const index = this._listeners.indexOf(listener);
    if (index !== -1) {
      this._listeners.splice(index, 1);
    }
  }

  /**
   * Returns an object that contains a new `CancelToken` and a function that, when called,
   * cancels the `CancelToken`.
   */
  static source() {
    let cancel;
    const token = new CancelToken(function executor(c) {
      cancel = c;
    });
    return {
      token,
      cancel
    };
  }
}

/* harmony default export */ var cancel_CancelToken = (CancelToken);

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/helpers/spread.js


/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 *
 * @returns {Function}
 */
function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
}

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/helpers/isAxiosError.js




/**
 * Determines whether the payload is an error thrown by Axios
 *
 * @param {*} payload The value to test
 *
 * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
 */
function isAxiosError(payload) {
  return utils.isObject(payload) && (payload.isAxiosError === true);
}

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/helpers/HttpStatusCode.js
const HttpStatusCode = {
  Continue: 100,
  SwitchingProtocols: 101,
  Processing: 102,
  EarlyHints: 103,
  Ok: 200,
  Created: 201,
  Accepted: 202,
  NonAuthoritativeInformation: 203,
  NoContent: 204,
  ResetContent: 205,
  PartialContent: 206,
  MultiStatus: 207,
  AlreadyReported: 208,
  ImUsed: 226,
  MultipleChoices: 300,
  MovedPermanently: 301,
  Found: 302,
  SeeOther: 303,
  NotModified: 304,
  UseProxy: 305,
  Unused: 306,
  TemporaryRedirect: 307,
  PermanentRedirect: 308,
  BadRequest: 400,
  Unauthorized: 401,
  PaymentRequired: 402,
  Forbidden: 403,
  NotFound: 404,
  MethodNotAllowed: 405,
  NotAcceptable: 406,
  ProxyAuthenticationRequired: 407,
  RequestTimeout: 408,
  Conflict: 409,
  Gone: 410,
  LengthRequired: 411,
  PreconditionFailed: 412,
  PayloadTooLarge: 413,
  UriTooLong: 414,
  UnsupportedMediaType: 415,
  RangeNotSatisfiable: 416,
  ExpectationFailed: 417,
  ImATeapot: 418,
  MisdirectedRequest: 421,
  UnprocessableEntity: 422,
  Locked: 423,
  FailedDependency: 424,
  TooEarly: 425,
  UpgradeRequired: 426,
  PreconditionRequired: 428,
  TooManyRequests: 429,
  RequestHeaderFieldsTooLarge: 431,
  UnavailableForLegalReasons: 451,
  InternalServerError: 500,
  NotImplemented: 501,
  BadGateway: 502,
  ServiceUnavailable: 503,
  GatewayTimeout: 504,
  HttpVersionNotSupported: 505,
  VariantAlsoNegotiates: 506,
  InsufficientStorage: 507,
  LoopDetected: 508,
  NotExtended: 510,
  NetworkAuthenticationRequired: 511,
};

Object.entries(HttpStatusCode).forEach(([key, value]) => {
  HttpStatusCode[value] = key;
});

/* harmony default export */ var helpers_HttpStatusCode = (HttpStatusCode);

;// CONCATENATED MODULE: ../../../../../../../../node_modules/axios/lib/axios.js




















/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 *
 * @returns {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  const context = new core_Axios(defaultConfig);
  const instance = bind(core_Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, core_Axios.prototype, context, {allOwnKeys: true});

  // Copy context to instance
  utils.extend(instance, context, null, {allOwnKeys: true});

  // Factory for creating new instances
  instance.create = function create(instanceConfig) {
    return createInstance(mergeConfig(defaultConfig, instanceConfig));
  };

  return instance;
}

// Create the default instance to be exported
const axios = createInstance(lib_defaults);

// Expose Axios class to allow class inheritance
axios.Axios = core_Axios;

// Expose Cancel & CancelToken
axios.CanceledError = cancel_CanceledError;
axios.CancelToken = cancel_CancelToken;
axios.isCancel = isCancel;
axios.VERSION = VERSION;
axios.toFormData = helpers_toFormData;

// Expose AxiosError class
axios.AxiosError = core_AxiosError;

// alias for CanceledError for backward compatibility
axios.Cancel = axios.CanceledError;

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};

axios.spread = spread;

// Expose isAxiosError
axios.isAxiosError = isAxiosError;

// Expose mergeConfig
axios.mergeConfig = mergeConfig;

axios.AxiosHeaders = core_AxiosHeaders;

axios.formToJSON = thing => helpers_formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);

axios.getAdapter = adapters.getAdapter;

axios.HttpStatusCode = helpers_HttpStatusCode;

axios.default = axios;

// this module should only have a default export
/* harmony default export */ var lib_axios = (axios);

// EXTERNAL MODULE: ../../../../../../../../node_modules/p-queue/dist/index.js
var dist = __webpack_require__(781);
;// CONCATENATED MODULE: ./src/Connector/DataConnector.ts



const HTTP_FORBIDDEN = 403;
const HTTP_NOT_FOUND = 404;
const HTTP_CONFLICT = 409;
const ERROR_UNKNOWN = 'UNKNOWN';
const TIMEOUT_SEC = 30;
function timeout(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
}
class DataConnector {
    apiConfiguration;
    queue = new dist/* default */.Z({ concurrency: 1 });
    rubricDataId;
    currentVersion;
    rubric;
    _isSaving = false;
    hasError = false;
    errorListeners = [];
    constructor(rubric, apiConfiguration, rubricDataId, currentVersion) {
        this.rubric = rubric;
        this.rubricDataId = rubricDataId;
        this.currentVersion = currentVersion;
        this.apiConfiguration = apiConfiguration;
    }
    addErrorListener(errorListener) {
        this.errorListeners.push(errorListener);
    }
    removeErrorListener(errorListener) {
        const index = this.errorListeners.indexOf(errorListener);
        if (index >= 0) {
            this.errorListeners.splice(index, 1);
        }
    }
    get isDummyRequest() {
        return this.currentVersion === null;
    }
    get processingSize() {
        return this.queue.pending + this.queue.size;
    }
    get isSaving() {
        return this._isSaving;
    }
    beginSaving() {
        this._isSaving = true;
    }
    endSaving() {
        this._isSaving = false;
    }
    updateRubric(rubric) {
        this.addToQueue(async () => {
            const parameters = {
                'rubricData': JSON.stringify({ 'use_scores': rubric.useScores, 'use_relative_weights': rubric.useRelativeWeights })
            };
            await this.executeAPIRequest(this.apiConfiguration.updateRubricURL, parameters);
        });
    }
    resetRubricAbsoluteWeights() {
        this.addToQueue(async () => {
            const res = await this.executeAPIRequest(this.apiConfiguration.resetRubricAbsoluteWeightsURL, {});
            if (this.isDummyRequest || this.hasError) {
                return;
            }
            Rubric.resetAbsoluteWeights(this.rubric);
            const newLevelScores = Object.fromEntries(res.rubric.levels.map((o) => ([o.id, o.score])));
            this.rubric.levels.forEach(level => {
                level.score = newLevelScores[level.id];
            });
            this.rubric.useRelativeWeights = true;
        });
    }
    addLevel(level, index) {
        this.addToQueue(async () => {
            const parameters = {
                'newSort': index + 1,
                'levelData': JSON.stringify(level)
            };
            const res = await this.executeAPIRequest(this.apiConfiguration.addLevelURL, parameters);
            if (this.isDummyRequest || this.hasError) {
                return;
            }
            const oldId = level.id;
            level.id = String(res.level.id);
            this.rubric.setChoicesLevelId(oldId, level.id);
        });
    }
    addTreeNode(treeNode, parentTreeNode, index) {
        this.addToQueue(async () => {
            const parameters = {
                'treeNodeData': JSON.stringify({ type: treeNode.getType(), ...treeNode }),
                'newParentId': parseInt(parentTreeNode.id),
                'newSort': index + 1
            };
            const res = await this.executeAPIRequest(this.apiConfiguration.addTreeNodeURL, parameters);
            if (this.isDummyRequest || this.hasError) {
                return;
            }
            const oldId = treeNode.id;
            treeNode.id = String(res.tree_node.id);
            if (res.tree_node.type === 'criterium') {
                this.rubric.setChoicesCriteriumId(oldId, treeNode.id);
            }
        });
    }
    deleteLevel(level) {
        this.addToQueue(async () => {
            const parameters = {
                'levelData': JSON.stringify(level)
            };
            await this.executeAPIRequest(this.apiConfiguration.deleteLevelURL, parameters);
        });
    }
    deleteTreeNode(treeNode) {
        this.addToQueue(async () => {
            const parameters = {
                'treeNodeData': JSON.stringify(treeNode)
            };
            await this.executeAPIRequest(this.apiConfiguration.deleteTreeNodeURL, parameters);
        });
    }
    moveLevel(level, newIndex) {
        this.addToQueue(async () => {
            const parameters = {
                'levelData': JSON.stringify(level),
                'newSort': newIndex + 1
            };
            await this.executeAPIRequest(this.apiConfiguration.moveLevelURL, parameters);
        });
    }
    moveTreeNode(treeNode, newParentNode, newIndex) {
        this.addToQueue(async () => {
            const parameters = {
                'treeNodeData': JSON.stringify(treeNode),
                'newParentId': parseInt(newParentNode.id),
                'newSort': newIndex + 1
            };
            await this.executeAPIRequest(this.apiConfiguration.moveTreeNodeURL, parameters);
        });
    }
    updateChoice(choice, criterium, level) {
        this.addToQueue(async () => {
            const parameters = {
                'choiceData': JSON.stringify(choice.toJSON(criterium.id, level.id)),
            };
            await this.executeAPIRequest(this.apiConfiguration.updateChoiceURL, parameters);
        });
    }
    updateLevel(level) {
        this.addToQueue(async () => {
            const parameters = {
                'levelData': JSON.stringify(level)
            };
            await this.executeAPIRequest(this.apiConfiguration.updateLevelURL, parameters);
        });
    }
    updateTreeNode(treeNode) {
        this.addToQueue(async () => {
            const parameters = {
                'treeNodeData': JSON.stringify({ type: treeNode.getType(), ...treeNode })
            };
            await this.executeAPIRequest(this.apiConfiguration.updateTreeNodeURL, parameters);
        });
    }
    addToQueue(callback) {
        if (this.hasError) {
            return;
        }
        this.queue.add(async () => {
            await callback();
        });
        this.queue.onIdle().then(this.endSaving.bind(this));
    }
    logResponse(data) {
        const responseEl = document.getElementById('server-response');
        if (responseEl) {
            if (typeof data === 'object') {
                responseEl.innerHTML = JSON.stringify(data, null, 4);
            }
            else {
                responseEl.innerHTML = `<div>An error occurred:</div>${data}`;
            }
        }
    }
    async executeAPIRequest(apiURL, parameters) {
        this.beginSaving();
        if (this.isDummyRequest) {
            await timeout(300); // Simulate a save
            return {};
        }
        else {
            parameters['rubricDataId'] = this.rubricDataId;
            parameters['version'] = this.currentVersion;
            const formData = new FormData();
            for (const [key, value] of Object.entries(parameters)) {
                formData.set(key, value);
            }
            try {
                let res;
                try {
                    res = await lib_axios.post(apiURL, formData, { timeout: TIMEOUT_SEC * 1000 });
                }
                catch (err) {
                    this.logResponse(err);
                    throw err;
                }
                this.logResponse(res.data);
                if (typeof res.data === 'object') {
                    if (res.data.error) {
                        throw res.data.error;
                    }
                    else {
                        this.rubricDataId = res.data.rubric.id;
                        this.currentVersion = res.data.rubric.version;
                        return res.data;
                    }
                }
                else {
                    throw { 'code': ERROR_UNKNOWN };
                }
            }
            catch (err) {
                let code;
                if (err.isAxiosError && err.message?.toLowerCase().indexOf('timeout') !== -1) {
                    code = 'timeout';
                }
                else if ([HTTP_FORBIDDEN, HTTP_NOT_FOUND, HTTP_CONFLICT, ERROR_UNKNOWN].includes(err.code)) {
                    if (err.code === HTTP_FORBIDDEN) {
                        code = 'forbidden';
                    }
                    else if (err.code === HTTP_NOT_FOUND) {
                        code = 'notfound';
                    }
                    else if (err.code === HTTP_CONFLICT) {
                        code = 'conflict';
                    }
                    else if (err.code === ERROR_UNKNOWN) {
                        code = 'unknown';
                    }
                }
                else {
                    code = 'unknown';
                }
                this.hasError = true;
                this.errorListeners.forEach(errorListener => errorListener.setError(code));
                return err;
            }
        }
    }
}

;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/RubricPane.vue?vue&type=script&lang=ts
var RubricPanevue_type_script_lang_ts_a, RubricPanevue_type_script_lang_ts_b, _c, _d, _e;
















let RubricPane = class RubricPane extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    id;
    rubric;
    selectedCluster;
    otherSelectedCluster;
    bannedForDrop;
    clusterActionsEnabled;
    categoryActionsEnabled;
    menuActionsId;
    editCategoryColorId;
    draggableDisabled;
    isEditing;
    dragItemType;
    showSplitView;
    selectedCriterium;
    dataConnector;
    categoriesTransitionName = '';
    showClusters = false;
    categoriesAddingCriterium = {};
    mounted() {
        window.setTimeout(() => {
            this.categoriesTransitionName = 'selected-fade';
        }, 100);
        this.initScrollHandler();
    }
    initScrollHandler() {
        /* // todo: Integrate this code, currently it's conflicting with the mouse handler in the template
        const slider = this.$refs['cluster-content'];
        if (!slider) { return; }
        let startX: number;
        let scrollLeft: number;
        let isDown: boolean;
        slider.addEventListener('mousedown', e => {
            isDown = true;
            startX = e.pageX - slider.offsetLeft;
            scrollLeft = slider.scrollLeft;
        });
        slider.addEventListener('mouseleave', () => {
            isDown = false;
        });
        slider.addEventListener('mouseup', () => {
            isDown = false;
        });
        slider.addEventListener('mousemove', e => {
            if (!isDown) return;
            e.preventDefault();
            const x = e.pageX - slider.offsetLeft;
            slider.scrollLeft = scrollLeft - (x - startX);
        }); */
    }
    get clusters() {
        return [...this.rubric.clusters];
    }
    get categories() {
        if (!this.selectedCluster) {
            return [];
        }
        return [...this.selectedCluster.categories];
    }
    // Selection
    toggleShowClusters() {
        this.showClusters = !this.showClusters;
        this.$emit('dialog-new-cluster', '');
    }
    isSelected(item) {
        if (item instanceof Cluster) {
            return item === this.selectedCluster;
        }
        else if (item instanceof Criterium) {
            return item === this.selectedCriterium;
        }
        return false;
    }
    selectCluster(cluster) {
        this.$emit('cluster-selected', cluster, this.id);
    }
    selectCriterium(criterium) {
        this.$emit('criterium-selected', criterium);
    }
    // Add TreeNodes
    addCluster(cluster) {
        this.rubric.addChild(cluster, this.rubric.clusters.length);
        this.dataConnector?.addTreeNode(cluster, this.rubric, this.rubric.clusters.length);
        const category = new Category();
        category.color = '';
        cluster.addChild(category, 0);
        this.dataConnector?.addTreeNode(category, cluster, 0);
        this.selectCluster(cluster);
    }
    addCategory(category) {
        this.selectedCluster.addChild(category, this.selectedCluster.categories.length);
        this.dataConnector?.addTreeNode(category, this.selectedCluster, this.selectedCluster.categories.length);
        this.updateFirstCategoryIfNeeded();
    }
    updateFirstCategoryIfNeeded() {
        if (this.selectedCluster.categories.length === 2) {
            const firstCategory = this.selectedCluster.categories[0];
            if (firstCategory.title === '') {
                firstCategory.title = 'Categorie';
                this.dataConnector?.updateTreeNode(firstCategory);
            }
        }
    }
    onCategoryAddingChanged() {
        this.$nextTick(() => {
            const clusterContent = this.$refs['cluster-content'];
            if (clusterContent) {
                clusterContent.scrollTo(clusterContent.scrollWidth, 0);
            }
            //(this.$refs['btn-category-add'] as HTMLElement).blur();
        });
    }
    onSelectedClusterChanged() {
        this.$emit('dialog-new-category', '');
    }
    addCriterium(category, criterium) {
        category.addChild(criterium, category.criteria.length);
        this.dataConnector?.addTreeNode(criterium, category, category.criteria.length);
    }
    addingCriteriumForCategory(category, adding) {
        if (typeof this.categoriesAddingCriterium[category.id] === 'undefined') {
            external_commonjs_vue_commonjs2_vue_root_Vue_default().set(this.categoriesAddingCriterium, category.id, adding);
        }
        else {
            this.categoriesAddingCriterium[category.id] = adding;
        }
    }
    /*@Watch('isEditing')
    // Not sure yet if I want to use this, since the result is a bit unsatisfactory. leaving this here for now.
    onEditStateChanged() {
        if (this.isEditing) {
            this.$nextTick(()=> {
                const nameInput = document.querySelector('.name-input') as HTMLElement;
                if (nameInput) {
                    if (HTMLElement.prototype.scrollIntoViewIfNeeded) {
                        nameInput.scrollIntoViewIfNeeded();
                    } else {
                        nameInput.scrollIntoView();
                    }
                }
            });
        }
    }*/
    // Menu Actions
    onStartEdit(item) {
        this.$emit('start-edit', item);
    }
    onFinishEdit(item, newTitle, canceled = false) {
        this.$emit('finish-edit', item, newTitle, canceled);
    }
    onRemove(item) {
        this.$emit('remove', item);
    }
    // Drag & Drop
    startDrag(event, type) {
        this.$emit('start-drag', event, type);
    }
    endDrag() {
        this.$emit('end-drag');
    }
    dragMouseOver(elementId) {
        this.$emit('over-element', elementId);
    }
    dragMouseOut() {
        this.$emit('over-element', '');
    }
    get clusterDragging() {
        return this.dragItemType === 'cluster';
    }
    get categoryDragging() {
        return this.dragItemType === 'category';
    }
    get criteriumDragging() {
        return this.dragItemType === 'criterium';
    }
    onMoveCluster(event) {
        return event.related.parentElement.id !== this.bannedForDrop;
    }
    onMoveCategory(event) {
        return event.related.parentElement.id !== this.bannedForDrop;
    }
    onMoveCriterium(event) {
        return event.related.parentElement?.parentElement.id !== this.bannedForDrop;
    }
    onChangeCluster(event) {
        if (event.added && event.added.element) {
            const oldIndex = this.rubric.clusters.indexOf(event.added.element);
            this.rubric.moveChild(event.added.element, event.added.newIndex, oldIndex);
            this.dataConnector?.moveTreeNode(event.added.element, this.rubric, event.added.newIndex);
        }
        else if (event.moved) {
            this.rubric.moveChild(event.moved.element, event.moved.newIndex, event.moved.oldIndex);
            this.dataConnector?.moveTreeNode(event.moved.element, this.rubric, event.moved.newIndex);
        }
    }
    onChangeCategory(event) {
        if (event.added && event.added.element) {
            if (this.otherSelectedCluster === null || this.selectedCluster === this.otherSelectedCluster) {
                throw new Error(''); // Todo: meaningful message
            }
            const { element, newIndex } = event.added;
            // Notify false prevents the choices of the category's criteria to be removed at the root level.
            // Is there a better way?
            this.otherSelectedCluster.removeChild(element, false);
            this.selectedCluster.addChild(element, newIndex);
            this.dataConnector?.moveTreeNode(element, this.selectedCluster, newIndex);
        }
        else if (event.moved) {
            const category = event.moved.element;
            const cluster = category.parent;
            cluster.moveChild(category, event.moved.newIndex, event.moved.oldIndex);
            this.dataConnector?.moveTreeNode(category, cluster, event.moved.newIndex);
        }
    }
    onChangeCriterium(event, category) {
        if (event.added && event.added.element) {
            const criterium = event.added.element;
            const oldCategory = criterium.parent;
            oldCategory.removeChild(criterium);
            category.addChild(criterium, event.added.newIndex);
            this.dataConnector?.moveTreeNode(criterium, category, event.added.newIndex);
        }
        else if (event.moved) {
            const criterium = event.moved.element;
            const category = criterium.parent;
            category.moveChild(criterium, event.moved.newIndex, event.moved.oldIndex);
            this.dataConnector?.moveTreeNode(criterium, category, event.moved.newIndex);
        }
    }
    onChangeCriteriumInCluster(event) {
        if (event.added && event.added.element) {
            const criterium = event.added.element;
            const oldCategory = criterium.parent;
            oldCategory.removeChild(criterium);
            const category = new Category();
            category.color = '';
            this.addCategory(category);
            category.addChild(criterium, event.added.newIndex);
            this.dataConnector?.moveTreeNode(criterium, category, event.added.newIndex);
        }
    }
};
__decorate([
    Prop({ type: String, required: true }),
    __metadata("design:type", String)
], RubricPane.prototype, "id", void 0);
__decorate([
    Prop({ type: Rubric, required: true }),
    __metadata("design:type", typeof (RubricPanevue_type_script_lang_ts_a = typeof Rubric !== "undefined" && Rubric) === "function" ? RubricPanevue_type_script_lang_ts_a : Object)
], RubricPane.prototype, "rubric", void 0);
__decorate([
    Prop({ type: Cluster, default: null }),
    __metadata("design:type", Object)
], RubricPane.prototype, "selectedCluster", void 0);
__decorate([
    Prop({ type: Cluster, default: null }),
    __metadata("design:type", Object)
], RubricPane.prototype, "otherSelectedCluster", void 0);
__decorate([
    Prop({ type: String, default: '' }),
    __metadata("design:type", String)
], RubricPane.prototype, "bannedForDrop", void 0);
__decorate([
    Prop({ type: Boolean, required: true }),
    __metadata("design:type", Boolean)
], RubricPane.prototype, "clusterActionsEnabled", void 0);
__decorate([
    Prop({ type: Boolean, required: true }),
    __metadata("design:type", Boolean)
], RubricPane.prototype, "categoryActionsEnabled", void 0);
__decorate([
    Prop({ type: String, required: true }),
    __metadata("design:type", String)
], RubricPane.prototype, "menuActionsId", void 0);
__decorate([
    Prop({ type: String, required: true }),
    __metadata("design:type", String)
], RubricPane.prototype, "editCategoryColorId", void 0);
__decorate([
    Prop({ type: Boolean, required: true }),
    __metadata("design:type", Boolean)
], RubricPane.prototype, "draggableDisabled", void 0);
__decorate([
    Prop({ type: Boolean, required: true }),
    __metadata("design:type", Boolean)
], RubricPane.prototype, "isEditing", void 0);
__decorate([
    Prop({ type: String, default: '' }),
    __metadata("design:type", String)
], RubricPane.prototype, "dragItemType", void 0);
__decorate([
    Prop({ type: Boolean, default: false }),
    __metadata("design:type", Boolean)
], RubricPane.prototype, "showSplitView", void 0);
__decorate([
    Prop(Criterium),
    __metadata("design:type", Object)
], RubricPane.prototype, "selectedCriterium", void 0);
__decorate([
    Prop(DataConnector),
    __metadata("design:type", Object)
], RubricPane.prototype, "dataConnector", void 0);
__decorate([
    Watch('categoryActionsEnabled'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], RubricPane.prototype, "onCategoryAddingChanged", null);
__decorate([
    Watch('selectedCluster'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], RubricPane.prototype, "onSelectedClusterChanged", null);
RubricPane = __decorate([
    vue_class_component_esm({
        name: 'rubric-pane',
        components: { ClusterView: Rubric_ClusterView, CategoryView: Rubric_CategoryView, CriteriumView: Rubric_CriteriumView, NewCluster: Rubric_NewCluster, NewCategory: Rubric_NewCategory, NewCriterium: Rubric_NewCriterium, NameInput: Rubric_NameInput, SplitViewButton: Rubric_SplitViewButton, draggable: (vuedraggable_umd_default()) }
    })
], RubricPane);
/* harmony default export */ var RubricPanevue_type_script_lang_ts = (RubricPane);

;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/RubricPane.vue?vue&type=script&lang=ts
 /* harmony default export */ var Rubric_RubricPanevue_type_script_lang_ts = (RubricPanevue_type_script_lang_ts); 
// EXTERNAL MODULE: ../../../../../../../../node_modules/@intlify/vue-i18n-loader/lib/index.js!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/RubricPane.vue?vue&type=custom&index=0&blockType=i18n
var RubricPanevue_type_custom_index_0_blockType_i18n = __webpack_require__(173);
var RubricPanevue_type_custom_index_0_blockType_i18n_default = /*#__PURE__*/__webpack_require__.n(RubricPanevue_type_custom_index_0_blockType_i18n);
;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/RubricPane.vue?vue&type=custom&index=0&blockType=i18n
 /* harmony default export */ var Rubric_RubricPanevue_type_custom_index_0_blockType_i18n = ((RubricPanevue_type_custom_index_0_blockType_i18n_default())); 
;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/RubricPane.vue





/* normalize component */
;
var RubricPane_component = normalizeComponent(
  Rubric_RubricPanevue_type_script_lang_ts,
  RubricPanevue_type_template_id_e26a1792_render,
  RubricPanevue_type_template_id_e26a1792_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* custom blocks */
;
if (typeof Rubric_RubricPanevue_type_custom_index_0_blockType_i18n === 'function') Rubric_RubricPanevue_type_custom_index_0_blockType_i18n(RubricPane_component)

/* harmony default export */ var Rubric_RubricPane = (RubricPane_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/CriteriumDetailsView.vue?vue&type=template&id=74b266a6&scoped=true
var CriteriumDetailsViewvue_type_template_id_74b266a6_scoped_true_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:"criterium-details-wrapper"},[_c('transition',{attrs:{"name":"border-flash","mode":"out-in"}},[(_vm.criterium !== null)?_c('div',{key:_vm.criterium ? _vm.criterium.id : 'none',staticClass:"criterium-details",class:{'mod-levels': !!_vm.criteriumLevels.length || _vm.initCustomLevels,'is-show-formatting': _vm.showFormatting}},[(_vm.criterium)?_c('div',{staticStyle:{"flex":"1"}},[_c('div',{staticClass:"criterium-details-header"},[_c('button',{staticClass:"btn-close",attrs:{"aria-label":_vm.$t('close'),"title":_vm.$t('close')},on:{"click":function($event){return _vm.$emit('close')}}},[_c('i',{staticClass:"fa fa-close",attrs:{"aria-hidden":"true"}})]),_c('div',{staticClass:"criterium-details-title"},[_c('label',{attrs:{"for":"criterium-title"}},[_vm._v(_vm._s(_vm.$t('criterium'))+": ")]),_c('textarea',{directives:[{name:"model",rawName:"v-model",value:(_vm.criterium.title),expression:"criterium.title"}],ref:"criteriumTitleField",staticClass:"input-detail",attrs:{"id":"criterium-title","name":"title"},domProps:{"value":(_vm.criterium.title)},on:{"input":[function($event){if($event.target.composing)return;_vm.$set(_vm.criterium, "title", $event.target.value)},_vm.onCriteriumChange]}})])]),_c('div',{staticClass:"criterium-details-weight"},[(_vm.rubric.useWeights)?_c('div',{staticClass:"criterium-weight"},[(_vm.rubric.useRelativeWeights)?[_vm._v(" "+_vm._s(_vm.$t('weight'))+": "),_c('span',{class:{'m-error': _vm.rubric.eqRestWeight < 0}},[_vm._v(_vm._s(_vm.criterium.rel_weight === null ? _vm.rubric.eqRestWeight.toLocaleString() : _vm.criterium.rel_weight)+" %")]),_vm._v(" "),(_vm.rubric.eqRestWeight < 0)?_c('i',{staticClass:"fa fa-exclamation-circle m-error",attrs:{"aria-hidden":"true"}}):_vm._e()]:[_c('label',{attrs:{"for":"weight"}},[_vm._v(_vm._s(_vm.$t('weight'))+":")]),(!_vm.criteriumLevels.length && !_vm.initCustomLevels)?[_c('input',{directives:[{name:"model",rawName:"v-model.number",value:(_vm.criterium.weight),expression:"criterium.weight",modifiers:{"number":true}}],staticClass:"input-detail",attrs:{"type":"number","id":"weight","min":"0","max":"100","required":""},domProps:{"value":(_vm.criterium.weight)},on:{"input":[function($event){if($event.target.composing)return;_vm.$set(_vm.criterium, "weight", _vm._n($event.target.value))},_vm.onWeightChange],"blur":function($event){return _vm.$forceUpdate()}}}),_vm._v(" %")]:_c('span',[_vm._v("100 %")])]],2):_vm._e(),(!_vm.showFormatting)?_c('div',[_c('a',{staticClass:"m-btn-action",attrs:{"href":"#"},on:{"click":function($event){$event.preventDefault();_vm.showFormatting=true}}},[_vm._v(_vm._s(_vm.$t('formatting')))])]):_vm._e()]),(!_vm.criteriumLevels.length && !_vm.initCustomLevels)?[_c('a',{staticClass:"m-btn-action",attrs:{"href":"#"},on:{"click":function($event){$event.preventDefault();_vm.initCustomLevels = true}}},[_vm._v(_vm._s(_vm.$t('use-custom-levels')))]),_c('ul',{staticClass:"b-criterium-levels"},_vm._l((_vm.rubric.rubricLevels),function(level){return _c('li',{key:level.id,staticClass:"b-criterium-level"},[_c('criterium-level-view',{attrs:{"rubric":_vm.rubric,"criterium":_vm.criterium,"level":level},on:{"input":_vm.updateHeight,"change":function($event){return _vm.onChoiceChange($event, _vm.criterium, level)}}})],1)}),0)]:_c('div',[(!_vm.criteriumLevels.length)?_c('a',{staticClass:"m-btn-action",attrs:{"href":"#"},on:{"click":function($event){$event.preventDefault();_vm.initCustomLevels = false}}},[_vm._v(_vm._s(_vm.$t('cancel-custom-levels')))]):_vm._e(),_c('levels',{attrs:{"rubric":_vm.rubric,"data-connector":_vm.dataConnector,"criterium":_vm.criterium},on:{"level-added":function($event){_vm.initCustomLevels = false}}})],1),_c('a',{staticClass:"rubric-return",attrs:{"href":"#","role":"button"},on:{"click":function($event){$event.preventDefault();return _vm.$emit('close')}}},[_c('i',{staticClass:"fa fa-arrow-left",attrs:{"aria-hidden":"true"}}),_vm._v(" "+_vm._s(_vm.$t('back-to-rubric')))])],2):_vm._e(),(_vm.showFormatting)?_c('formatting-help',{on:{"close":function($event){_vm.showFormatting = false}}}):_vm._e()],1):_vm._e()])],1)
}
var CriteriumDetailsViewvue_type_template_id_74b266a6_scoped_true_staticRenderFns = []


// EXTERNAL MODULE: ../../../../../../../../node_modules/debounce/index.js
var debounce = __webpack_require__(678);
var debounce_default = /*#__PURE__*/__webpack_require__.n(debounce);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/CriteriumLevelView.vue?vue&type=template&id=2132aeec
var CriteriumLevelViewvue_type_template_id_2132aeec_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',[_c('label',{staticClass:"b-criterium-level-title",attrs:{"for":`level-${_vm.level.id}`}},[_vm._v(_vm._s(_vm.level.title)+" "),(_vm.level.description)?_c('span',{staticClass:"fa fa-question-circle criterium-level-description",attrs:{"title":_vm.level.description}}):_vm._e()]),_c('div',{staticClass:"criterium-level-input"},[_c('div',{staticClass:"criterium-level-input-area",class:{ 'is-using-orig-scores': _vm.rubric.useScores && !_vm.rubric.useRelativeWeights && _vm.rubric.hasAbsoluteWeights }},[_c('textarea',{directives:[{name:"model",rawName:"v-model",value:(_vm.choice.feedback),expression:"choice.feedback"}],ref:"feedbackField",staticClass:"criterium-level-feedback input-detail",class:{ 'is-input-active': _vm.isFeedbackInputActive || !_vm.choice.feedback },attrs:{"id":`level-${_vm.level.id}`,"placeholder":_vm.$t('enter-level-description')},domProps:{"value":(_vm.choice.feedback)},on:{"input":[function($event){if($event.target.composing)return;_vm.$set(_vm.choice, "feedback", $event.target.value)},_vm.onFeedbackChange],"focus":function($event){_vm.isFeedbackInputActive = true},"blur":function($event){_vm.isFeedbackInputActive = false}}}),_c('div',{staticClass:"criterium-level-markup-preview",class:{'is-input-active': _vm.isFeedbackInputActive || !_vm.choice.feedback},domProps:{"innerHTML":_vm._s(_vm.marked(_vm.choice.feedback))}})]),(_vm.rubric.useScores)?[(_vm.rubric.useRelativeWeights || !_vm.rubric.hasAbsoluteWeights)?_c('div',{staticStyle:{"font-size":"1.3125rem","margin-top":".05em","text-align":"right","width":"1.5em"}},[_vm._v(_vm._s(_vm.level.score))]):_c('div',{staticClass:"criterium-level-score"},[(_vm.choice.hasFixedScore)?_c('button',{staticClass:"remove-fixed",attrs:{"title":_vm.$t('fixed-score')},on:{"click":_vm.removeFixedScore}},[_c('i',{staticClass:"fa fa-lock"}),_c('i',{staticClass:"fa fa-unlock"})]):_vm._e(),(_vm.choice.hasFixedScore)?_c('input',{directives:[{name:"model",rawName:"v-model.number",value:(_vm.choice.fixedScore),expression:"choice.fixedScore",modifiers:{"number":true}}],staticClass:"fixed-score input-detail",attrs:{"type":"number","required":"","min":"0","max":"100"},domProps:{"value":(_vm.choice.fixedScore)},on:{"input":[function($event){if($event.target.composing)return;_vm.$set(_vm.choice, "fixedScore", _vm._n($event.target.value))},_vm.onChange],"blur":function($event){return _vm.$forceUpdate()}}}):_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.rubric.getChoiceScore(_vm.criterium, _vm.level)),expression:"rubric.getChoiceScore(criterium, level)"}],staticClass:"input-detail",attrs:{"type":"number","required":"","min":"0","max":"100"},domProps:{"value":(_vm.rubric.getChoiceScore(_vm.criterium, _vm.level))},on:{"input":[function($event){if($event.target.composing)return;_vm.$set(_vm.rubric, "getChoiceScore(criterium, level)", $event.target.value)},_vm.changeChoiceScore]}})])]:_vm._e()],2)])
}
var CriteriumLevelViewvue_type_template_id_2132aeec_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/CriteriumLevelView.vue?vue&type=script&lang=ts
var CriteriumLevelViewvue_type_script_lang_ts_a, CriteriumLevelViewvue_type_script_lang_ts_b, CriteriumLevelViewvue_type_script_lang_ts_c;









let CriteriumLevelView = class CriteriumLevelView extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    isFeedbackInputActive = false;
    rubric;
    level;
    criterium;
    constructor() {
        super();
        this.onChange = debounce_default()(this.onChange, 750);
    }
    marked(rawString) {
        return purify_default().sanitize(marked(rawString));
    }
    get choice() {
        return this.rubric.getChoice(this.criterium, this.level);
    }
    removeFixedScore() {
        this.choice.hasFixedScore = false;
        this.choice.fixedScore = Choice.FIXED_SCORE;
        this.emitChange();
        this.$forceUpdate();
    }
    changeChoiceScore(event) {
        const el = event.target;
        if (!el.checkValidity()) {
            el.reportValidity();
            return;
        }
        const value = parseFloat(event.target.value);
        if (!isNaN(value)) {
            this.choice.hasFixedScore = true;
            this.choice.fixedScore = value;
            this.emitChange();
            this.$forceUpdate();
        }
    }
    emitChange() {
        this.$emit('change', this.choice);
    }
    onChange(event) {
        const el = event.target;
        if (!el.checkValidity()) {
            el.reportValidity();
            return;
        }
        this.emitChange();
    }
    onFeedbackChange(e) {
        this.$emit('input', e);
        this.emitChange();
    }
};
__decorate([
    Prop({ type: Rubric, required: true }),
    __metadata("design:type", typeof (CriteriumLevelViewvue_type_script_lang_ts_a = typeof Rubric !== "undefined" && Rubric) === "function" ? CriteriumLevelViewvue_type_script_lang_ts_a : Object)
], CriteriumLevelView.prototype, "rubric", void 0);
__decorate([
    Prop({ type: Level, required: true }),
    __metadata("design:type", typeof (CriteriumLevelViewvue_type_script_lang_ts_b = typeof Level !== "undefined" && Level) === "function" ? CriteriumLevelViewvue_type_script_lang_ts_b : Object)
], CriteriumLevelView.prototype, "level", void 0);
__decorate([
    Prop({ type: Criterium, required: true }),
    __metadata("design:type", typeof (CriteriumLevelViewvue_type_script_lang_ts_c = typeof Criterium !== "undefined" && Criterium) === "function" ? CriteriumLevelViewvue_type_script_lang_ts_c : Object)
], CriteriumLevelView.prototype, "criterium", void 0);
CriteriumLevelView = __decorate([
    vue_class_component_esm({
        name: 'criterium-level-view'
    }),
    __metadata("design:paramtypes", [])
], CriteriumLevelView);
/* harmony default export */ var CriteriumLevelViewvue_type_script_lang_ts = (CriteriumLevelView);

;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/CriteriumLevelView.vue?vue&type=script&lang=ts
 /* harmony default export */ var Rubric_CriteriumLevelViewvue_type_script_lang_ts = (CriteriumLevelViewvue_type_script_lang_ts); 
;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-66.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-66.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-66.use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-66.use[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/CriteriumLevelView.vue?vue&type=style&index=0&id=2132aeec&prod&lang=scss
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/CriteriumLevelView.vue?vue&type=style&index=0&id=2132aeec&prod&lang=scss

// EXTERNAL MODULE: ../../../../../../../../node_modules/@intlify/vue-i18n-loader/lib/index.js!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/CriteriumLevelView.vue?vue&type=custom&index=0&blockType=i18n
var CriteriumLevelViewvue_type_custom_index_0_blockType_i18n = __webpack_require__(758);
var CriteriumLevelViewvue_type_custom_index_0_blockType_i18n_default = /*#__PURE__*/__webpack_require__.n(CriteriumLevelViewvue_type_custom_index_0_blockType_i18n);
;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/CriteriumLevelView.vue?vue&type=custom&index=0&blockType=i18n
 /* harmony default export */ var Rubric_CriteriumLevelViewvue_type_custom_index_0_blockType_i18n = ((CriteriumLevelViewvue_type_custom_index_0_blockType_i18n_default())); 
;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/CriteriumLevelView.vue



;


/* normalize component */

var CriteriumLevelView_component = normalizeComponent(
  Rubric_CriteriumLevelViewvue_type_script_lang_ts,
  CriteriumLevelViewvue_type_template_id_2132aeec_render,
  CriteriumLevelViewvue_type_template_id_2132aeec_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* custom blocks */
;
if (typeof Rubric_CriteriumLevelViewvue_type_custom_index_0_blockType_i18n === 'function') Rubric_CriteriumLevelViewvue_type_custom_index_0_blockType_i18n(CriteriumLevelView_component)

/* harmony default export */ var Rubric_CriteriumLevelView = (CriteriumLevelView_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/FormattingHelp.vue?vue&type=template&id=4ac185b3
var FormattingHelpvue_type_template_id_4ac185b3_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:"formatting-help"},[_c('button',{staticClass:"btn-close",attrs:{"aria-label":_vm.$t('close'),"title":_vm.$t('close')},on:{"click":function($event){return _vm.$emit('close')}}},[_c('i',{staticClass:"fa fa-close",attrs:{"aria-hidden":"true"}})]),_c('div',{staticClass:"formatting-title"},[_vm._v(_vm._s(_vm.$t('formatting-help')))]),_c('p',[_vm._v(_vm._s(_vm.$t('formatting-intro'))+":")]),_c('hr'),_c('p',{staticClass:"formatting-example"},[_vm._v(_vm._s(_vm.$t('bold-strong')))]),_c('code',[_vm._v("**"+_vm._s(_vm.$t('this-text'))+"** "+_vm._s(_vm.$t('is'))+" "+_vm._s(_vm.$t('bold'))+".")]),_c('p',[_c('strong',[_vm._v(_vm._s(_vm.$t('this-text')))]),_vm._v(" "+_vm._s(_vm.$t('is'))+" "+_vm._s(_vm.$t('bold'))+".")]),_c('hr'),_c('p',{staticClass:"formatting-example"},[_vm._v(_vm._s(_vm.$t('italic-emphasis')))]),_c('code',[_vm._v("*"+_vm._s(_vm.$t('this-text'))+"* "+_vm._s(_vm.$t('is'))+" "+_vm._s(_vm.$t('italic'))+".")]),_c('p',[_c('em',[_vm._v(_vm._s(_vm.$t('this-text')))]),_vm._v(" "+_vm._s(_vm.$t('is'))+" "+_vm._s(_vm.$t('italic'))+".")]),_c('hr'),_c('p',{staticClass:"formatting-example"},[_vm._v(_vm._s(_vm.$t('paragraphs')))]),_c('p',{staticClass:"formatting-explain"},[_vm._v(_vm._s(_vm.$t('paragraphs-explain')))]),_c('code',[_vm._v(_vm._s(_vm.$t('first-paragraph'))+"."),_c('br'),_c('br'),_vm._v(_vm._s(_vm.$t('second-paragraph'))+".")]),_c('p',[_vm._v(_vm._s(_vm.$t('first-paragraph'))+".")]),_c('p',[_vm._v(_vm._s(_vm.$t('second-paragraph'))+".")]),_c('hr'),_c('p',{staticClass:"formatting-example"},[_vm._v(_vm._s(_vm.$t('lists')))]),_c('code',[_vm._v(" - "+_vm._s(_vm.$t('first-item'))),_c('br'),_vm._v(" - "+_vm._s(_vm.$t('second-item'))),_c('br'),_vm._v(" - "+_vm._s(_vm.$t('third-item'))+" ")]),_c('ul',[_c('li',[_vm._v(_vm._s(_vm.$t('first-item')))]),_c('li',[_vm._v(_vm._s(_vm.$t('second-item')))]),_c('li',[_vm._v(_vm._s(_vm.$t('third-item')))])]),_c('hr'),_c('p',{staticClass:"formatting-example"},[_vm._v(_vm._s(_vm.$t('numbered-lists')))]),_c('code',[_vm._v(" 1. "+_vm._s(_vm.$t('first-item'))),_c('br'),_vm._v(" 2. "+_vm._s(_vm.$t('second-item'))),_c('br'),_vm._v(" 3. "+_vm._s(_vm.$t('third-item'))+" ")]),_c('ol',[_c('li',[_vm._v(_vm._s(_vm.$t('first-item')))]),_c('li',[_vm._v(_vm._s(_vm.$t('second-item')))]),_c('li',[_vm._v(_vm._s(_vm.$t('third-item')))])])])
}
var FormattingHelpvue_type_template_id_4ac185b3_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/FormattingHelp.vue?vue&type=script&lang=ts


let FormattingHelp = class FormattingHelp extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
};
FormattingHelp = __decorate([
    vue_class_component_esm({})
], FormattingHelp);
/* harmony default export */ var FormattingHelpvue_type_script_lang_ts = (FormattingHelp);

;// CONCATENATED MODULE: ./src/Components/Builder/FormattingHelp.vue?vue&type=script&lang=ts
 /* harmony default export */ var Builder_FormattingHelpvue_type_script_lang_ts = (FormattingHelpvue_type_script_lang_ts); 
;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-66.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-66.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-66.use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-66.use[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/FormattingHelp.vue?vue&type=style&index=0&id=4ac185b3&prod&lang=scss
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Components/Builder/FormattingHelp.vue?vue&type=style&index=0&id=4ac185b3&prod&lang=scss

// EXTERNAL MODULE: ../../../../../../../../node_modules/@intlify/vue-i18n-loader/lib/index.js!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/FormattingHelp.vue?vue&type=custom&index=0&blockType=i18n
var FormattingHelpvue_type_custom_index_0_blockType_i18n = __webpack_require__(461);
var FormattingHelpvue_type_custom_index_0_blockType_i18n_default = /*#__PURE__*/__webpack_require__.n(FormattingHelpvue_type_custom_index_0_blockType_i18n);
;// CONCATENATED MODULE: ./src/Components/Builder/FormattingHelp.vue?vue&type=custom&index=0&blockType=i18n
 /* harmony default export */ var Builder_FormattingHelpvue_type_custom_index_0_blockType_i18n = ((FormattingHelpvue_type_custom_index_0_blockType_i18n_default())); 
;// CONCATENATED MODULE: ./src/Components/Builder/FormattingHelp.vue



;


/* normalize component */

var FormattingHelp_component = normalizeComponent(
  Builder_FormattingHelpvue_type_script_lang_ts,
  FormattingHelpvue_type_template_id_4ac185b3_render,
  FormattingHelpvue_type_template_id_4ac185b3_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* custom blocks */
;
if (typeof Builder_FormattingHelpvue_type_custom_index_0_blockType_i18n === 'function') Builder_FormattingHelpvue_type_custom_index_0_blockType_i18n(FormattingHelp_component)

/* harmony default export */ var Builder_FormattingHelp = (FormattingHelp_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Levels/Levels.vue?vue&type=template&id=d6850a06&scoped=true
var Levelsvue_type_template_id_d6850a06_scoped_true_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{on:{"click":function($event){$event.stopPropagation();_vm.selectedLevel = null}}},[_c('div',{on:{"click":function($event){$event.stopPropagation();}}},[_c('b-table-simple',{class:{'mod-rubric': !_vm.criterium, 'mod-criterium': !!_vm.criterium}},[_c('b-thead',{staticClass:"table-head"},[_c('b-tr',{class:'table-head-row' + (!!_vm.criterium ? ' mod-criterium': ' mod-rubric')},[_c('b-th',{staticClass:"table-title"},[_vm._v(_vm._s(_vm.$t('level')))]),(_vm.rubric.useScores && !_vm.rubric.hasAbsoluteWeights)?_c('b-th',{staticClass:"table-range"},[_vm._v(_vm._s(_vm.$t('range')))]):_vm._e(),(_vm.rubric.useScores)?_c('b-th',{staticClass:"table-score"},[_vm._v(_vm._s(_vm.rubric.useRelativeWeights ? '%' : _vm.$t('points')))]):_vm._e(),_c('b-th',{staticClass:"table-default"},[_c('div',{staticClass:"table-default-header-wrap"},[_vm._v(_vm._s(_vm.$t(_vm.criterium ? 'default-trunc' : 'default'))+" "),_c('i',{staticClass:"fa fa-info-circle",attrs:{"title":_vm.$t('default-info')}})])]),_c('b-th',{staticClass:"table-actions"})],1)],1),_c('b-tbody',[_vm._l((_vm.levels),function(level,index){return [_c('b-tr',{class:_vm.rowClass(level),on:{"click":function($event){$event.stopPropagation();return _vm.onSelectLevel(level)},"mouseover":function($event){_vm.hoveredLevel = level},"mouseout":function($event){_vm.hoveredLevel = null}}},[_c('b-td',{staticClass:"table-title"},[_c('div',{staticClass:"table-title-wrap"},[_c('span',{staticClass:"level-index"},[_vm._v(_vm._s(index + 1))]),_c('b-input',{staticClass:"mod-title mod-input mod-pad",class:{'input-detail': !_vm.isEditDisabled},attrs:{"type":"text","autocomplete":"off","disabled":_vm.isEditDisabled},on:{"input":function($event){return _vm.onLevelChange(level)},"focus":function($event){return _vm.onSelectLevel(level)}},model:{value:(level.title),callback:function ($$v) {_vm.$set(level, "title", $$v)},expression:"level.title"}})],1)]),(_vm.rubric.useScores && !_vm.rubric.hasAbsoluteWeights)?_c('b-td',{staticClass:"table-range"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(level.use_range_score),expression:"level.use_range_score"}],attrs:{"type":"checkbox","disabled":_vm.isEditDisabled},domProps:{"checked":Array.isArray(level.use_range_score)?_vm._i(level.use_range_score,null)>-1:(level.use_range_score)},on:{"input":function($event){return _vm.onLevelChange(level)},"change":function($event){var $$a=level.use_range_score,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(level, "use_range_score", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(level, "use_range_score", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(level, "use_range_score", $$c)}}}})]):_vm._e(),(_vm.rubric.useScores)?_c('b-td',{staticClass:"table-score",class:{'mod-range': _vm.hasRangeScores}},[_c('div',{staticClass:"level-score-container"},[(level.useRangeScore)?[_c('b-input',{staticClass:"mod-input mod-pad mod-num",class:{'input-detail': !_vm.isEditDisabled },attrs:{"type":"number","autocomplete":"off","required":"","max":level.score === 0 ? 0 : level.score - 1,"min":"0","step":"1","disabled":_vm.isEditDisabled},on:{"input":function($event){return _vm.onLevelChange(level)},"focus":function($event){return _vm.onSelectLevel(level)}},model:{value:(level.minimum_score),callback:function ($$v) {_vm.$set(level, "minimum_score", _vm._n($$v))},expression:"level.minimum_score"}}),_c('i',{staticClass:"fa fa-caret-right range-caret",attrs:{"aria-hidden":"true"}})]:_vm._e(),_c('b-input',{staticClass:"mod-input mod-pad mod-num",class:{'input-detail': !_vm.isEditDisabled},attrs:{"type":"number","autocomplete":"off","required":"","min":"0","max":_vm.rubric.useRelativeWeights ? 100 : '',"step":"1","disabled":_vm.isEditDisabled},on:{"input":function($event){return _vm.onLevelChange(level)},"focus":function($event){return _vm.onSelectLevel(level)}},model:{value:(level.score),callback:function ($$v) {_vm.$set(level, "score", _vm._n($$v))},expression:"level.score"}})],2)]):_vm._e(),_c('b-td',{staticClass:"table-default"},[_c('input',{class:{'input-detail': !_vm.isEditDisabled},attrs:{"type":"radio","disabled":_vm.isEditDisabled},domProps:{"checked":level.isDefault},on:{"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter"))return null;return _vm.setDefault(level)},"click":function($event){return _vm.setDefault(level)}}})]),_c('b-td',{staticClass:"table-actions"},[_c('selection-controls',{staticClass:"level-actions",attrs:{"id":level.id,"is-up-disabled":_vm.isEditDisabled || index === 0,"is-down-disabled":_vm.isEditDisabled || index >= _vm.levels.length - 1,"is-remove-disabled":_vm.isEditDisabled},on:{"move-down":function($event){return _vm.moveLevelDown(level)},"move-up":function($event){return _vm.moveLevelUp(level)},"remove":function($event){return _vm.showRemoveLevelDialog(level)},"select":function($event){return _vm.onSelectLevel(level)}}})],1)],1),(_vm.criterium)?_c('b-tr',{staticClass:"table-body-row details-row",on:{"mouseover":function($event){_vm.hoveredLevel = level},"mouseout":function($event){_vm.hoveredLevel = null}}},[_c('b-td',{attrs:{"colspan":_vm.rubric.useScores ? (_vm.rubric.hasAbsoluteWeights ? 3 : 4) : 2}},[_c('div',{staticClass:"criterium-level-input-area"},[_c('textarea',{directives:[{name:"model",rawName:"v-model",value:(level.description),expression:"level.description"}],ref:"feedbackField",refInFor:true,staticClass:"criterium-level-feedback",class:{ 'input-detail': !_vm.isEditDisabled, 'is-input-active': _vm.activeDescriptionInput === level || !level.description },attrs:{"placeholder":_vm.$t('enter-level-description'),"disabled":_vm.isEditDisabled},domProps:{"value":(level.description)},on:{"input":[function($event){if($event.target.composing)return;_vm.$set(level, "description", $event.target.value)},function($event){return _vm.onLevelChange(level)}],"focus":function($event){return _vm.onDescriptionFocus(level)},"blur":function($event){_vm.activeDescriptionInput = null}}}),_c('div',{staticClass:"criterium-level-markup-preview",class:{'is-input-active': _vm.activeDescriptionInput === level || !level.description},domProps:{"innerHTML":_vm._s(_vm.marked(level.description))}})])])],1):_vm._e()]}),(_vm.newLevel)?_c('b-tr',{staticClass:"table-body-row new-level-row",class:{'mod-criterium': !!_vm.criterium}},[_c('b-td',{staticClass:"table-title"},[_c('div',{staticClass:"table-title-wrap"},[_c('span',{staticClass:"level-index"},[_vm._v(_vm._s(_vm.levels.length + 1))]),_c('b-input',{staticClass:"mod-title mod-input mod-pad input-detail",attrs:{"type":"text","autocomplete":"off","id":"level-title-new"},on:{"keydown":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter"))return null;return _vm.addLevel.apply(null, arguments)},"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"esc",27,$event.key,["Esc","Escape"]))return null;return _vm.cancelLevel.apply(null, arguments)}},model:{value:(_vm.newLevel.title),callback:function ($$v) {_vm.$set(_vm.newLevel, "title", $$v)},expression:"newLevel.title"}})],1)]),(_vm.rubric.useScores && !_vm.rubric.hasAbsoluteWeights)?_c('b-td',{staticClass:"table-range"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.newLevel.use_range_score),expression:"newLevel.use_range_score"}],attrs:{"type":"checkbox"},domProps:{"checked":Array.isArray(_vm.newLevel.use_range_score)?_vm._i(_vm.newLevel.use_range_score,null)>-1:(_vm.newLevel.use_range_score)},on:{"change":function($event){var $$a=_vm.newLevel.use_range_score,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.newLevel, "use_range_score", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.newLevel, "use_range_score", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.newLevel, "use_range_score", $$c)}}}})]):_vm._e(),(_vm.rubric.useScores)?_c('b-td',{staticClass:"table-score",class:{'mod-range': _vm.hasRangeScores}},[_c('div',{staticStyle:{"display":"flex","justify-content":"center"}},[(_vm.newLevel.useRangeScore)?[_c('b-input',{staticClass:"mod-input mod-pad mod-num",attrs:{"type":"number","autocomplete":"off","required":"","max":_vm.newLevel.score === 0 ? 0 : _vm.newLevel.score - 1,"min":"0","step":"1"},model:{value:(_vm.newLevel.minimum_score),callback:function ($$v) {_vm.$set(_vm.newLevel, "minimum_score", _vm._n($$v))},expression:"newLevel.minimum_score"}}),_c('i',{staticClass:"fa fa-caret-right range-caret",attrs:{"aria-hidden":"true"}})]:_vm._e(),_c('b-input',{staticClass:"mod-input mod-pad mod-num input-detail",attrs:{"type":"number","autocomplete":"off","required":"","min":"0","max":_vm.rubric.useRelativeWeights ? 100 : '',"step":"1"},model:{value:(_vm.newLevel.score),callback:function ($$v) {_vm.$set(_vm.newLevel, "score", _vm._n($$v))},expression:"newLevel.score"}})],2)]):_vm._e(),_c('b-td',{staticClass:"table-default"},[_c('input',{staticClass:"input-detail",attrs:{"type":"radio"},domProps:{"checked":_vm.newLevel.isDefault},on:{"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter"))return null;return _vm.setDefault(_vm.newLevel)},"click":function($event){return _vm.setDefault(_vm.newLevel)}}})]),_c('b-td',{staticClass:"table-actions"},[_c('div',{staticClass:"level-actions"},[_c('button',{staticClass:"btn btn-default btn-sm mod-level-action",attrs:{"title":_vm.$t('add')},on:{"click":function($event){$event.stopPropagation();return _vm.addLevel.apply(null, arguments)}}},[_c('i',{staticClass:"fa fa-check-circle",attrs:{"aria-hidden":"true"}}),_c('span',{staticClass:"sr-only"},[_vm._v(_vm._s(_vm.$t('add')))])]),_c('button',{staticClass:"btn btn-default btn-sm mod-level-action mod-cancel",attrs:{"title":_vm.$t('cancel')},on:{"click":function($event){$event.stopPropagation();return _vm.cancelLevel.apply(null, arguments)}}},[_c('i',{staticClass:"fa fa-minus-circle",attrs:{"aria-hidden":"true"}}),_c('span',{staticClass:"sr-only"},[_vm._v(_vm._s(_vm.$t('cancel')))])])])])],1):_vm._e(),(_vm.newLevel && !!_vm.criterium)?_c('b-tr',{staticClass:"table-body-row details-row"},[_c('b-td',{attrs:{"colspan":_vm.rubric.useScores ? (_vm.rubric.hasAbsoluteWeights ? 3 : 4) : 2}},[_c('div',{staticClass:"criterium-level-input-area"},[_c('textarea',{directives:[{name:"model",rawName:"v-model",value:(_vm.newLevel.description),expression:"newLevel.description"}],ref:"feedbackField",staticClass:"criterium-level-feedback input-detail",class:{ 'is-input-active': _vm.activeDescriptionInput === _vm.newLevel || !_vm.newLevel.description },attrs:{"placeholder":_vm.$t('enter-level-description')},domProps:{"value":(_vm.newLevel.description)},on:{"focus":function($event){return _vm.onDescriptionFocus(_vm.newLevel)},"blur":function($event){_vm.activeDescriptionInput = null},"input":function($event){if($event.target.composing)return;_vm.$set(_vm.newLevel, "description", $event.target.value)}}}),_c('div',{staticClass:"criterium-level-markup-preview",class:{'is-input-active': _vm.activeDescriptionInput === _vm.newLevel || !_vm.newLevel.description},domProps:{"innerHTML":_vm._s(_vm.marked(_vm.newLevel.description))}})])])],1):_vm._e()],2)],1)],1),(!_vm.newLevel)?_c('button',{staticClass:"btn-new",on:{"click":function($event){$event.stopPropagation();return _vm.createNewLevel.apply(null, arguments)}}},[_vm._v(_vm._s(_vm.$t('add-level')))]):_vm._e(),(_vm.removingLevel !== null)?_c('div',{staticClass:"modal-bg",on:{"click":function($event){$event.stopPropagation();return _vm.hideRemoveLevelDialog.apply(null, arguments)}}},[_c('div',{staticClass:"modal-content",on:{"click":function($event){$event.stopPropagation();}}},[_c('div',{staticClass:"modal-content-title"},[_vm._v(_vm._s(_vm.$t('remove-level', {item: `'${_vm.removingLevel.title}'`}))+"?")]),_c('div',[_c('button',{ref:"btn-remove-level",staticClass:"btn-strong mod-confirm",on:{"click":function($event){$event.stopPropagation();return _vm.removeLevel(_vm.removingLevel)}}},[_vm._v(_vm._s(_vm.$t('remove')))]),_c('button',{staticClass:"btn-strong",on:{"click":function($event){$event.stopPropagation();return _vm.hideRemoveLevelDialog.apply(null, arguments)}}},[_vm._v(_vm._s(_vm.$t('cancel')))])])])]):_vm._e()])
}
var Levelsvue_type_template_id_d6850a06_scoped_true_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Levels/SelectionControls.vue?vue&type=template&id=7eefe5cc
var SelectionControlsvue_type_template_id_7eefe5cc_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',[_c('button',{staticClass:"btn btn-default btn-sm mod-level-action",attrs:{"id":`btn-up-${_vm.id}`,"title":_vm.$t('move-up'),"disabled":_vm.isUpDisabled},on:{"click":function($event){$event.stopPropagation();return _vm.$emit('move-up')},"focus":function($event){return _vm.$emit('select')}}},[_c('i',{staticClass:"fa fa-arrow-up",attrs:{"aria-hidden":"true"}}),_c('span',{staticClass:"sr-only"},[_vm._v(_vm._s(_vm.$t('move-up')))])]),_c('button',{staticClass:"btn btn-default btn-sm mod-level-action",attrs:{"id":`btn-down-${_vm.id}`,"title":_vm.$t('move-down'),"disabled":_vm.isDownDisabled},on:{"click":function($event){$event.stopPropagation();return _vm.$emit('move-down')},"focus":function($event){return _vm.$emit('select')}}},[_c('i',{staticClass:"fa fa-arrow-down",attrs:{"aria-hidden":"true"}}),_c('span',{staticClass:"sr-only"},[_vm._v(_vm._s(_vm.$t('move-down')))])]),_c('button',{staticClass:"btn btn-default btn-sm mod-level-action mod-remove",attrs:{"title":_vm.$t('remove'),"disabled":_vm.isRemoveDisabled},on:{"click":function($event){$event.stopPropagation();return _vm.$emit('remove')},"focus":function($event){return _vm.$emit('select')}}},[_c('i',{staticClass:"fa fa-minus-circle",attrs:{"aria-hidden":"true"}}),_c('span',{staticClass:"sr-only"},[_vm._v(_vm._s(_vm.$t('remove')))])])])
}
var SelectionControlsvue_type_template_id_7eefe5cc_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Levels/SelectionControls.vue?vue&type=script&lang=ts


let SelectionControls = class SelectionControls extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    id;
    isUpDisabled;
    isDownDisabled;
    isRemoveDisabled;
};
__decorate([
    Prop({ type: String, default: '' }),
    __metadata("design:type", String)
], SelectionControls.prototype, "id", void 0);
__decorate([
    Prop({ type: Boolean, default: false }),
    __metadata("design:type", Boolean)
], SelectionControls.prototype, "isUpDisabled", void 0);
__decorate([
    Prop({ type: Boolean, default: false }),
    __metadata("design:type", Boolean)
], SelectionControls.prototype, "isDownDisabled", void 0);
__decorate([
    Prop({ type: Boolean, default: false }),
    __metadata("design:type", Boolean)
], SelectionControls.prototype, "isRemoveDisabled", void 0);
SelectionControls = __decorate([
    vue_class_component_esm({
        name: 'selection-controls'
    })
], SelectionControls);
/* harmony default export */ var SelectionControlsvue_type_script_lang_ts = (SelectionControls);

;// CONCATENATED MODULE: ./src/Components/Builder/Levels/SelectionControls.vue?vue&type=script&lang=ts
 /* harmony default export */ var Levels_SelectionControlsvue_type_script_lang_ts = (SelectionControlsvue_type_script_lang_ts); 
;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-56.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-56.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-56.use[2]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Levels/SelectionControls.vue?vue&type=style&index=0&id=7eefe5cc&prod&lang=css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Components/Builder/Levels/SelectionControls.vue?vue&type=style&index=0&id=7eefe5cc&prod&lang=css

// EXTERNAL MODULE: ../../../../../../../../node_modules/@intlify/vue-i18n-loader/lib/index.js!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Levels/SelectionControls.vue?vue&type=custom&index=0&blockType=i18n
var SelectionControlsvue_type_custom_index_0_blockType_i18n = __webpack_require__(963);
var SelectionControlsvue_type_custom_index_0_blockType_i18n_default = /*#__PURE__*/__webpack_require__.n(SelectionControlsvue_type_custom_index_0_blockType_i18n);
;// CONCATENATED MODULE: ./src/Components/Builder/Levels/SelectionControls.vue?vue&type=custom&index=0&blockType=i18n
 /* harmony default export */ var Levels_SelectionControlsvue_type_custom_index_0_blockType_i18n = ((SelectionControlsvue_type_custom_index_0_blockType_i18n_default())); 
;// CONCATENATED MODULE: ./src/Components/Builder/Levels/SelectionControls.vue



;


/* normalize component */

var SelectionControls_component = normalizeComponent(
  Levels_SelectionControlsvue_type_script_lang_ts,
  SelectionControlsvue_type_template_id_7eefe5cc_render,
  SelectionControlsvue_type_template_id_7eefe5cc_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* custom blocks */
;
if (typeof Levels_SelectionControlsvue_type_custom_index_0_blockType_i18n === 'function') Levels_SelectionControlsvue_type_custom_index_0_blockType_i18n(SelectionControls_component)

/* harmony default export */ var Levels_SelectionControls = (SelectionControls_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Levels/Levels.vue?vue&type=script&lang=ts
var Levelsvue_type_script_lang_ts_a, Levelsvue_type_script_lang_ts_b, Levelsvue_type_script_lang_ts_c;










let Levels = class Levels extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    newLevel = null;
    hoveredLevel = null;
    selectedLevel = null;
    removingLevel = null;
    activeDescriptionInput = null;
    rubric;
    criterium;
    dataConnector;
    constructor() {
        super();
        this.onLevelMove = debounce_default()(this.onLevelMove, 750);
        this.onLevelChange = debounce_default()(this.onLevelChange, 750);
    }
    marked(rawString) {
        return purify_default().sanitize(marked(rawString));
    }
    get isEditDisabled() {
        return !!this.newLevel;
    }
    get levels() {
        if (this.criterium) {
            return this.rubric.filterLevelsByCriterium(this.criterium).map(l => { l._showDetails = true; return l; });
        }
        return this.rubric.rubricLevels;
    }
    get hasRangeScores() {
        return !!(this.levels.find(level => level.useRangeScore));
    }
    onLevelChange(level) {
        this.dataConnector?.updateLevel(level);
    }
    createNewLevel() {
        this.selectLevel(null);
        this.newLevel = this.getDefaultLevel();
        this.$nextTick(() => {
            document.querySelector(`#level-title-new`).focus();
        });
    }
    addLevel() {
        if (this.newLevel.isDefault) {
            this.levels.forEach(level => {
                level.isDefault = false;
            });
        }
        this.rubric.addLevel(this.newLevel);
        this.dataConnector?.addLevel(this.newLevel, this.levels.length);
        this.newLevel = null;
        this.$emit('level-added');
        this.createNewLevel();
    }
    cancelLevel() {
        this.newLevel = null;
        this.selectLevel(null);
    }
    onLevelMove(level) {
        const levels = this.rubric.getFilteredLevels(level);
        if (!levels) {
            return;
        }
        const index = levels.indexOf(level);
        this.dataConnector?.moveLevel(level, index);
    }
    moveLevelUp(level) {
        this.rubric.moveLevelUp(level);
        this.onLevelMove(level);
        this.$nextTick(() => {
            let el = document.querySelector(`#btn-up-${level.id}`);
            if (el?.disabled) {
                el = el?.nextSibling;
            }
            el?.focus();
        });
    }
    moveLevelDown(level) {
        this.rubric.moveLevelDown(level);
        this.onLevelMove(level);
        this.$nextTick(() => {
            let el = document.querySelector(`#btn-down-${level.id}`);
            if (el?.disabled) {
                el = el?.previousSibling;
            }
            el?.focus();
        });
    }
    setDefault(defaultLevel) {
        if (this.newLevel === defaultLevel) {
            this.newLevel.isDefault = !this.newLevel.isDefault;
        }
        else {
            this.levels.forEach(level => {
                level.isDefault = (defaultLevel === level) ? !level.isDefault : false;
            });
            this.onLevelChange(defaultLevel);
        }
    }
    getDefaultLevel() {
        const level = new Level('');
        if (this.criterium) {
            level.criteriumId = this.criterium.id;
        }
        return level;
    }
    showRemoveLevelDialog(level) {
        this.removingLevel = level;
    }
    hideRemoveLevelDialog() {
        this.showRemoveLevelDialog(null);
    }
    removeLevel(level) {
        this.removingLevel = null;
        this.rubric.removeLevel(level);
        this.dataConnector?.deleteLevel(level);
        this.selectLevel(null);
    }
    get fields() {
        return [
            { key: 'title', sortable: false, variant: 'title' },
            this.rubric.useScores ? { key: 'score', sortable: false, variant: 'score' } : null,
            { key: 'is_default', sortable: false, variant: 'default' },
            { key: 'actions', sortable: false, label: '', variant: 'actions' }
        ];
    }
    rowClass(level) {
        return `table-body-row level-row${this.criterium ? ' mod-criterium' : ''}${level === this.selectedLevel ? ' is-selected' : ''}${this.newLevel ? '' : ' is-enabled'}${level === this.hoveredLevel ? ' is-hovered' : ''}`;
    }
    onSelectLevel(level) {
        if (this.isEditDisabled) {
            return;
        }
        this.selectedLevel = level;
    }
    onDescriptionFocus(level) {
        this.onSelectLevel(level);
        this.activeDescriptionInput = level;
    }
    onRowSelected(levels) {
        this.selectLevel(levels[0] || null);
    }
    selectLevel(level) {
        if (this.newLevel) {
            return false;
        }
        this.selectedLevel = level;
        return false;
    }
    onRemoveItemChanged() {
        if (this.removingLevel) {
            this.$nextTick(() => {
                this.$refs['btn-remove-level'].focus();
            });
        }
    }
    mounted() {
        if (!this.levels.length) {
            this.createNewLevel();
        }
    }
};
__decorate([
    Prop({ type: Rubric, required: true }),
    __metadata("design:type", typeof (Levelsvue_type_script_lang_ts_a = typeof Rubric !== "undefined" && Rubric) === "function" ? Levelsvue_type_script_lang_ts_a : Object)
], Levels.prototype, "rubric", void 0);
__decorate([
    Prop({ type: Criterium, default: null }),
    __metadata("design:type", typeof (Levelsvue_type_script_lang_ts_b = typeof Criterium !== "undefined" && Criterium) === "function" ? Levelsvue_type_script_lang_ts_b : Object)
], Levels.prototype, "criterium", void 0);
__decorate([
    Prop(DataConnector),
    __metadata("design:type", Object)
], Levels.prototype, "dataConnector", void 0);
__decorate([
    Watch('removingLevel'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], Levels.prototype, "onRemoveItemChanged", null);
Levels = __decorate([
    vue_class_component_esm({
        name: 'levels',
        components: {
            SelectionControls: Levels_SelectionControls
        },
    }),
    __metadata("design:paramtypes", [])
], Levels);
/* harmony default export */ var Levelsvue_type_script_lang_ts = (Levels);

;// CONCATENATED MODULE: ./src/Components/Builder/Levels/Levels.vue?vue&type=script&lang=ts
 /* harmony default export */ var Levels_Levelsvue_type_script_lang_ts = (Levelsvue_type_script_lang_ts); 
;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-66.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-66.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-66.use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-66.use[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Levels/Levels.vue?vue&type=style&index=0&id=d6850a06&prod&lang=scss&scoped=true
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Components/Builder/Levels/Levels.vue?vue&type=style&index=0&id=d6850a06&prod&lang=scss&scoped=true

// EXTERNAL MODULE: ../../../../../../../../node_modules/@intlify/vue-i18n-loader/lib/index.js!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Levels/Levels.vue?vue&type=custom&index=0&blockType=i18n
var Levelsvue_type_custom_index_0_blockType_i18n = __webpack_require__(85);
var Levelsvue_type_custom_index_0_blockType_i18n_default = /*#__PURE__*/__webpack_require__.n(Levelsvue_type_custom_index_0_blockType_i18n);
;// CONCATENATED MODULE: ./src/Components/Builder/Levels/Levels.vue?vue&type=custom&index=0&blockType=i18n
 /* harmony default export */ var Levels_Levelsvue_type_custom_index_0_blockType_i18n = ((Levelsvue_type_custom_index_0_blockType_i18n_default())); 
;// CONCATENATED MODULE: ./src/Components/Builder/Levels/Levels.vue



;


/* normalize component */

var Levels_component = normalizeComponent(
  Levels_Levelsvue_type_script_lang_ts,
  Levelsvue_type_template_id_d6850a06_scoped_true_render,
  Levelsvue_type_template_id_d6850a06_scoped_true_staticRenderFns,
  false,
  null,
  "d6850a06",
  null
  
)

/* custom blocks */
;
if (typeof Levels_Levelsvue_type_custom_index_0_blockType_i18n === 'function') Levels_Levelsvue_type_custom_index_0_blockType_i18n(Levels_component)

/* harmony default export */ var Levels_Levels = (Levels_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/CriteriumDetailsView.vue?vue&type=script&lang=ts
var CriteriumDetailsViewvue_type_script_lang_ts_a, CriteriumDetailsViewvue_type_script_lang_ts_b, CriteriumDetailsViewvue_type_script_lang_ts_c;









function CriteriumDetailsViewvue_type_script_lang_ts_updateHeight(elem, addedPixels = 0) {
    elem.style.height = '';
    elem.style.height = `${elem.scrollHeight + addedPixels}px`;
}
let CriteriumDetailsView = class CriteriumDetailsView extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    showFormatting = false;
    initCustomLevels = false;
    rubric;
    criterium;
    dataConnector;
    constructor() {
        super();
        this.onCriteriumChange = debounce_default()(this.onCriteriumChange, 750);
        this.onWeightChange = debounce_default()(this.onWeightChange, 750);
        this.onChoiceChange = debounce_default()(this.onChoiceChange, 750);
    }
    get criteriumLevels() {
        if (!this.criterium) {
            return [];
        }
        return this.rubric.filterLevelsByCriterium(this.criterium);
    }
    onLevelMove(level) {
        const levels = this.rubric.getFilteredLevels(level);
        if (!levels) {
            return;
        }
        const index = levels.indexOf(level);
        this.dataConnector?.moveLevel(level, index);
    }
    moveLevelUp(level) {
        this.rubric.moveLevelUp(level);
        this.onLevelMove(level);
    }
    moveLevelDown(level) {
        this.rubric.moveLevelDown(level);
        this.onLevelMove(level);
    }
    updateHeight(e) {
        CriteriumDetailsViewvue_type_script_lang_ts_updateHeight(e.target);
    }
    updateHeightAll() {
        CriteriumDetailsViewvue_type_script_lang_ts_updateHeight(this.$refs['criteriumTitleField'], 5);
        for (let elem of document.getElementsByClassName('criterium-level-feedback')) {
            CriteriumDetailsViewvue_type_script_lang_ts_updateHeight(elem);
        }
    }
    updated() {
        window.setTimeout(() => {
            this.updateHeightAll();
        }, 250);
    }
    mounted() {
        this.updateHeightAll();
    }
    onCriteriumChange() {
        this.$emit('change-criterium', this.criterium);
    }
    onWeightChange(event) {
        const el = event.target;
        if (!el.checkValidity()) {
            el.reportValidity();
            return;
        }
        if (this.rubric.useRelativeWeights && (typeof this.criterium?.rel_weight !== 'number')) {
            this.criterium.rel_weight = null;
        }
        this.$emit('change-criterium', this.criterium);
    }
    onChoiceChange(choice, criterium, level) {
        this.$emit('change-choice', choice, criterium, level);
    }
    onUsesScoresChange() {
        window.setTimeout(() => {
            this.updateHeightAll();
        }, 250);
    }
    onDisplayedCriterium() {
        this.initCustomLevels = false;
    }
};
__decorate([
    Prop({ type: Rubric, required: true }),
    __metadata("design:type", typeof (CriteriumDetailsViewvue_type_script_lang_ts_a = typeof Rubric !== "undefined" && Rubric) === "function" ? CriteriumDetailsViewvue_type_script_lang_ts_a : Object)
], CriteriumDetailsView.prototype, "rubric", void 0);
__decorate([
    Prop(Criterium),
    __metadata("design:type", Object)
], CriteriumDetailsView.prototype, "criterium", void 0);
__decorate([
    Prop(DataConnector),
    __metadata("design:type", Object)
], CriteriumDetailsView.prototype, "dataConnector", void 0);
__decorate([
    Watch('rubric.useScores'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], CriteriumDetailsView.prototype, "onUsesScoresChange", null);
__decorate([
    Watch('criterium'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], CriteriumDetailsView.prototype, "onDisplayedCriterium", null);
CriteriumDetailsView = __decorate([
    vue_class_component_esm({
        name: 'criterium-details-view',
        components: { CriteriumLevelView: Rubric_CriteriumLevelView, FormattingHelp: Builder_FormattingHelp, Levels: Levels_Levels }
    }),
    __metadata("design:paramtypes", [])
], CriteriumDetailsView);
/* harmony default export */ var CriteriumDetailsViewvue_type_script_lang_ts = (CriteriumDetailsView);

;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/CriteriumDetailsView.vue?vue&type=script&lang=ts
 /* harmony default export */ var Rubric_CriteriumDetailsViewvue_type_script_lang_ts = (CriteriumDetailsViewvue_type_script_lang_ts); 
;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-66.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-66.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-66.use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-66.use[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/CriteriumDetailsView.vue?vue&type=style&index=0&id=74b266a6&prod&scoped=true&lang=scss
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/CriteriumDetailsView.vue?vue&type=style&index=0&id=74b266a6&prod&scoped=true&lang=scss

// EXTERNAL MODULE: ../../../../../../../../node_modules/@intlify/vue-i18n-loader/lib/index.js!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/CriteriumDetailsView.vue?vue&type=custom&index=0&blockType=i18n
var CriteriumDetailsViewvue_type_custom_index_0_blockType_i18n = __webpack_require__(266);
var CriteriumDetailsViewvue_type_custom_index_0_blockType_i18n_default = /*#__PURE__*/__webpack_require__.n(CriteriumDetailsViewvue_type_custom_index_0_blockType_i18n);
;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/CriteriumDetailsView.vue?vue&type=custom&index=0&blockType=i18n
 /* harmony default export */ var Rubric_CriteriumDetailsViewvue_type_custom_index_0_blockType_i18n = ((CriteriumDetailsViewvue_type_custom_index_0_blockType_i18n_default())); 
;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/CriteriumDetailsView.vue



;


/* normalize component */

var CriteriumDetailsView_component = normalizeComponent(
  Rubric_CriteriumDetailsViewvue_type_script_lang_ts,
  CriteriumDetailsViewvue_type_template_id_74b266a6_scoped_true_render,
  CriteriumDetailsViewvue_type_template_id_74b266a6_scoped_true_staticRenderFns,
  false,
  null,
  "74b266a6",
  null
  
)

/* custom blocks */
;
if (typeof Rubric_CriteriumDetailsViewvue_type_custom_index_0_blockType_i18n === 'function') Rubric_CriteriumDetailsViewvue_type_custom_index_0_blockType_i18n(CriteriumDetailsView_component)

/* harmony default export */ var Rubric_CriteriumDetailsView = (CriteriumDetailsView_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/RemoveDialog.vue?vue&type=template&id=697c4e95
var RemoveDialogvue_type_template_id_697c4e95_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return (_vm.removeItem !== null)?_c('div',{staticClass:"modal-bg",on:{"click":function($event){$event.stopPropagation();return _vm.$emit('cancel')}}},[_c('div',{staticClass:"modal-content",on:{"click":function($event){$event.stopPropagation();}}},[(_vm.removeItem.constructor.name === 'Category' && _vm.removeItem.title === '')?_c('div',{staticClass:"modal-content-title"},[_vm._v(_vm._s(_vm.$t('remove-criteria'))+"?")]):_c('div',{staticClass:"modal-content-title"},[_vm._v(_vm._s(_vm.$t('remove-item', { item: `${ _vm.$t(_vm.removeItem.constructor.name) } '${ _vm.removeItem.title }'` }))+"?")]),_c('div',[_c('button',{ref:"btn-remove",staticClass:"btn-strong mod-confirm",on:{"click":function($event){$event.stopPropagation();return _vm.$emit('remove')}}},[_vm._v(_vm._s(_vm.$t('remove')))]),_c('button',{staticClass:"btn-strong",on:{"click":function($event){$event.stopPropagation();return _vm.$emit('cancel')}}},[_vm._v(_vm._s(_vm.$t('cancel')))])])])]):_vm._e()
}
var RemoveDialogvue_type_template_id_697c4e95_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/RemoveDialog.vue?vue&type=script&lang=ts
var RemoveDialogvue_type_script_lang_ts_a, RemoveDialogvue_type_script_lang_ts_b;





let RemoveDialog = class RemoveDialog extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    removeItem;
    onRemoveItemChanged() {
        if (this.removeItem) {
            this.$nextTick(() => {
                this.$refs['btn-remove'].focus();
            });
        }
    }
};
__decorate([
    Prop({ type: [Cluster, Category, Criterium], default: null }),
    __metadata("design:type", Object)
], RemoveDialog.prototype, "removeItem", void 0);
__decorate([
    Watch('removeItem'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], RemoveDialog.prototype, "onRemoveItemChanged", null);
RemoveDialog = __decorate([
    vue_class_component_esm({
        name: 'remove-dialog'
    })
], RemoveDialog);
/* harmony default export */ var RemoveDialogvue_type_script_lang_ts = (RemoveDialog);

;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/RemoveDialog.vue?vue&type=script&lang=ts
 /* harmony default export */ var Rubric_RemoveDialogvue_type_script_lang_ts = (RemoveDialogvue_type_script_lang_ts); 
// EXTERNAL MODULE: ../../../../../../../../node_modules/@intlify/vue-i18n-loader/lib/index.js!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/RemoveDialog.vue?vue&type=custom&index=0&blockType=i18n
var RemoveDialogvue_type_custom_index_0_blockType_i18n = __webpack_require__(867);
var RemoveDialogvue_type_custom_index_0_blockType_i18n_default = /*#__PURE__*/__webpack_require__.n(RemoveDialogvue_type_custom_index_0_blockType_i18n);
;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/RemoveDialog.vue?vue&type=custom&index=0&blockType=i18n
 /* harmony default export */ var Rubric_RemoveDialogvue_type_custom_index_0_blockType_i18n = ((RemoveDialogvue_type_custom_index_0_blockType_i18n_default())); 
;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/RemoveDialog.vue





/* normalize component */
;
var RemoveDialog_component = normalizeComponent(
  Rubric_RemoveDialogvue_type_script_lang_ts,
  RemoveDialogvue_type_template_id_697c4e95_render,
  RemoveDialogvue_type_template_id_697c4e95_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* custom blocks */
;
if (typeof Rubric_RemoveDialogvue_type_custom_index_0_blockType_i18n === 'function') Rubric_RemoveDialogvue_type_custom_index_0_blockType_i18n(RemoveDialog_component)

/* harmony default export */ var Rubric_RemoveDialog = (RemoveDialog_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Rubric/ScoreRubricView.vue?vue&type=script&lang=ts
var ScoreRubricViewvue_type_script_lang_ts_a, ScoreRubricViewvue_type_script_lang_ts_b, ScoreRubricViewvue_type_script_lang_ts_c;










let ScoreRubricView = class ScoreRubricView extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    selectedClusterView1 = null;
    selectedClusterView2 = null;
    menuActionsId = '';
    newClusterDialogView = '';
    newCategoryDialogView = '';
    isEditing = false;
    oldItemTitle = '';
    removeItem = null;
    editCategoryColorId = '';
    initiatedDrag = '';
    dragItemType = '';
    overElementId = '';
    bannedForDrop = '';
    innerWidth = window.innerWidth;
    rubric;
    selectedCriterium;
    dataConnector;
    uiState;
    get clusters() {
        return [...this.rubric.clusters];
    }
    get console() {
        return window.console;
    }
    // Selection
    onClusterSelected(cluster, view) {
        if (view === 'view1') {
            this.selectedClusterView1 = cluster;
            this.uiState.selectedClusterView1 = cluster.id;
        }
        else if (view === 'view2') {
            this.selectedClusterView2 = cluster;
            this.uiState.selectedClusterView2 = cluster.id;
        }
    }
    isSelected(cluster, view = 'view1') {
        if (view === 'view1') {
            return cluster === this.selectedClusterView1;
        }
        else if (view === 'view2') {
            return cluster === this.selectedClusterView2;
        }
        return false;
    }
    selectCriterium(criterium) {
        this.$emit('criterium-selected', criterium);
    }
    // Menu Actions
    onItemActions(id) {
        this.menuActionsId = this.menuActionsId === id ? '' : id;
    }
    hideMenu() {
        this.menuActionsId = '';
    }
    onStartEdit(item) {
        this.isEditing = true;
        this.oldItemTitle = item.title;
        this.hideMenu();
    }
    onFinishEdit(item, newTitle, canceled = false) {
        if (!canceled && newTitle !== this.oldItemTitle) {
            item.title = newTitle;
            this.dataConnector?.updateTreeNode(item);
        }
        this.isEditing = false;
        this.oldItemTitle = '';
    }
    onChangeColor(category) {
        this.dataConnector?.updateTreeNode(category);
    }
    onChangeCriterium(criterium) {
        this.dataConnector?.updateTreeNode(criterium);
    }
    onChangeChoice(choice, criterium, level) {
        this.dataConnector?.updateChoice(choice, criterium, level);
    }
    showRemoveDialog(item) {
        this.removeItem = item;
        this.hideMenu();
    }
    hideRemoveDialog() {
        this.showRemoveDialog(null);
    }
    onRemoveItem() {
        const item = this.removeItem;
        if (item instanceof Criterium && item === this.selectedCriterium) {
            this.selectCriterium(null);
        }
        else if (item instanceof Category) {
            if (this.selectedCriterium?.parent === item) {
                this.selectCriterium(null);
            }
            if (this.editCategoryColorId && item.id === this.editCategoryColorId.split('_')[1]) {
                this.editCategoryColorId = '';
            }
        }
        else if (item instanceof Cluster) {
            if (this.selectedCriterium?.parent?.parent === item) {
                this.selectCriterium(null);
            }
            if (item === this.selectedClusterView1) {
                this.selectedClusterView1 = null;
                this.uiState.selectedClusterView1 = '';
            }
            if (item === this.selectedClusterView2) {
                this.selectedClusterView2 = null;
                this.uiState.selectedClusterView2 = '';
            }
        }
        item.parent.removeChild(item);
        this.dataConnector?.deleteTreeNode(item);
        this.hideRemoveDialog();
    }
    onColorPicker(id) {
        this.editCategoryColorId = id;
    }
    // Drag & Drop
    get draggableDisabled() {
        return this.innerWidth < 900 || this.isEditing || this.menuActionsId !== '' || this.newClusterDialogView !== '' || this.newCategoryDialogView !== '' || this.removeItem !== null;
    }
    startDrag(event, type) {
        const view = event.item.id.split('_')[0];
        const otherView = view === 'view1' ? 'view2' : 'view1';
        this.dragItemType = type;
        this.initiatedDrag = view;
        let bannedFilter = '';
        if (type === 'cluster') {
            bannedFilter = 'clusters';
        }
        else if (type === 'category') {
            bannedFilter = 'categories';
        }
        else {
            bannedFilter = event.item.parentElement?.parentElement.id.split('_')[1];
        }
        if (type === 'cluster' || (this.selectedClusterView1 !== null && this.selectedClusterView1 === this.selectedClusterView2)) {
            this.bannedForDrop = `${otherView}_${bannedFilter}`;
        }
    }
    endDrag() {
        this.dragItemType = '';
        this.initiatedDrag = '';
        this.bannedForDrop = '';
        this.overElementId = '';
    }
    dragOverElement(elementId = '') {
        if (!this.initiatedDrag) {
            return;
        }
        this.overElementId = elementId;
    }
    mounted() {
        if (this.uiState.selectedClusterView1) {
            const cluster = this.rubric.clusters.find(cluster => cluster.id === this.uiState.selectedClusterView1);
            if (cluster) {
                this.selectedClusterView1 = cluster;
            }
            else {
                this.uiState.selectedClusterView1 = '';
            }
        }
        else {
            this.selectedClusterView1 = this.clusters.length && this.clusters[0] || null;
        }
        if (this.uiState.selectedClusterView2) {
            const cluster = this.rubric.clusters.find(cluster => cluster.id === this.uiState.selectedClusterView2);
            if (cluster) {
                this.selectedClusterView2 = cluster;
            }
            else {
                this.uiState.selectedClusterView2 = '';
            }
        }
        else {
            this.selectedClusterView2 = this.clusters.length && this.clusters[0] || null;
        }
        window.addEventListener('resize', this.handleResize);
    }
    beforeDestroy() {
        window.removeEventListener('resize', this.handleResize);
    }
    handleResize() {
        this.innerWidth = window.innerWidth;
    }
    get mainClass() {
        return {
            'is-dragging': this.initiatedDrag !== '',
            'is-not-allowed': this.bannedForDrop !== '' && this.overElementId === this.bannedForDrop
        };
    }
    onRubricChanged() {
        // console.log('change');
    }
};
__decorate([
    Prop({ type: Rubric, required: true }),
    __metadata("design:type", typeof (ScoreRubricViewvue_type_script_lang_ts_a = typeof Rubric !== "undefined" && Rubric) === "function" ? ScoreRubricViewvue_type_script_lang_ts_a : Object)
], ScoreRubricView.prototype, "rubric", void 0);
__decorate([
    Prop(Criterium),
    __metadata("design:type", Object)
], ScoreRubricView.prototype, "selectedCriterium", void 0);
__decorate([
    Prop(DataConnector),
    __metadata("design:type", Object)
], ScoreRubricView.prototype, "dataConnector", void 0);
__decorate([
    Prop({ type: Object }),
    __metadata("design:type", Object)
], ScoreRubricView.prototype, "uiState", void 0);
__decorate([
    Watch('rubric'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], ScoreRubricView.prototype, "onRubricChanged", null);
ScoreRubricView = __decorate([
    vue_class_component_esm({
        name: 'score-rubric-view',
        components: { RubricPane: Rubric_RubricPane, RemoveDialog: Rubric_RemoveDialog, CriteriumDetailsView: Rubric_CriteriumDetailsView }
    })
], ScoreRubricView);
/* harmony default export */ var ScoreRubricViewvue_type_script_lang_ts = (ScoreRubricView);
//todo replace border with padding

;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/ScoreRubricView.vue?vue&type=script&lang=ts
 /* harmony default export */ var Rubric_ScoreRubricViewvue_type_script_lang_ts = (ScoreRubricViewvue_type_script_lang_ts); 
;// CONCATENATED MODULE: ./src/Components/Builder/Rubric/ScoreRubricView.vue





/* normalize component */
;
var ScoreRubricView_component = normalizeComponent(
  Rubric_ScoreRubricViewvue_type_script_lang_ts,
  ScoreRubricViewvue_type_template_id_1807b061_render,
  ScoreRubricViewvue_type_template_id_1807b061_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Rubric_ScoreRubricView = (ScoreRubricView_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricBuilderFull.vue?vue&type=template&id=06a3033f&scoped=true
var RubricBuilderFullvue_type_template_id_06a3033f_scoped_true_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:"rubric mod-bf",class:{'mod-weight': _vm.rubric.useWeights},style:({'--num-cols': _vm.rubric.maxNumLevels})},[(_vm.showFormatting)?_c('formatting-help',{staticClass:"mod-bf",on:{"close":function($event){_vm.showFormatting = false}}}):_vm._e(),_c('ul',{staticClass:"rubric-tools"},[_c('li',[_c('a',{staticClass:"tools-show-formatting",attrs:{"href":"#","role":"button"},on:{"click":function($event){$event.preventDefault();_vm.showFormatting=!_vm.showFormatting}}},[_vm._v(_vm._s(_vm.$t('formatting')))])])]),(_vm.rubric.useWeights)?_c('div',{staticClass:"treenode-weight-header mod-show"},[_c('span',[_vm._v(_vm._s(_vm.$t('weight')))])]):_vm._e(),(!_vm.rubric.hasCustomLevels)?_c('div',{staticClass:"rubric-header mod-show"},_vm._l((_vm.rubric.rubricLevels),function(level){return _c('div',{staticClass:"rubric-header-title"},[_vm._v(_vm._s(level.title))])}),0):_vm._e(),_vm._l((_vm.rubric.clusters),function(cluster,index){return [_c('div',{staticClass:"treenode-title-header rb-lg:col-start-1"},[_c('h1',{staticClass:"treenode-title cluster-title"},[_vm._v(_vm._s(cluster.title))])]),_vm._l((cluster.categories),function(category){return [(category.title && _vm.rubric.getAllCriteria(category).length > 0)?_c('div',{staticClass:"treenode-title-header mod-category has-category rb-lg:col-start-1",style:(`--category-color: ${ category.title && category.color ? category.color : '#999' }`)},[_c('div',{staticClass:"treenode-title-header-pre mod-category",class:{'mod-no-color': !category.color}}),_c('h2',{staticClass:"treenode-title category-title"},[_vm._v(_vm._s(category.title))])]):_vm._e(),_vm._l((_vm.getCriteriumRowsData(category)),function({criterium, ext}){return [_c('div',{staticClass:"treenode-title-header rb-lg:col-start-1",class:{'has-category': !!category.title},style:(`--category-color: ${ !(category.title && category.color) ? '#999' : category.color }`)},[_c('div',{staticClass:"treenode-title-header-pre mod-criterium"}),_c('h3',{staticClass:"treenode-title criterium-title u-markdown-criterium",class:{'mod-no-category': !category.title},domProps:{"innerHTML":_vm._s(criterium.toMarkdown())}})]),(_vm.rubric.useWeights)?_c('div',{staticClass:"treenode-weight mod-pad rb-md:col-span-full"},[_c('span',{staticClass:"treenode-weight-title"},[_vm._v(_vm._s(_vm.$t('weight'))+": ")]),(_vm.rubric.useRelativeWeights)?_c('input',{directives:[{name:"model",rawName:"v-model.number",value:(criterium.rel_weight),expression:"criterium.rel_weight",modifiers:{"number":true}}],staticClass:"input-detail rel-weight",class:{'is-set': criterium.rel_weight !== null, 'is-error': _vm.rubric.eqRestWeight < 0},attrs:{"type":"number","placeholder":_vm.rubric.eqRestWeight.toLocaleString(),"min":"0","max":"100"},domProps:{"value":(criterium.rel_weight)},on:{"input":[function($event){if($event.target.composing)return;_vm.$set(criterium, "rel_weight", _vm._n($event.target.value))},function($event){return _vm.onWeightChange($event, criterium)}],"blur":function($event){return _vm.$forceUpdate()}}}):[(_vm.rubric.filterLevelsByCriterium(criterium).length)?_c('span',{staticStyle:{"margin-left":"1em"}},[_vm._v("100")]):_c('input',{directives:[{name:"model",rawName:"v-model.number",value:(criterium.weight),expression:"criterium.weight",modifiers:{"number":true}}],staticClass:"input-detail abs-weight",attrs:{"type":"number","min":"0","max":"100"},domProps:{"value":(criterium.weight)},on:{"input":[function($event){if($event.target.composing)return;_vm.$set(criterium, "weight", _vm._n($event.target.value))},function($event){return _vm.onWeightChange($event, criterium)}],"blur":function($event){return _vm.$forceUpdate()}}})],_c('span',{staticClass:"sr-only"},[_vm._v("%")]),_c('i',{staticClass:"fa fa-percent",attrs:{"aria-hidden":"true"}})],2):_vm._e(),_c('tree-node-descriptions',{attrs:{"rubric":_vm.rubric,"criterium":criterium,"ext":ext},on:{"input":_vm.updateHeight,"update-level-description":_vm.updateLevelDescription,"update-choice-feedback":_vm.updateFeedback}})]})]}),(index < _vm.rubric.clusters.length - 1)?_c('div',{staticClass:"cluster-sep"}):_vm._e()]})],2)
}
var RubricBuilderFullvue_type_template_id_06a3033f_scoped_true_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/FullView/DescriptionField.vue?vue&type=template&id=6e4d7d98
var DescriptionFieldvue_type_template_id_6e4d7d98_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:"description-input-area"},[_c('textarea',{directives:[{name:"model",rawName:"v-model",value:(_vm.descriptiveItem.description),expression:"descriptiveItem.description"}],staticClass:"ta-default-feedback",class:{'is-input-active': _vm.isInputActive || !_vm.descriptiveItem.description},attrs:{"placeholder":_vm.$t('enter-level-description')},domProps:{"value":(_vm.descriptiveItem.description)},on:{"input":[function($event){if($event.target.composing)return;_vm.$set(_vm.descriptiveItem, "description", $event.target.value)},_vm.onDescriptionChange],"focus":function($event){_vm.isInputActive = true},"blur":function($event){_vm.isInputActive = false}}}),_c('div',{staticClass:"description-markup-preview",class:{'is-input-active': _vm.isInputActive || !_vm.descriptiveItem.description}},[_vm._t("default"),_c('div',{staticClass:"preview",domProps:{"innerHTML":_vm._s(_vm.preview)}})],2)])
}
var DescriptionFieldvue_type_template_id_6e4d7d98_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/FullView/DescriptionField.vue?vue&type=script&lang=ts
var DescriptionFieldvue_type_script_lang_ts_a, DescriptionFieldvue_type_script_lang_ts_b;





let DescriptionField = class DescriptionField extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    isInputActive = false;
    descriptiveItem;
    constructor() {
        super();
        this.onChange = debounce_default()(this.onChange, 750);
    }
    get preview() {
        return this.descriptiveItem.toMarkdown();
    }
    onChange() {
        this.$emit('change', this.descriptiveItem);
    }
    onDescriptionChange(e) {
        this.$emit('input', e);
        this.onChange();
    }
};
__decorate([
    Prop({ type: [Level, Choice], required: true }),
    __metadata("design:type", Object)
], DescriptionField.prototype, "descriptiveItem", void 0);
DescriptionField = __decorate([
    vue_class_component_esm({
        name: 'description-field'
    }),
    __metadata("design:paramtypes", [])
], DescriptionField);
/* harmony default export */ var DescriptionFieldvue_type_script_lang_ts = (DescriptionField);

;// CONCATENATED MODULE: ./src/Components/Builder/FullView/DescriptionField.vue?vue&type=script&lang=ts
 /* harmony default export */ var FullView_DescriptionFieldvue_type_script_lang_ts = (DescriptionFieldvue_type_script_lang_ts); 
;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-66.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-66.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-66.use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-66.use[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/FullView/DescriptionField.vue?vue&type=style&index=0&id=6e4d7d98&prod&lang=scss
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Components/Builder/FullView/DescriptionField.vue?vue&type=style&index=0&id=6e4d7d98&prod&lang=scss

// EXTERNAL MODULE: ../../../../../../../../node_modules/@intlify/vue-i18n-loader/lib/index.js!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/FullView/DescriptionField.vue?vue&type=custom&index=0&blockType=i18n
var DescriptionFieldvue_type_custom_index_0_blockType_i18n = __webpack_require__(641);
var DescriptionFieldvue_type_custom_index_0_blockType_i18n_default = /*#__PURE__*/__webpack_require__.n(DescriptionFieldvue_type_custom_index_0_blockType_i18n);
;// CONCATENATED MODULE: ./src/Components/Builder/FullView/DescriptionField.vue?vue&type=custom&index=0&blockType=i18n
 /* harmony default export */ var FullView_DescriptionFieldvue_type_custom_index_0_blockType_i18n = ((DescriptionFieldvue_type_custom_index_0_blockType_i18n_default())); 
;// CONCATENATED MODULE: ./src/Components/Builder/FullView/DescriptionField.vue



;


/* normalize component */

var DescriptionField_component = normalizeComponent(
  FullView_DescriptionFieldvue_type_script_lang_ts,
  DescriptionFieldvue_type_template_id_6e4d7d98_render,
  DescriptionFieldvue_type_template_id_6e4d7d98_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* custom blocks */
;
if (typeof FullView_DescriptionFieldvue_type_custom_index_0_blockType_i18n === 'function') FullView_DescriptionFieldvue_type_custom_index_0_blockType_i18n(DescriptionField_component)

/* harmony default export */ var FullView_DescriptionField = (DescriptionField_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/FullView/TreeNodeDescriptions.vue?vue&type=template&id=451dcd26&scoped=true
var TreeNodeDescriptionsvue_type_template_id_451dcd26_scoped_true_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:"treenode-rubric-input"},[_c('div',{staticClass:"treenode-choices"},_vm._l((_vm.entryChoices),function({ item, level, title, score, useRangeScore, minimumScore }){return _c('div',{staticClass:"treenode-choice"},[_c('div',{staticClass:"treenode-level",class:{'mod-scores': _vm.useScores, 'mod-fixed-levels': !_vm.rubric.hasCustomLevels}},[_c('span',{staticClass:"treenode-level-title"},[_vm._v(_vm._s(title))]),(_vm.useScores)?_c('span',{staticClass:"treenode-level-score"},[(useRangeScore)?[_vm._v(_vm._s(_vm._f("formatNum")(minimumScore))),_c('i',{staticClass:"fa fa-caret-right",attrs:{"aria-hidden":"true"}})]:_vm._e(),_vm._v(_vm._s(_vm._f("formatNum")(score))),(_vm.rubric.useRelativeWeights)?[_c('span',{staticClass:"sr-only"},[_vm._v("%")]),_c('i',{staticClass:"fa fa-percent",attrs:{"aria-hidden":"true"}})]:_c('span',{staticClass:"sr-only"},[_vm._v(_vm._s(_vm.$t('points')))])],2):_vm._e()]),_c('div',{staticClass:"treenode-level-description-input",class:{'mod-abs-weights': _vm.useScores && _vm.rubric.hasAbsoluteWeights},on:{"click":_vm.focusTextField}},[_c('description-field',{attrs:{"descriptive-item":item},on:{"input":function($event){return _vm.$emit('input', $event)},"change":function($event){return _vm.updateDescription(item, level)}}},[(_vm.useScores && !_vm.rubric.hasCustomLevels)?_c('span',{staticClass:"level-score",class:{'mod-fixed': _vm.hasChoices && item.hasFixedScore}},[(useRangeScore)?[_vm._v(_vm._s(_vm._f("formatNum")(minimumScore))),_c('i',{staticClass:"fa fa-caret-right",attrs:{"aria-hidden":"true"}})]:_vm._e(),_vm._v(_vm._s(_vm._f("formatNum")(score))),(_vm.rubric.useRelativeWeights)?[_c('span',{staticClass:"sr-only"},[_vm._v("%")]),_c('i',{staticClass:"fa fa-percent",attrs:{"aria-hidden":"true"}})]:_vm._e(),_c('span',{staticClass:"sr-only"},[_vm._v(_vm._s(_vm.$t('points')))])],2):_vm._e()])],1)])}),0)])
}
var TreeNodeDescriptionsvue_type_template_id_451dcd26_scoped_true_staticRenderFns = []


;// CONCATENATED MODULE: ./src/Util/interfaces.ts


;// CONCATENATED MODULE: ./src/Domain/EntryChoice.ts
class LevelEntryChoice {
    level;
    chosenLevel;
    constructor(level, chosenLevel) {
        this.level = level;
        this.chosenLevel = chosenLevel;
    }
    get item() {
        return this.level;
    }
    get title() {
        return this.level.title;
    }
    get description() {
        return this.level.description;
    }
    get score() {
        return this.level.score;
    }
    get useRangeScore() {
        return this.level.useRangeScore;
    }
    get minimumScore() {
        return this.level.minimumScore;
    }
    get markdown() {
        return this.level.toMarkdown();
    }
    get isSelected() {
        return this.level === this.chosenLevel;
    }
}
class ChoiceEntryChoice {
    wChoice;
    chosenLevel;
    useChoiceScore;
    constructor(wChoice, chosenLevel, useChoiceScore) {
        this.wChoice = wChoice;
        this.chosenLevel = chosenLevel;
        this.useChoiceScore = useChoiceScore;
    }
    get item() {
        return this.wChoice.choice;
    }
    get level() {
        return this.wChoice.level;
    }
    get title() {
        return this.level.title;
    }
    get description() {
        return this.wChoice.choice.description;
    }
    get score() {
        return this.useChoiceScore ? this.wChoice.score : this.level.score;
    }
    get useRangeScore() {
        return this.level.useRangeScore;
    }
    get minimumScore() {
        return this.level.minimumScore;
    }
    get markdown() {
        return this.wChoice.choice.toMarkdown();
    }
    get isSelected() {
        return this.level === this.chosenLevel;
    }
}

;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/FullView/TreeNodeDescriptions.vue?vue&type=script&lang=ts
var TreeNodeDescriptionsvue_type_script_lang_ts_a, TreeNodeDescriptionsvue_type_script_lang_ts_b, TreeNodeDescriptionsvue_type_script_lang_ts_c;







let TreeNodeDescriptions = class TreeNodeDescriptions extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    rubric;
    criterium;
    ext;
    get hasLevels() {
        return !!this.ext.levels.length;
    }
    get hasChoices() {
        return !!this.ext.choices.length;
    }
    get useScores() {
        return this.rubric.useScores;
    }
    focusTextField(elem) {
        if (elem.target.className === 'default-feedback') {
            elem.target.querySelector('.ta-default-feedback').focus();
        }
    }
    updateDescription(descriptiveItem, level) {
        if (descriptiveItem === level) {
            this.$emit('update-level-description', descriptiveItem);
        }
        else {
            this.$emit('update-choice-feedback', descriptiveItem, this.criterium, level);
        }
    }
    get entryChoices() {
        if (this.hasLevels) {
            return this.ext.levels.map(level => new LevelEntryChoice(level, null));
        }
        return this.ext.choices.map(choiceObject => new ChoiceEntryChoice(choiceObject, null, !this.rubric.useRelativeWeights));
    }
};
__decorate([
    Prop({ type: Rubric, required: true }),
    __metadata("design:type", typeof (TreeNodeDescriptionsvue_type_script_lang_ts_a = typeof Rubric !== "undefined" && Rubric) === "function" ? TreeNodeDescriptionsvue_type_script_lang_ts_a : Object)
], TreeNodeDescriptions.prototype, "rubric", void 0);
__decorate([
    Prop({ type: Criterium, required: true }),
    __metadata("design:type", typeof (TreeNodeDescriptionsvue_type_script_lang_ts_b = typeof Criterium !== "undefined" && Criterium) === "function" ? TreeNodeDescriptionsvue_type_script_lang_ts_b : Object)
], TreeNodeDescriptions.prototype, "criterium", void 0);
__decorate([
    Prop({ type: Object, required: true }),
    __metadata("design:type", typeof (TreeNodeDescriptionsvue_type_script_lang_ts_c = typeof interfaces_namespaceObject.TreeNodeExt !== "undefined" && interfaces_namespaceObject.TreeNodeExt) === "function" ? TreeNodeDescriptionsvue_type_script_lang_ts_c : Object)
], TreeNodeDescriptions.prototype, "ext", void 0);
TreeNodeDescriptions = __decorate([
    vue_class_component_esm({
        components: {
            DescriptionField: FullView_DescriptionField
        },
        filters: {
            formatNum: function (v) {
                return v.toLocaleString(undefined, { maximumFractionDigits: 2 });
            }
        }
    })
], TreeNodeDescriptions);
/* harmony default export */ var TreeNodeDescriptionsvue_type_script_lang_ts = (TreeNodeDescriptions);

;// CONCATENATED MODULE: ./src/Components/Builder/FullView/TreeNodeDescriptions.vue?vue&type=script&lang=ts
 /* harmony default export */ var FullView_TreeNodeDescriptionsvue_type_script_lang_ts = (TreeNodeDescriptionsvue_type_script_lang_ts); 
;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-66.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-66.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-66.use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-66.use[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/FullView/TreeNodeDescriptions.vue?vue&type=style&index=0&id=451dcd26&prod&lang=scss&scoped=true
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Components/Builder/FullView/TreeNodeDescriptions.vue?vue&type=style&index=0&id=451dcd26&prod&lang=scss&scoped=true

// EXTERNAL MODULE: ../../../../../../../../node_modules/@intlify/vue-i18n-loader/lib/index.js!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/FullView/TreeNodeDescriptions.vue?vue&type=custom&index=0&blockType=i18n
var TreeNodeDescriptionsvue_type_custom_index_0_blockType_i18n = __webpack_require__(231);
var TreeNodeDescriptionsvue_type_custom_index_0_blockType_i18n_default = /*#__PURE__*/__webpack_require__.n(TreeNodeDescriptionsvue_type_custom_index_0_blockType_i18n);
;// CONCATENATED MODULE: ./src/Components/Builder/FullView/TreeNodeDescriptions.vue?vue&type=custom&index=0&blockType=i18n
 /* harmony default export */ var FullView_TreeNodeDescriptionsvue_type_custom_index_0_blockType_i18n = ((TreeNodeDescriptionsvue_type_custom_index_0_blockType_i18n_default())); 
;// CONCATENATED MODULE: ./src/Components/Builder/FullView/TreeNodeDescriptions.vue



;


/* normalize component */

var TreeNodeDescriptions_component = normalizeComponent(
  FullView_TreeNodeDescriptionsvue_type_script_lang_ts,
  TreeNodeDescriptionsvue_type_template_id_451dcd26_scoped_true_render,
  TreeNodeDescriptionsvue_type_template_id_451dcd26_scoped_true_staticRenderFns,
  false,
  null,
  "451dcd26",
  null
  
)

/* custom blocks */
;
if (typeof FullView_TreeNodeDescriptionsvue_type_custom_index_0_blockType_i18n === 'function') FullView_TreeNodeDescriptionsvue_type_custom_index_0_blockType_i18n(TreeNodeDescriptions_component)

/* harmony default export */ var FullView_TreeNodeDescriptions = (TreeNodeDescriptions_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricBuilderFull.vue?vue&type=script&lang=ts
var RubricBuilderFullvue_type_script_lang_ts_a, RubricBuilderFullvue_type_script_lang_ts_b;








function RubricBuilderFullvue_type_script_lang_ts_updateHeight(elem) {
    elem.style.height = '';
    elem.style.height = `${elem.scrollHeight + 14}px`;
}
let RubricBuilderFull = class RubricBuilderFull extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    rubric;
    dataConnector;
    criteriaData = [];
    showFormatting = false;
    constructor() {
        super();
        this.onResize = debounce_default()(this.onResize, 200);
        this.onWeightChange = debounce_default()(this.onWeightChange, 750);
    }
    updateHeight(e) {
        this.$nextTick(() => {
            RubricBuilderFullvue_type_script_lang_ts_updateHeight(e.target);
        });
    }
    updateLevelDescription(level) {
        this.dataConnector?.updateLevel(level);
    }
    updateFeedback(choice, criterium, level) {
        this.dataConnector?.updateChoice(choice, criterium, level);
    }
    focusTextField(elem) {
        if (elem.target.className === 'default-feedback') {
            elem.target.querySelector('.ta-default-feedback').focus();
        }
    }
    onWeightChange(event, criterium) {
        const el = event.target;
        if (!el.checkValidity()) {
            el.reportValidity();
            return;
        }
        if (this.rubric.useRelativeWeights && typeof criterium.rel_weight !== 'number') {
            criterium.rel_weight = null;
        }
        else if (!this.rubric.useRelativeWeights) {
            const criteriumExt = this.getCriteriumData(criterium);
            criteriumExt.choices = this.getCriteriumChoices(criterium);
        }
        this.dataConnector?.updateTreeNode(criterium);
    }
    getCriteriumChoices(criterium) {
        const rubric = this.rubric;
        return rubric.rubricLevels.map(level => ({
            level,
            choice: rubric.getChoice(criterium, level),
            score: rubric.getChoiceScore(criterium, level)
        }));
    }
    get useScores() {
        return this.rubric.useScores;
    }
    get useGrades() {
        return !this.rubric.useScores;
    }
    getCriteriumRowsData(category) {
        return category.criteria.map(criterium => ({
            criterium,
            ext: this.getCriteriumData(criterium)
        }));
    }
    getCriteriumData(criterium) {
        const criteriumExt = this.criteriaData.find((_) => _.treeNode === criterium);
        if (!criteriumExt) {
            throw new Error(`No data found for criterium: ${criterium}`);
        }
        return criteriumExt;
    }
    initScores(rubric) {
        rubric.getAllCriteria().forEach(criterium => {
            const levels = rubric.filterLevelsByCriterium(criterium);
            const choices = levels.length ? [] : this.getCriteriumChoices(criterium);
            this.criteriaData.push({
                treeNode: criterium, levels, choices, showDefaultFeedback: false
            });
        });
    }
    getChoiceScore(choice) {
        return this.rubric.useRelativeWeights ? choice.level.score : choice.score;
    }
    onResize() {
        this.updateHeightAll();
    }
    created() {
        if (this.rubric) {
            this.initScores(this.rubric);
            // todo: get rubric data id
        }
    }
    updateHeightAll() {
        this.$nextTick(() => {
            document.querySelectorAll('.ta-default-feedback').forEach(el => {
                RubricBuilderFullvue_type_script_lang_ts_updateHeight(el);
            });
        });
    }
    destroyed() {
        window.removeEventListener('resize', this.onResize);
    }
    mounted() {
        window.addEventListener('resize', this.onResize);
        this.updateHeightAll();
    }
    onUsesScoresChange() {
        this.updateHeightAll();
    }
};
__decorate([
    Prop({ type: Rubric, required: true }),
    __metadata("design:type", typeof (RubricBuilderFullvue_type_script_lang_ts_a = typeof Rubric !== "undefined" && Rubric) === "function" ? RubricBuilderFullvue_type_script_lang_ts_a : Object)
], RubricBuilderFull.prototype, "rubric", void 0);
__decorate([
    Prop(DataConnector),
    __metadata("design:type", Object)
], RubricBuilderFull.prototype, "dataConnector", void 0);
__decorate([
    Watch('rubric.useScores'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], RubricBuilderFull.prototype, "onUsesScoresChange", null);
RubricBuilderFull = __decorate([
    vue_class_component_esm({
        components: {
            DescriptionField: FullView_DescriptionField, FormattingHelp: Builder_FormattingHelp, TreeNodeDescriptions: FullView_TreeNodeDescriptions
        },
        filters: {
            formatNum: function (v) {
                return v.toLocaleString(undefined, { maximumFractionDigits: 2 });
            }
        }
    }),
    __metadata("design:paramtypes", [])
], RubricBuilderFull);
/* harmony default export */ var RubricBuilderFullvue_type_script_lang_ts = (RubricBuilderFull);

;// CONCATENATED MODULE: ./src/Views/RubricBuilderFull.vue?vue&type=script&lang=ts
 /* harmony default export */ var Views_RubricBuilderFullvue_type_script_lang_ts = (RubricBuilderFullvue_type_script_lang_ts); 
;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-66.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-66.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-66.use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-66.use[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricBuilderFull.vue?vue&type=style&index=0&id=06a3033f&prod&lang=scss
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Views/RubricBuilderFull.vue?vue&type=style&index=0&id=06a3033f&prod&lang=scss

;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-56.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-56.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-56.use[2]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricBuilderFull.vue?vue&type=style&index=1&id=06a3033f&prod&scoped=true&lang=css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Views/RubricBuilderFull.vue?vue&type=style&index=1&id=06a3033f&prod&scoped=true&lang=css

;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-66.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-66.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-66.use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-66.use[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricBuilderFull.vue?vue&type=style&index=2&id=06a3033f&prod&lang=scss&scoped=true
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Views/RubricBuilderFull.vue?vue&type=style&index=2&id=06a3033f&prod&lang=scss&scoped=true

// EXTERNAL MODULE: ../../../../../../../../node_modules/@intlify/vue-i18n-loader/lib/index.js!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricBuilderFull.vue?vue&type=custom&index=0&blockType=i18n
var RubricBuilderFullvue_type_custom_index_0_blockType_i18n = __webpack_require__(362);
var RubricBuilderFullvue_type_custom_index_0_blockType_i18n_default = /*#__PURE__*/__webpack_require__.n(RubricBuilderFullvue_type_custom_index_0_blockType_i18n);
;// CONCATENATED MODULE: ./src/Views/RubricBuilderFull.vue?vue&type=custom&index=0&blockType=i18n
 /* harmony default export */ var Views_RubricBuilderFullvue_type_custom_index_0_blockType_i18n = ((RubricBuilderFullvue_type_custom_index_0_blockType_i18n_default())); 
;// CONCATENATED MODULE: ./src/Views/RubricBuilderFull.vue



;




/* normalize component */

var RubricBuilderFull_component = normalizeComponent(
  Views_RubricBuilderFullvue_type_script_lang_ts,
  RubricBuilderFullvue_type_template_id_06a3033f_scoped_true_render,
  RubricBuilderFullvue_type_template_id_06a3033f_scoped_true_staticRenderFns,
  false,
  null,
  "06a3033f",
  null
  
)

/* custom blocks */
;
if (typeof Views_RubricBuilderFullvue_type_custom_index_0_blockType_i18n === 'function') Views_RubricBuilderFullvue_type_custom_index_0_blockType_i18n(RubricBuilderFull_component)

/* harmony default export */ var Views_RubricBuilderFull = (RubricBuilderFull_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/SaveArea.vue?vue&type=template&id=2530bda4
var SaveAreavue_type_template_id_2530bda4_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:"save-state"},[(_vm.showSaveState && _vm.dataConnector && _vm.dataConnector.isSaving)?_c('div',[_vm._v(" "+_vm._s(_vm.$tc('num-changes', _vm.dataConnector.processingSize, { 'count': _vm.dataConnector.processingSize }))+"... ")]):(_vm.showSaveState && _vm.dataConnector)?_c('div',{staticClass:"save-state-saved",attrs:{"aria-live":"polite"}},[_vm._v(" "+_vm._s(_vm.$t('all-saved'))+" ")]):_vm._e(),(_vm.error)?_c('div',{staticClass:"block-ui"}):_vm._e(),(_vm.error)?_c('div',{staticClass:"save-error"},[_c('div',{staticClass:"save-error-msg"},[_vm._v(" "+_vm._s(_vm.error)+" ")])]):_vm._e()])
}
var SaveAreavue_type_template_id_2530bda4_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/SaveArea.vue?vue&type=script&lang=ts
var SaveAreavue_type_script_lang_ts_a;



let SaveArea = class SaveArea extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    dataConnector;
    error;
    showSaveState;
};
__decorate([
    Prop(DataConnector),
    __metadata("design:type", Object)
], SaveArea.prototype, "dataConnector", void 0);
__decorate([
    Prop({ type: String, default: null }),
    __metadata("design:type", Object)
], SaveArea.prototype, "error", void 0);
__decorate([
    Prop({ type: Boolean, default: true }),
    __metadata("design:type", Boolean)
], SaveArea.prototype, "showSaveState", void 0);
SaveArea = __decorate([
    vue_class_component_esm({
        name: 'save-area',
        components: {},
    })
], SaveArea);
/* harmony default export */ var SaveAreavue_type_script_lang_ts = (SaveArea);

;// CONCATENATED MODULE: ./src/Components/Builder/SaveArea.vue?vue&type=script&lang=ts
 /* harmony default export */ var Builder_SaveAreavue_type_script_lang_ts = (SaveAreavue_type_script_lang_ts); 
// EXTERNAL MODULE: ../../../../../../../../node_modules/@intlify/vue-i18n-loader/lib/index.js!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/SaveArea.vue?vue&type=custom&index=0&blockType=i18n
var SaveAreavue_type_custom_index_0_blockType_i18n = __webpack_require__(331);
var SaveAreavue_type_custom_index_0_blockType_i18n_default = /*#__PURE__*/__webpack_require__.n(SaveAreavue_type_custom_index_0_blockType_i18n);
;// CONCATENATED MODULE: ./src/Components/Builder/SaveArea.vue?vue&type=custom&index=0&blockType=i18n
 /* harmony default export */ var Builder_SaveAreavue_type_custom_index_0_blockType_i18n = ((SaveAreavue_type_custom_index_0_blockType_i18n_default())); 
;// CONCATENATED MODULE: ./src/Components/Builder/SaveArea.vue





/* normalize component */
;
var SaveArea_component = normalizeComponent(
  Builder_SaveAreavue_type_script_lang_ts,
  SaveAreavue_type_template_id_2530bda4_render,
  SaveAreavue_type_template_id_2530bda4_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* custom blocks */
;
if (typeof Builder_SaveAreavue_type_custom_index_0_blockType_i18n === 'function') Builder_SaveAreavue_type_custom_index_0_blockType_i18n(SaveArea_component)

/* harmony default export */ var Builder_SaveArea = (SaveArea_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricBuilder.vue?vue&type=script&lang=ts







let RubricBuilder = class RubricBuilder extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    selectedCriterium = null;
    dataConnector = null;
    rubric = null;
    errorCode = null;
    showResetWeightsDialog = false;
    rubricData;
    apiConfig;
    version;
    uiState;
    get newWeightsImageURL() {
        return window.newWeightsImageURL || '';
    }
    get showSplitView() {
        return this.uiState.showSplitView;
    }
    set showSplitView(showSplitView) {
        this.uiState.showSplitView = showSplitView;
    }
    get showLevelDescriptions() {
        return this.uiState.showLevelDescriptions;
    }
    set showLevelDescriptions(showLevelDescriptions) {
        this.uiState.showLevelDescriptions = showLevelDescriptions;
    }
    selectCriterium(criterium) {
        this.selectedCriterium = criterium;
        this.uiState.selectedCriterium = criterium ? criterium.id : '';
    }
    showResettingWeights() {
        if (this.$router.currentRoute.path !== '/levels') {
            this.$router.push({ path: '/levels' });
        }
        this.showResetWeightsDialog = true;
    }
    resetAbsoluteWeights() {
        this.dataConnector?.resetRubricAbsoluteWeights();
        this.showResetWeightsDialog = false;
    }
    get content() {
        return this.uiState.content;
    }
    set content(content) {
        this.uiState.content = content;
    }
    setError(code) {
        this.errorCode = code;
    }
    mounted() {
        if (this.rubricData) {
            this.rubric = Rubric.fromJSON(this.rubricData);
            if (this.uiState.selectedCriterium) {
                const selectedCriterium = this.rubric.getAllCriteria().find(criterium => criterium.id === this.uiState.selectedCriterium);
                if (selectedCriterium) {
                    this.selectedCriterium = selectedCriterium;
                }
                else {
                    this.uiState.selectedCriterium = '';
                }
            }
            this.dataConnector = new DataConnector(this.rubric, this.apiConfig, this.rubricData.rubric_data_id, this.version);
            this.dataConnector.addErrorListener(this);
            if (this.rubric.useScores && !this.rubric.useRelativeWeights) {
                this.rubric.hasAbsoluteWeights = Rubric.usesAbsoluteWeights(this.rubric);
            }
        }
    }
    //@Watch('rubric', {deep: true}) // Unfortunately, changes in choices are not being picked up.
    //rubricChanged() {
    beforeDestroy() {
        if (this.rubric) {
            this.$emit('rubric-updated', this.rubric);
        }
    }
};
__decorate([
    Prop({ type: Object, default: null }),
    __metadata("design:type", Object)
], RubricBuilder.prototype, "rubricData", void 0);
__decorate([
    Prop({ type: Object, default: null }),
    __metadata("design:type", Object)
], RubricBuilder.prototype, "apiConfig", void 0);
__decorate([
    Prop({ type: Number, default: null }),
    __metadata("design:type", Object)
], RubricBuilder.prototype, "version", void 0);
__decorate([
    Prop({ type: Object }),
    __metadata("design:type", Object)
], RubricBuilder.prototype, "uiState", void 0);
RubricBuilder = __decorate([
    vue_class_component_esm({
        components: {
            ScoreRubricView: Rubric_ScoreRubricView, RubricBuilderFull: Views_RubricBuilderFull, SaveArea: Builder_SaveArea
        },
    })
], RubricBuilder);
/* harmony default export */ var RubricBuildervue_type_script_lang_ts = (RubricBuilder);

;// CONCATENATED MODULE: ./src/Views/RubricBuilder.vue?vue&type=script&lang=ts
 /* harmony default export */ var Views_RubricBuildervue_type_script_lang_ts = (RubricBuildervue_type_script_lang_ts); 
;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-66.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-66.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-66.use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-66.use[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricBuilder.vue?vue&type=style&index=0&id=0f0f1f28&prod&lang=scss
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Views/RubricBuilder.vue?vue&type=style&index=0&id=0f0f1f28&prod&lang=scss

;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-66.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-66.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-66.use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-66.use[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricBuilder.vue?vue&type=style&index=1&id=0f0f1f28&prod&lang=scss&scoped=true
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Views/RubricBuilder.vue?vue&type=style&index=1&id=0f0f1f28&prod&lang=scss&scoped=true

// EXTERNAL MODULE: ../../../../../../../../node_modules/@intlify/vue-i18n-loader/lib/index.js!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricBuilder.vue?vue&type=custom&index=0&blockType=i18n
var RubricBuildervue_type_custom_index_0_blockType_i18n = __webpack_require__(503);
var RubricBuildervue_type_custom_index_0_blockType_i18n_default = /*#__PURE__*/__webpack_require__.n(RubricBuildervue_type_custom_index_0_blockType_i18n);
;// CONCATENATED MODULE: ./src/Views/RubricBuilder.vue?vue&type=custom&index=0&blockType=i18n
 /* harmony default export */ var Views_RubricBuildervue_type_custom_index_0_blockType_i18n = ((RubricBuildervue_type_custom_index_0_blockType_i18n_default())); 
;// CONCATENATED MODULE: ./src/Views/RubricBuilder.vue



;



/* normalize component */

var RubricBuilder_component = normalizeComponent(
  Views_RubricBuildervue_type_script_lang_ts,
  RubricBuildervue_type_template_id_0f0f1f28_scoped_true_render,
  RubricBuildervue_type_template_id_0f0f1f28_scoped_true_staticRenderFns,
  false,
  null,
  "0f0f1f28",
  null
  
)

/* custom blocks */
;
if (typeof Views_RubricBuildervue_type_custom_index_0_blockType_i18n === 'function') Views_RubricBuildervue_type_custom_index_0_blockType_i18n(RubricBuilder_component)

/* harmony default export */ var Views_RubricBuilder = (RubricBuilder_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricBuilderWrapper.vue?vue&type=script&lang=ts





let RubricBuilderWrapper = class RubricBuilderWrapper extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    uiState = {
        showSplitView: false,
        showDefaultFeedbackFields: false,
        selectedCriterium: '',
        selectedClusterView1: '',
        selectedClusterView2: ''
    };
    convertedRubricData;
    apiConfig;
    version;
    rubricData;
    debugServerResponse;
    created() {
        this.convertedRubricData = convertRubricData(this.rubricData);
    }
};
__decorate([
    Prop({ type: Object, required: true }),
    __metadata("design:type", Object)
], RubricBuilderWrapper.prototype, "apiConfig", void 0);
__decorate([
    Prop({ type: Number, required: true }),
    __metadata("design:type", Number)
], RubricBuilderWrapper.prototype, "version", void 0);
__decorate([
    Prop({ type: Object, required: true }),
    __metadata("design:type", Object)
], RubricBuilderWrapper.prototype, "rubricData", void 0);
__decorate([
    Prop({ type: Boolean, default: false }),
    __metadata("design:type", Boolean)
], RubricBuilderWrapper.prototype, "debugServerResponse", void 0);
RubricBuilderWrapper = __decorate([
    vue_class_component_esm({
        components: {
            RubricBuilder: Views_RubricBuilder
        },
    })
], RubricBuilderWrapper);
/* harmony default export */ var RubricBuilderWrappervue_type_script_lang_ts = (RubricBuilderWrapper);

;// CONCATENATED MODULE: ./src/Views/RubricBuilderWrapper.vue?vue&type=script&lang=ts
 /* harmony default export */ var Views_RubricBuilderWrappervue_type_script_lang_ts = (RubricBuilderWrappervue_type_script_lang_ts); 
;// CONCATENATED MODULE: ./src/Views/RubricBuilderWrapper.vue





/* normalize component */
;
var RubricBuilderWrapper_component = normalizeComponent(
  Views_RubricBuilderWrappervue_type_script_lang_ts,
  RubricBuilderWrappervue_type_template_id_35b37b62_render,
  RubricBuilderWrappervue_type_template_id_35b37b62_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Views_RubricBuilderWrapper = (RubricBuilderWrapper_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricPreviewWrapper.vue?vue&type=template&id=d0755506
var RubricPreviewWrappervue_type_template_id_d0755506_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return (_vm.rubric)?_c('div',{attrs:{"id":"app"}},[_c('rubric-entry',{attrs:{"rubric":_vm.rubric,"preview":true,"ui-state":_vm.uiState}})],1):_vm._e()
}
var RubricPreviewWrappervue_type_template_id_d0755506_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricEntry.vue?vue&type=template&id=3863a76a&scoped=true
var RubricEntryvue_type_template_id_3863a76a_scoped_true_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:"rubric",class:[{ 'is-demo-inactive': this.options.isDemo && !this.options.evaluator }, _vm.useScores ? 'mod-scores' : 'mod-grades', { 'mod-rel-weights': _vm.useScores && _vm.rubric.useRelativeWeights, 'mod-abs-weights': _vm.useScores && _vm.rubric.hasAbsoluteWeights }],style:({'--num-cols': _vm.rubric.maxNumLevels}),on:{"click":function($event){$event.stopPropagation();}}},[_c('ul',{staticClass:"rubric-tools"},[_vm._t("demoEvaluator"),_c('li',{staticClass:"app-tool-item",class:{ 'is-demo-inactive': this.options.isDemo && !this.options.evaluator }},[_c('button',{staticClass:"btn-check",class:{ checked: _vm.showDefaultFeedbackFields },attrs:{"aria-label":_vm.$t('show-default-descriptions'),"aria-expanded":_vm.showDefaultFeedbackFields ? 'true' : 'false'},on:{"click":function($event){$event.preventDefault();return _vm.toggleDefaultFeedbackFields.apply(null, arguments)}}},[_c('span',{staticClass:"lbl-check",attrs:{"tabindex":"-1"}},[_c('i',{staticClass:"btn-icon-check fa",attrs:{"aria-hidden":"true"}}),_vm._v(_vm._s(_vm.options.isDemo ? _vm.$t('feedback') : _vm.$t('expand-all')))])])])],2),(_vm.rubric.useWeights)?_c('div',{staticClass:"treenode-weight-header mod-show"},[_c('span',[_vm._v(_vm._s(_vm.$t('weight')))])]):_vm._e(),(!_vm.rubric.hasCustomLevels)?[_c('ul',{staticClass:"rubric-header mod-show rb-md-max:col-start-1"},_vm._l((_vm.rubric.rubricLevels),function(level){return _c('li',{staticClass:"rubric-header-title"},[_vm._v(_vm._s(level.title))])}),0),_c('div',{staticClass:"rubric-header-fill"})]:_vm._e(),_vm._l((_vm.getClusterRowsData(_vm.rubric)),function({cluster, ext, evaluation, score}){return [_c('div',{staticClass:"treenode-title-header rb-lg:col-start-1 rb-md-max:col-span-full",class:{ 'is-highlighted': _vm.highlightedTreeNode === cluster },on:{"mouseover":function($event){_vm.highlightedTreeNode = cluster},"mouseout":function($event){_vm.highlightedTreeNode = null}}},[_c('h1',{staticClass:"treenode-title cluster-title"},[_vm._v(_vm._s(cluster.title))]),(!_vm.preview && !_vm.showDefaultFeedbackFields)?_c('button',{staticClass:"btn-show",attrs:{"aria-label":_vm.$t('show-default-description'),"title":_vm.$t('show-default-description')},on:{"click":function($event){$event.preventDefault();ext.showDefaultFeedback = !ext.showDefaultFeedback}}},[_c('i',{staticClass:"btn-icon-show-feedback fa",class:{'is-feedback-visible': _vm.showDefaultFeedbackFields || ext.showDefaultFeedback},attrs:{"tabindex":"-1","aria-hidden":"true"}})]):_vm._e()]),(!_vm.preview && evaluation && (_vm.showDefaultFeedbackFields || ext.showDefaultFeedback))?_c('div',{staticClass:"treenode-custom-feedback rb-md:col-start-1 rb-sm:col-span-full",class:_vm.rubric.useWeights ? 'rb-lg:col-start-3' : 'rb-lg:col-start-2',on:{"mouseover":function($event){_vm.highlightedTreeNode = cluster},"mouseout":function($event){_vm.highlightedTreeNode = null}}},[_c('textarea',{directives:[{name:"model",rawName:"v-model",value:(evaluation.feedback),expression:"evaluation.feedback"}],staticClass:"ta-custom-feedback",attrs:{"placeholder":_vm.$t('extra-feedback')},domProps:{"value":(evaluation.feedback)},on:{"input":[function($event){if($event.target.composing)return;_vm.$set(evaluation, "feedback", $event.target.value)},function($event){return _vm.onTreeNodeFeedbackChanged(evaluation)}]}})]):_vm._e(),_vm._l((_vm.getCategoryRowsData(cluster)),function({category, ext, evaluation}){return [(category.title)?_c('div',{staticClass:"treenode-title-header mod-category has-category rb-lg:col-start-1 rb-md-max:col-span-full",class:{ 'is-highlighted': _vm.highlightedTreeNode === category },style:(`--category-color: ${ category.title && category.color ? category.color : '#999' }`),on:{"mouseover":function($event){_vm.highlightedTreeNode = category},"mouseout":function($event){_vm.highlightedTreeNode = null}}},[_c('div',{staticClass:"treenode-title-header-pre mod-category",class:{'mod-no-color': !category.color}}),_c('h2',{staticClass:"treenode-title category-title"},[_vm._v(_vm._s(category.title))]),(!_vm.preview && !_vm.showDefaultFeedbackFields)?_c('button',{staticClass:"btn-show",attrs:{"aria-label":_vm.$t('show-default-description'),"title":_vm.$t('show-default-description')},on:{"click":function($event){$event.preventDefault();ext.showDefaultFeedback = !ext.showDefaultFeedback},"mouseover":function($event){_vm.highlightedTreeNode = category},"mouseout":function($event){_vm.highlightedTreeNode = null}}},[_c('i',{staticClass:"btn-icon-show-feedback fa",class:{'is-feedback-visible': _vm.showDefaultFeedbackFields || ext.showDefaultFeedback},attrs:{"tabindex":"-1","aria-hidden":"true"}})]):_vm._e()]):_vm._e(),(!_vm.preview && evaluation && category.title && (_vm.showDefaultFeedbackFields || ext.showDefaultFeedback))?_c('div',{staticClass:"treenode-custom-feedback rb-md:col-start-1 rb-sm:col-span-full",class:_vm.rubric.useWeights ? 'rb-lg:col-start-3' : 'rb-lg:col-start-2'},[_c('textarea',{directives:[{name:"model",rawName:"v-model",value:(evaluation.feedback),expression:"evaluation.feedback"}],staticClass:"ta-custom-feedback",attrs:{"placeholder":_vm.$t('extra-feedback')},domProps:{"value":(evaluation.feedback)},on:{"input":[function($event){if($event.target.composing)return;_vm.$set(evaluation, "feedback", $event.target.value)},function($event){return _vm.onTreeNodeFeedbackChanged(evaluation)}]}})]):_vm._e(),_vm._l((_vm.getCriteriumRowsData(category)),function({criterium, ext, evaluation, score}){return [_c('div',{staticClass:"treenode-title-header rb-lg:col-start-1 rb-md-max:col-span-full",class:{'is-feedback-visible': _vm.showDefaultFeedbackFields || ext.showDefaultFeedback, 'is-highlighted': _vm.highlightedTreeNode === criterium, 'has-category': !!category.title},style:(`--category-color: ${ !(category.title && category.color) ? '#999' : category.color }`),on:{"mouseover":function($event){_vm.highlightedTreeNode = criterium},"mouseout":function($event){_vm.highlightedTreeNode = null}}},[_c('div',{staticClass:"treenode-title-header-pre mod-criterium"}),_c('h3',{staticClass:"treenode-title criterium-title u-markdown-criterium",class:{'mod-no-category': !category.title},attrs:{"id":`criterium-${criterium.id}-title`},domProps:{"innerHTML":_vm._s(criterium.toMarkdown())}}),(!_vm.showDefaultFeedbackFields)?_c('button',{staticClass:"btn-show",attrs:{"aria-label":_vm.$t('show-default-description'),"title":_vm.$t('show-default-description')},on:{"click":function($event){$event.preventDefault();ext.showDefaultFeedback = !ext.showDefaultFeedback}}},[_c('i',{staticClass:"btn-icon-show-feedback fa",class:{'is-feedback-visible': _vm.showDefaultFeedbackFields || ext.showDefaultFeedback},attrs:{"tabindex":"-1","aria-hidden":"true"}})]):_vm._e()]),(_vm.rubric.useWeights)?_c('div',{staticClass:"treenode-weight mod-pad"},[_c('span',{staticClass:"treenode-weight-title"},[_vm._v(_vm._s(_vm.$t('weight'))+": ")]),_c('span',[_vm._v(_vm._s(_vm._f("formatNum")(_vm.rubric.hasAbsoluteWeights && _vm.rubric.filterLevelsByCriterium(criterium).length ? 100 : _vm.rubric.getCriteriumWeight(criterium))))]),_c('span',{staticClass:"sr-only"},[_vm._v("%")]),_c('i',{staticClass:"fa fa-percent",attrs:{"aria-hidden":"true"}})]):_vm._e(),_c('div',{staticClass:"treenode-rubric-input rb-md:col-start-1 rb-sm:col-span-full",on:{"mouseover":function($event){_vm.highlightedTreeNode = criterium},"mouseout":function($event){_vm.highlightedTreeNode = null}}},[_c('tree-node-entry',{attrs:{"rubric":_vm.rubric,"ext":ext,"evaluation":evaluation,"preview":_vm.preview,"show-default-feedback-fields":_vm.showDefaultFeedbackFields},on:{"select":_vm.selectLevel,"deselect":_vm.deselectLevel,"range-level-score":_vm.updateRangeLevelScore}}),(evaluation && (_vm.showDefaultFeedbackFields || ext.showDefaultFeedback))?_c('div',{staticClass:"treenode-custom-feedback rb-md:col-start-1 rb-sm:col-span-full"},[_c('textarea',{directives:[{name:"model",rawName:"v-model",value:(evaluation.feedback),expression:"evaluation.feedback"}],staticClass:"ta-custom-feedback",attrs:{"placeholder":_vm.$t('extra-feedback')},domProps:{"value":(evaluation.feedback)},on:{"input":[function($event){if($event.target.composing)return;_vm.$set(evaluation, "feedback", $event.target.value)},function($event){return _vm.onTreeNodeFeedbackChanged(evaluation)}]}})]):_vm._e()],1),(_vm.useScores)?_c('div',{staticClass:"rb-sm:col-start-2"},[_c('div',{staticClass:"treenode-score-calc mod-criterium",class:{'mod-empty': _vm.preview || score === null}},[_c('span',{staticClass:"sr-only"},[_vm._v(_vm._s(_vm.$t('total'))+":")]),_c('score-display',{attrs:{"score":_vm.preview ? null : score,"percent":_vm.rubric.useRelativeWeights,"is-invalid":_vm.hasRangeError(evaluation)}}),_vm._v(" "),(!_vm.rubric.useRelativeWeights)?_c('span',{staticClass:"sr-only"},[_vm._v(_vm._s(_vm.$t('points')))]):_vm._e()],1)]):_vm._e()]})]}),(_vm.useScores)?[_c('div',{staticClass:"total-title rb-md-max:col-start-1",class:_vm.rubric.useWeights ? 'rb-lg:col-start-3' : 'rb-lg:col-start-2'},[_vm._v(_vm._s(_vm.$t('total'))+" "+_vm._s(_vm.$t('subsection'))+":")]),_c('div',{staticClass:"treenode-score-calc mod-cluster",class:{'mod-empty': _vm.preview || score === null}},[_c('score-display',{attrs:{"score":_vm.preview ? null : score,"percent":_vm.rubric.useRelativeWeights}}),_vm._v(" "),(!_vm.rubric.useRelativeWeights)?_c('span',{staticClass:"sr-only"},[_vm._v(_vm._s(_vm.$t('points')))]):_vm._e()],1)]:_vm._e(),_c('div',{staticClass:"cluster-sep",class:{ 'mod-hide-last': _vm.useGrades }})]}),_vm._t("slot-inner"),(_vm.useScores)?[_c('div',{staticClass:"total-title rb-md-max:col-start-1",class:_vm.rubric.useWeights ? 'rb-lg:col-start-3' : 'rb-lg:col-start-2'},[_vm._v(_vm._s(_vm.$t('total'))+" "+_vm._s(_vm.$t('rubric'))+":")]),_c('div',{staticClass:"treenode-score-calc mod-rubric",class:{'mod-empty': _vm.preview || _vm.rubricEvaluation.getRubricScore() === null}},[_c('score-display',{attrs:{"score":_vm.preview ? null : _vm.rubricEvaluation.getRubricScore(),"percent":_vm.rubric.useRelativeWeights}}),_vm._v(" "),(!_vm.rubric.useRelativeWeights)?_c('span',{staticClass:"sr-only"},[_vm._v(_vm._s(_vm.$t('points')))]):_vm._e()],1),(!_vm.rubric.useRelativeWeights)?[_c('div',{staticClass:"total-title rb-md-max:col-start-1",class:_vm.rubric.useWeights ? 'rb-lg:col-start-3' : 'rb-lg:col-start-2'},[_vm._v("Maximum:")]),_c('div',{staticClass:"treenode-score-calc mod-rubric-max"},[_c('score-display',{attrs:{"score":_vm.rubric.getMaximumScore()}}),_vm._v(" "),_c('span',{staticClass:"sr-only"},[_vm._v(_vm._s(_vm.$t('points')))])],1)]:_vm._e()]:_vm._e()],2)
}
var RubricEntryvue_type_template_id_3863a76a_scoped_true_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/ScoreDisplay.vue?vue&type=template&id=4c97ea8e
var ScoreDisplayvue_type_template_id_4c97ea8e_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return (_vm.score !== null)?_c('span',{style:(_vm.isInvalid ? 'color: #e10505' : '')},[(_vm.isInvalid)?_c('i',{staticClass:"fa fa-warning",staticStyle:{"font-size":".8125rem","margin-right":".1875rem"},attrs:{"aria-hidden":"true"}}):_vm._e(),_vm._v(_vm._s(this.score.toLocaleString(undefined, {maximumFractionDigits: 2}))),(_vm.percent)?[_c('span',{staticClass:"sr-only"},[_vm._v("%")]),_c('i',{staticClass:"fa fa-percent",attrs:{"aria-hidden":"true"}})]:_vm._e()],2):_c('span',{attrs:{"aria-hidden":"true"},domProps:{"innerHTML":_vm._s('&nbsp;')}})
}
var ScoreDisplayvue_type_template_id_4c97ea8e_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/ScoreDisplay.vue?vue&type=script&lang=ts


let ScoreDisplay = class ScoreDisplay extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    score;
    percent;
    isInvalid;
};
__decorate([
    Prop({ type: Number, required: true }),
    __metadata("design:type", Object)
], ScoreDisplay.prototype, "score", void 0);
__decorate([
    Prop({ type: Boolean, default: false }),
    __metadata("design:type", Boolean)
], ScoreDisplay.prototype, "percent", void 0);
__decorate([
    Prop({ type: Boolean, default: false }),
    __metadata("design:type", Boolean)
], ScoreDisplay.prototype, "isInvalid", void 0);
ScoreDisplay = __decorate([
    vue_class_component_esm({})
], ScoreDisplay);
/* harmony default export */ var ScoreDisplayvue_type_script_lang_ts = (ScoreDisplay);

;// CONCATENATED MODULE: ./src/Components/ScoreDisplay.vue?vue&type=script&lang=ts
 /* harmony default export */ var Components_ScoreDisplayvue_type_script_lang_ts = (ScoreDisplayvue_type_script_lang_ts); 
;// CONCATENATED MODULE: ./src/Components/ScoreDisplay.vue





/* normalize component */
;
var ScoreDisplay_component = normalizeComponent(
  Components_ScoreDisplayvue_type_script_lang_ts,
  ScoreDisplayvue_type_template_id_4c97ea8e_render,
  ScoreDisplayvue_type_template_id_4c97ea8e_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Components_ScoreDisplay = (ScoreDisplay_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Entry/TreeNodeEntry.vue?vue&type=template&id=619826ea&scoped=true
var TreeNodeEntryvue_type_template_id_619826ea_scoped_true_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:"treenode-choices"},[_vm._l((_vm.entryChoices),function({ level, title, description, score, markdown, isSelected }){return _c('div',{staticClass:"treenode-choice",class:{'mod-show-description': _vm.showDescription, 'mod-empty-description': _vm.showDescription && !description}},[_c(_vm.preview ? 'div' : 'button',{tag:"component",staticClass:"treenode-level",class:{'mod-fixed-levels': !_vm.rubric.hasCustomLevels, 'is-selected': isSelected, 'mod-btn': !_vm.preview, 'mod-error': _vm.hasLevelError(level) },attrs:{"disabled":_vm.hasLevelError(level)},on:{"click":function($event){$event.stopPropagation();return _vm.onSelect(level)}}},[_c('span',{staticClass:"treenode-level-title",class:{'mod-fixed-levels': !_vm.rubric.hasCustomLevels}},[_vm._v(_vm._s(title))]),(_vm.useScores)?_c('span',{staticClass:"treenode-level-score"},[(level.useRangeScore)?[_vm._v(_vm._s(_vm._f("formatNum")(level.minimumScore))+" "),_c('i',{staticClass:"fa fa-caret-right"})]:_vm._e(),_vm._v(" "+_vm._s(_vm._f("formatNum")(score))),(_vm.rubric.useRelativeWeights)?[_c('span',{staticClass:"sr-only"},[_vm._v("%")]),_c('i',{staticClass:"fa fa-percent",attrs:{"aria-hidden":"true"}})]:_c('span',{staticClass:"sr-only"},[_vm._v(_vm._s(_vm.$t('points')))])],2):_c('span',[_c('i',{staticClass:"treenode-level-icon-check fa fa-check",class:{ 'is-selected': isSelected }})])]),(!_vm.preview && _vm.useScores && level.useRangeScore && isSelected)?_c('div',{staticClass:"manual-score-wrap",class:{'mod-desc': _vm.showDescription}},[_c('div',{staticClass:"manual-score",on:{"click":function($event){$event.stopPropagation();}}},[_c('label',{attrs:{"for":"adjusted-score"}},[_vm._v(_vm._s(_vm.$t('adjusted-score'))+":")]),_c('input',{directives:[{name:"model",rawName:"v-model.number",value:(_vm.evaluation.score),expression:"evaluation.score",modifiers:{"number":true}}],ref:"manual-score",refInFor:true,staticClass:"input-detail mod-range",attrs:{"id":"adjusted-score","type":"number","min":level.minimumScore,"max":level.score,"required":"","step":"1"},domProps:{"value":(_vm.evaluation.score)},on:{"input":[function($event){if($event.target.composing)return;_vm.$set(_vm.evaluation, "score", _vm._n($event.target.value))},function($event){return _vm.onUpdateRangeScore(level)}],"blur":function($event){return _vm.$forceUpdate()}}})])]):_vm._e(),(_vm.showDescription)?[(description)?_c('div',{staticClass:"treenode-level-description is-feedback-visible",domProps:{"innerHTML":_vm._s(markdown)}}):_c('div',{staticClass:"treenode-level-description mod-no-default-feedback is-feedback-visible"},[_c('em',[_vm._v(_vm._s(_vm.$t('no-description')))])])]:_vm._e()],2)}),(!_vm.preview)?_c('button',{staticClass:"btn-deselect",class:{'is-active': _vm.hasSelection},attrs:{"title":_vm.$t('deselect'),"disabled":!_vm.hasSelection},on:{"click":function($event){$event.stopPropagation();return _vm.onDeselect.apply(null, arguments)}}},[_c('i',{staticClass:"gg-backspace",attrs:{"aria-hidden":"true"}}),_c('span',{staticClass:"sr-only"},[_vm._v(_vm._s(_vm.$t('deselect')))])]):_vm._e()],2)
}
var TreeNodeEntryvue_type_template_id_619826ea_scoped_true_staticRenderFns = []


;// CONCATENATED MODULE: ./src/Domain/RubricEvaluation.ts
function RubricEvaluation_add(v1, v2) {
    if (typeof v1 === 'string') {
        v1 = 0;
    }
    if (typeof v2 === 'string') {
        v2 = 0;
    }
    return v1 + v2;
}
var EvaluationMode;
(function (EvaluationMode) {
    EvaluationMode[EvaluationMode["Entry"] = 0] = "Entry";
    EvaluationMode[EvaluationMode["Result"] = 1] = "Result";
})(EvaluationMode || (EvaluationMode = {}));
class RubricEvaluation {
    mode;
    rubric;
    evaluators = [];
    treeNodeResults = [];
    treeNodeEvaluations = [];
    constructor(mode, rubric, options = {}) {
        this.mode = mode;
        this.rubric = rubric;
        if (mode === EvaluationMode.Entry) {
            if (options.treeNodeEvaluations) {
                this.treeNodeEvaluations = options.treeNodeEvaluations;
            }
        }
        else if (mode === EvaluationMode.Result) {
            if (options.evaluators) {
                this.evaluators = options.evaluators;
            }
            if (options.treeNodeResults) {
                this.treeNodeResults = options.treeNodeResults;
            }
        }
    }
    static fromEntry(rubric, treeNodeEvaluations) {
        return new RubricEvaluation(EvaluationMode.Entry, rubric, { treeNodeEvaluations });
    }
    static fromResults(rubric, evaluators, treeNodeResults) {
        return new RubricEvaluation(EvaluationMode.Result, rubric, { evaluators, treeNodeResults });
    }
    static fromRubricResults(rubric, rubricResults) {
        const evaluators = rubricResults.map((res) => ({ resultId: res.result_id, userId: res.user.id, name: res.user.name, role: res.user.role, date: res.date }));
        const r_evaluations = rubricResults.map((res) => res.results);
        const treeNodeResults = rubric.getAllTreeNodes().map(treeNode => {
            const defaultEvaluation = { treeNode, level: null, score: 0, feedback: '' };
            const evaluations = evaluators.map((evaluator, index) => {
                const treeNodeEvaluation = { ...defaultEvaluation };
                const evaluations = r_evaluations[index];
                const treeNodeEvaluationInput = evaluations.find((o) => String(o['tree_node_id']) === treeNode.id);
                if (treeNodeEvaluationInput) {
                    const chosenLevel = rubric.levels.find(level => level.id === String(treeNodeEvaluationInput['level_id']));
                    treeNodeEvaluation.level = chosenLevel || null;
                    treeNodeEvaluation.score = (typeof treeNodeEvaluationInput.score === 'number') ? treeNodeEvaluationInput.score : null;
                    treeNodeEvaluation.feedback = treeNodeEvaluationInput.comment;
                }
                return { evaluator, treeNodeEvaluation };
            });
            return { treeNode, evaluations };
        });
        return this.fromResults(rubric, evaluators, treeNodeResults);
    }
    getEvaluators() {
        return this.evaluators;
    }
    getCriteriumScore(criterium, evaluator = undefined) {
        const score = this.getTreeNodeEvaluation(criterium, evaluator)?.score;
        if (score === undefined) {
            return null;
        }
        return score;
    }
    getCategoryScore(category, evaluation = undefined) {
        if (this.mode === EvaluationMode.Result) {
            if (typeof evaluation?.score === 'number') {
                return evaluation.score;
            }
            if (evaluation?.score === null) {
                return null;
            }
        }
        return this.getCriteriaScore(this.rubric.getAllCriteria(category), evaluation?.evaluator);
    }
    getClusterScore(cluster, evaluation = undefined) {
        if (this.mode === EvaluationMode.Result) {
            if (typeof evaluation?.score === 'number') {
                return evaluation.score;
            }
            if (evaluation?.score === null) {
                return null;
            }
        }
        return this.getCriteriaScore(this.rubric.getAllCriteria(cluster), evaluation?.evaluator);
    }
    getRubricScore(evaluator = undefined) {
        const treeNodeScore = this.getTreeNodeEvaluation(this.rubric, evaluator)?.score;
        if (this.mode === EvaluationMode.Result) {
            if (typeof treeNodeScore === 'number') {
                return treeNodeScore;
            }
            if (treeNodeScore === null) {
                return null;
            }
        }
        return this.getCriteriaScore(this.rubric.getAllCriteria(), evaluator);
    }
    getCriteriaScore(criteria, evaluator = undefined) {
        if (!criteria.length) {
            return 0;
        }
        if (criteria.find(criterium => this.getCriteriumScore(criterium, evaluator) === null)) {
            return null;
        }
        if (!this.rubric.useRelativeWeights) {
            return criteria.map(criterium => this.getCriteriumScore(criterium, evaluator)).reduce(RubricEvaluation_add, 0);
        }
        const eqRestWeight = this.rubric.eqRestWeightPrecise;
        const scoreWeights = criteria.map(criterium => {
            const weight = criterium.rel_weight === null ? eqRestWeight : criterium.rel_weight;
            return { weight, score: this.getCriteriumScore(criterium, evaluator) * (weight / 100) };
        });
        const totWeight = scoreWeights.map(s => s.weight).reduce(RubricEvaluation_add, 0);
        if (!totWeight) {
            return 0;
        }
        const score = scoreWeights.map(s => s.score).reduce(RubricEvaluation_add, 0);
        return (score / totWeight) * 100;
    }
    getTreeNodeResult(treeNode) {
        const treeNodeResult = this.treeNodeResults.find((_) => _.treeNode === treeNode);
        if (!treeNodeResult) {
            throw new Error(`No data found for: ${treeNode}`);
        }
        return treeNodeResult;
    }
    getTreeNodeEvaluation(treeNode, evaluator = undefined) {
        if (this.mode === EvaluationMode.Entry) {
            return this.treeNodeEvaluations.find((_) => _.treeNode === treeNode) || null;
        }
        else { // this.mode === EvaluationMode.Result
            const evaluatorEvaluation = this.getTreeNodeResult(treeNode).evaluations.find((_) => _.evaluator === evaluator);
            if (!evaluatorEvaluation) {
                throw new Error(`No evaluation found for: ${treeNode} and evaluator: ${evaluator && evaluator.name}`);
            }
            return evaluatorEvaluation.treeNodeEvaluation;
        }
    }
    getEvaluations(treeNode) {
        return this.getTreeNodeResult(treeNode).evaluations.map(_ => ({ evaluator: _.evaluator, ..._.treeNodeEvaluation }));
    }
    static isInvalidEvaluation(evaluation) {
        if (!evaluation) {
            return false;
        }
        if (evaluation.score === null) {
            return false;
        }
        const level = evaluation.level;
        if (!level) {
            return false;
        }
        if (!level.useRangeScore) {
            return false;
        }
        if (level.minimumScore === null) {
            return true;
        }
        return (evaluation.score < level.minimumScore) || (evaluation.score > level.score);
    }
}

;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Entry/TreeNodeEntry.vue?vue&type=script&lang=ts
var TreeNodeEntryvue_type_script_lang_ts_a, TreeNodeEntryvue_type_script_lang_ts_b, TreeNodeEntryvue_type_script_lang_ts_c;






let TreeNodeEntry = class TreeNodeEntry extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    rubric;
    ext;
    evaluation;
    preview;
    showDefaultFeedbackFields;
    get hasLevels() {
        return !!this.ext.levels.length;
    }
    get useScores() {
        return this.rubric.useScores;
    }
    get showDescription() {
        return this.showDefaultFeedbackFields || this.ext.showDefaultFeedback;
    }
    get chosenLevel() {
        if (this.preview) {
            return null;
        }
        return this.evaluation?.level || null;
    }
    get entryChoices() {
        if (this.hasLevels) {
            return this.ext.levels.map(level => new LevelEntryChoice(level, this.chosenLevel));
        }
        return this.ext.choices.map(choiceObject => new ChoiceEntryChoice(choiceObject, this.chosenLevel, !this.rubric.useRelativeWeights));
    }
    get hasRangeError() {
        return RubricEvaluation.isInvalidEvaluation(this.evaluation);
    }
    get hasSelection() {
        return this.entryChoices.find(c => c?.isSelected);
    }
    hasLevelError(level) {
        if (!level.useRangeScore) {
            return false;
        }
        if (level.minimumScore === null) {
            return true;
        }
        if (level.minimumScore >= level.score) {
            return true;
        }
        return false;
    }
    onSelect(level) {
        if (!this.preview) {
            this.$emit('select', this.evaluation, level);
            this.$nextTick(() => {
                if (!this.$refs['manual-score']) {
                    return;
                }
                const input = this.$refs['manual-score'];
                input[0]?.focus();
                input[0]?.select();
            });
        }
    }
    onDeselect() {
        if (!this.preview) {
            this.$emit('deselect', this.evaluation);
        }
    }
    onUpdateRangeScore(level) {
        if (!this.preview) {
            this.$emit('range-level-score', this.evaluation, level);
        }
    }
};
__decorate([
    Prop({ type: Rubric, required: true }),
    __metadata("design:type", typeof (TreeNodeEntryvue_type_script_lang_ts_a = typeof Rubric !== "undefined" && Rubric) === "function" ? TreeNodeEntryvue_type_script_lang_ts_a : Object)
], TreeNodeEntry.prototype, "rubric", void 0);
__decorate([
    Prop({ type: Object, required: true }),
    __metadata("design:type", typeof (TreeNodeEntryvue_type_script_lang_ts_b = typeof interfaces_namespaceObject.TreeNodeExt !== "undefined" && interfaces_namespaceObject.TreeNodeExt) === "function" ? TreeNodeEntryvue_type_script_lang_ts_b : Object)
], TreeNodeEntry.prototype, "ext", void 0);
__decorate([
    Prop({ type: Object, default: null }),
    __metadata("design:type", Object)
], TreeNodeEntry.prototype, "evaluation", void 0);
__decorate([
    Prop({ type: Boolean, default: false }),
    __metadata("design:type", Boolean)
], TreeNodeEntry.prototype, "preview", void 0);
__decorate([
    Prop({ type: Boolean, default: false }),
    __metadata("design:type", Boolean)
], TreeNodeEntry.prototype, "showDefaultFeedbackFields", void 0);
TreeNodeEntry = __decorate([
    vue_class_component_esm({
        filters: {
            formatNum: function (v) {
                if (v === null) {
                    return '';
                }
                return v.toLocaleString(undefined, { maximumFractionDigits: 2 });
            }
        }
    })
], TreeNodeEntry);
/* harmony default export */ var TreeNodeEntryvue_type_script_lang_ts = (TreeNodeEntry);

;// CONCATENATED MODULE: ./src/Components/Entry/TreeNodeEntry.vue?vue&type=script&lang=ts
 /* harmony default export */ var Entry_TreeNodeEntryvue_type_script_lang_ts = (TreeNodeEntryvue_type_script_lang_ts); 
;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-66.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-66.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-66.use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-66.use[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Entry/TreeNodeEntry.vue?vue&type=style&index=0&id=619826ea&prod&lang=scss&scoped=true
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Components/Entry/TreeNodeEntry.vue?vue&type=style&index=0&id=619826ea&prod&lang=scss&scoped=true

;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-56.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-56.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-56.use[2]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Entry/TreeNodeEntry.vue?vue&type=style&index=1&id=619826ea&prod&lang=css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Components/Entry/TreeNodeEntry.vue?vue&type=style&index=1&id=619826ea&prod&lang=css

// EXTERNAL MODULE: ../../../../../../../../node_modules/@intlify/vue-i18n-loader/lib/index.js!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Entry/TreeNodeEntry.vue?vue&type=custom&index=0&blockType=i18n
var TreeNodeEntryvue_type_custom_index_0_blockType_i18n = __webpack_require__(633);
var TreeNodeEntryvue_type_custom_index_0_blockType_i18n_default = /*#__PURE__*/__webpack_require__.n(TreeNodeEntryvue_type_custom_index_0_blockType_i18n);
;// CONCATENATED MODULE: ./src/Components/Entry/TreeNodeEntry.vue?vue&type=custom&index=0&blockType=i18n
 /* harmony default export */ var Entry_TreeNodeEntryvue_type_custom_index_0_blockType_i18n = ((TreeNodeEntryvue_type_custom_index_0_blockType_i18n_default())); 
;// CONCATENATED MODULE: ./src/Components/Entry/TreeNodeEntry.vue



;



/* normalize component */

var TreeNodeEntry_component = normalizeComponent(
  Entry_TreeNodeEntryvue_type_script_lang_ts,
  TreeNodeEntryvue_type_template_id_619826ea_scoped_true_render,
  TreeNodeEntryvue_type_template_id_619826ea_scoped_true_staticRenderFns,
  false,
  null,
  "619826ea",
  null
  
)

/* custom blocks */
;
if (typeof Entry_TreeNodeEntryvue_type_custom_index_0_blockType_i18n === 'function') Entry_TreeNodeEntryvue_type_custom_index_0_blockType_i18n(TreeNodeEntry_component)

/* harmony default export */ var Entry_TreeNodeEntry = (TreeNodeEntry_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricEntry.vue?vue&type=script&lang=ts
var RubricEntryvue_type_script_lang_ts_a, RubricEntryvue_type_script_lang_ts_b;







let RubricEntry = class RubricEntry extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    treeNodeData = [];
    highlightedTreeNode = null;
    rubric;
    rubricEvaluation;
    uiState;
    options;
    preview;
    showErrors;
    existingResult;
    get useScores() {
        return this.rubric.useScores;
    }
    get useGrades() {
        return !this.rubric.useScores;
    }
    getClusterRowsData(rubric) {
        return rubric.clusters
            .filter(cluster => cluster.hasChildren())
            .map(cluster => ({
            cluster,
            score: this.preview ? 0 : this.rubricEvaluation?.getClusterScore(cluster),
            ...this.getTreeNodeRowData(cluster)
        }));
    }
    getCategoryRowsData(cluster) {
        return cluster.categories
            .filter(category => category.hasChildren())
            .map(category => ({
            category,
            ...this.getTreeNodeRowData(category)
        }));
    }
    getCriteriumRowsData(category) {
        return category.criteria.map(criterium => ({
            criterium,
            score: this.preview ? 0 : this.rubricEvaluation?.getCriteriumScore(criterium),
            ...this.getTreeNodeRowData(criterium)
        }));
    }
    getTreeNodeRowData(treeNode) {
        return {
            ext: this.getTreeNodeData(treeNode),
            evaluation: this.preview ? null : this.rubricEvaluation?.getTreeNodeEvaluation(treeNode)
        };
    }
    get showDefaultFeedbackFields() {
        return this.uiState.showDefaultFeedbackFields;
    }
    toggleDefaultFeedbackFields() {
        const show = this.uiState.showDefaultFeedbackFields = !this.uiState.showDefaultFeedbackFields;
        if (!show) {
            this.rubric.getAllCriteria().forEach(criterium => {
                this.getTreeNodeData(criterium).showDefaultFeedback = false;
            });
        }
    }
    onTreeNodeFeedbackChanged(evaluation) {
        if (!evaluation) {
            return;
        }
        this.$emit('criterium-feedback-changed', evaluation.treeNode, evaluation.feedback);
    }
    isSelected(criterium, level) {
        const isDefaultLevel = level.isDefault;
        if (!this.rubricEvaluation) {
            return isDefaultLevel;
        }
        const evaluation = this.rubricEvaluation.getTreeNodeEvaluation(criterium);
        if (!evaluation || !evaluation.level) {
            return isDefaultLevel;
        }
        return evaluation.level === level;
    }
    selectLevel(evaluation, level) {
        if (this.preview) {
            return;
        }
        if (evaluation.level === level) {
            return;
        }
        evaluation.level = level;
        // careful: getChoiceScore will fail
        const criterium = evaluation.treeNode;
        if (this.rubric.useScores) {
            if (this.rubric.useRelativeWeights) {
                evaluation.score = level.score;
            }
            else {
                if (level.criteriumId === criterium.id) {
                    evaluation.score = level.score;
                }
                else {
                    evaluation.score = this.rubric.getChoiceScore(criterium, level);
                }
            }
        }
        this.$emit('level-selected', evaluation.treeNode, level);
    }
    deselectLevel(evaluation) {
        if (this.preview) {
            return;
        }
        if (evaluation.level === null) {
            return;
        }
        evaluation.level = null;
        evaluation.score = null;
        this.$emit('level-selected', evaluation.treeNode, null);
    }
    updateRangeLevelScore(evaluation, level) {
        if (this.preview) {
            return;
        }
        if (evaluation.level !== level) {
            return;
        }
        this.$emit('level-selected', evaluation.treeNode, level);
    }
    getTreeNodeData(treeNode) {
        return this.treeNodeData.find((_) => _.treeNode === treeNode) || null;
    }
    hasRangeError(evaluation) {
        return RubricEvaluation.isInvalidEvaluation(evaluation);
    }
    initData() {
        const rubric = this.rubric;
        this.treeNodeData = rubric.getAllTreeNodes().map(treeNode => {
            if (treeNode instanceof Criterium) {
                const criteriumLevels = rubric.filterLevelsByCriterium(treeNode);
                if (criteriumLevels.length) {
                    return { treeNode, levels: criteriumLevels, choices: [], showDefaultFeedback: false };
                }
                else {
                    const choices = rubric.rubricLevels.map(level => {
                        const choice = rubric.getChoice(treeNode, level);
                        const score = rubric.getChoiceScore(treeNode, level);
                        return { title: level.title, feedback: choice?.feedback || '', score, choice, level };
                    });
                    return { treeNode, levels: [], choices, showDefaultFeedback: false };
                }
            }
            else {
                return { treeNode, levels: [], choices: [], showDefaultFeedback: false };
            }
        });
        if (rubric.useScores && !rubric.useRelativeWeights) {
            rubric.hasAbsoluteWeights = Rubric.usesAbsoluteWeights(rubric);
        }
        if (this.existingResult && this.rubricEvaluation) {
            const existingResults = this.existingResult.results;
            const rubricEvaluation = this.rubricEvaluation;
            this.rubric.getAllTreeNodes().forEach(treeNode => {
                const existingResult = existingResults.find((r) => r.tree_node_id === parseInt(treeNode.id));
                const evaluation = rubricEvaluation.getTreeNodeEvaluation(treeNode);
                if (existingResult && evaluation) {
                    if (existingResult.comment) {
                        evaluation.feedback = existingResult.comment;
                    }
                    if (treeNode.getType() === 'criterium') {
                        if (existingResult.level_id) {
                            const level = rubric.levels.find(l => existingResult.level_id === parseInt(l.id));
                            if (level) {
                                this.selectLevel(evaluation, level);
                                evaluation.score = existingResult.score;
                            }
                        }
                        else {
                            this.deselectLevel(evaluation);
                            evaluation.score = null;
                        }
                    }
                }
            });
            this.$emit('level-selected');
        }
    }
    created() {
        this.initData();
    }
};
__decorate([
    Prop({ type: Rubric }),
    __metadata("design:type", typeof (RubricEntryvue_type_script_lang_ts_a = typeof Rubric !== "undefined" && Rubric) === "function" ? RubricEntryvue_type_script_lang_ts_a : Object)
], RubricEntry.prototype, "rubric", void 0);
__decorate([
    Prop({ type: RubricEvaluation }),
    __metadata("design:type", Object)
], RubricEntry.prototype, "rubricEvaluation", void 0);
__decorate([
    Prop({ type: Object }),
    __metadata("design:type", Object)
], RubricEntry.prototype, "uiState", void 0);
__decorate([
    Prop({ type: Object, default: () => ({}) }),
    __metadata("design:type", Object)
], RubricEntry.prototype, "options", void 0);
__decorate([
    Prop({ type: Boolean, default: false }),
    __metadata("design:type", Boolean)
], RubricEntry.prototype, "preview", void 0);
__decorate([
    Prop({ type: Boolean, default: false }),
    __metadata("design:type", Boolean)
], RubricEntry.prototype, "showErrors", void 0);
__decorate([
    Prop({ type: Object, default: null }),
    __metadata("design:type", Object)
], RubricEntry.prototype, "existingResult", void 0);
RubricEntry = __decorate([
    vue_class_component_esm({
        components: { ScoreDisplay: Components_ScoreDisplay, TreeNodeEntry: Entry_TreeNodeEntry },
        filters: {
            formatNum: function (v) {
                return v.toLocaleString(undefined, { maximumFractionDigits: 2 });
            }
        }
    })
], RubricEntry);
/* harmony default export */ var RubricEntryvue_type_script_lang_ts = (RubricEntry);

;// CONCATENATED MODULE: ./src/Views/RubricEntry.vue?vue&type=script&lang=ts
 /* harmony default export */ var Views_RubricEntryvue_type_script_lang_ts = (RubricEntryvue_type_script_lang_ts); 
;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-66.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-66.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-66.use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-66.use[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricEntry.vue?vue&type=style&index=0&id=3863a76a&prod&lang=scss
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Views/RubricEntry.vue?vue&type=style&index=0&id=3863a76a&prod&lang=scss

;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-66.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-66.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-66.use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-66.use[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricEntry.vue?vue&type=style&index=1&id=3863a76a&prod&lang=scss&scoped=true
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Views/RubricEntry.vue?vue&type=style&index=1&id=3863a76a&prod&lang=scss&scoped=true

// EXTERNAL MODULE: ../../../../../../../../node_modules/@intlify/vue-i18n-loader/lib/index.js!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricEntry.vue?vue&type=custom&index=0&blockType=i18n
var RubricEntryvue_type_custom_index_0_blockType_i18n = __webpack_require__(936);
var RubricEntryvue_type_custom_index_0_blockType_i18n_default = /*#__PURE__*/__webpack_require__.n(RubricEntryvue_type_custom_index_0_blockType_i18n);
;// CONCATENATED MODULE: ./src/Views/RubricEntry.vue?vue&type=custom&index=0&blockType=i18n
 /* harmony default export */ var Views_RubricEntryvue_type_custom_index_0_blockType_i18n = ((RubricEntryvue_type_custom_index_0_blockType_i18n_default())); 
;// CONCATENATED MODULE: ./src/Views/RubricEntry.vue



;



/* normalize component */

var RubricEntry_component = normalizeComponent(
  Views_RubricEntryvue_type_script_lang_ts,
  RubricEntryvue_type_template_id_3863a76a_scoped_true_render,
  RubricEntryvue_type_template_id_3863a76a_scoped_true_staticRenderFns,
  false,
  null,
  "3863a76a",
  null
  
)

/* custom blocks */
;
if (typeof Views_RubricEntryvue_type_custom_index_0_blockType_i18n === 'function') Views_RubricEntryvue_type_custom_index_0_blockType_i18n(RubricEntry_component)

/* harmony default export */ var Views_RubricEntry = (RubricEntry_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricPreviewWrapper.vue?vue&type=script&lang=ts





let RubricPreviewWrapper = class RubricPreviewWrapper extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    rubric;
    uiState = {
        showDefaultFeedbackFields: false
    };
    rubricData;
    created() {
        const convertedRubricData = convertRubricData(this.rubricData);
        this.rubric = Rubric.fromJSON(convertedRubricData);
    }
};
__decorate([
    Prop({ type: Object, required: true }),
    __metadata("design:type", Object)
], RubricPreviewWrapper.prototype, "rubricData", void 0);
RubricPreviewWrapper = __decorate([
    vue_class_component_esm({
        components: {
            RubricEntry: Views_RubricEntry
        },
    })
], RubricPreviewWrapper);
/* harmony default export */ var RubricPreviewWrappervue_type_script_lang_ts = (RubricPreviewWrapper);

;// CONCATENATED MODULE: ./src/Views/RubricPreviewWrapper.vue?vue&type=script&lang=ts
 /* harmony default export */ var Views_RubricPreviewWrappervue_type_script_lang_ts = (RubricPreviewWrappervue_type_script_lang_ts); 
;// CONCATENATED MODULE: ./src/Views/RubricPreviewWrapper.vue





/* normalize component */
;
var RubricPreviewWrapper_component = normalizeComponent(
  Views_RubricPreviewWrappervue_type_script_lang_ts,
  RubricPreviewWrappervue_type_template_id_d0755506_render,
  RubricPreviewWrappervue_type_template_id_d0755506_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Views_RubricPreviewWrapper = (RubricPreviewWrapper_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricEntryWrapper.vue?vue&type=template&id=4103181c
var RubricEntryWrappervue_type_template_id_4103181c_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return (_vm.rubric)?_c('div',{attrs:{"id":"app"}},[_c('rubric-entry',{attrs:{"rubric":_vm.rubric,"rubric-evaluation":_vm.rubricEvaluation,"existing-result":_vm.existingResult,"ui-state":_vm.uiState,"show-errors":_vm.showErrors},on:{"level-selected":_vm.updateRubricResults,"criterium-feedback-changed":_vm.updateRubricResults},scopedSlots:_vm._u([{key:"slot-inner",fn:function(){return [_vm._t("slot-outer")]},proxy:true}],null,true)})],1):_vm._e()
}
var RubricEntryWrappervue_type_template_id_4103181c_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricEntryWrapper.vue?vue&type=script&lang=ts







let RubricEntryWrapper = class RubricEntryWrapper extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    rubric;
    uiState = {
        showDefaultFeedbackFields: false
    };
    treeNodeEvaluations = [];
    rubricEvaluation = null;
    rubricData;
    rubricResults;
    showErrors;
    existingResult;
    updateRubricResults() {
        if (this.rubricResults !== null) {
            this.rubricResults.results = this.treeNodeEvaluations.map(evaluation => {
                const node = evaluation.treeNode;
                const d = {
                    'tree_node_id': parseInt(node.id),
                    'level_id': (evaluation.level !== null) ? parseInt(evaluation.level.id) : null,
                    'comment': evaluation.feedback.length > 0 ? evaluation.feedback : null,
                    'type': node.getType()
                };
                if (this.rubric.useScores && node.getType() === 'criterium' && evaluation.level?.useRangeScore) {
                    d.score = evaluation.score;
                    if (d.score < evaluation.level?.minimumScore || d.score > evaluation.level?.score) {
                        d.error = 'range';
                    }
                }
                return d;
            });
        }
    }
    getCriteriumDefaultLevel(rubric, criterium, defaultLevel) {
        const criteriumLevels = rubric.filterLevelsByCriterium(criterium);
        if (!criteriumLevels.length) {
            return defaultLevel;
        }
        return criteriumLevels.find(level => level.isDefault) || null;
    }
    getCriteriumDefaultScore(rubric, criterium, defaultLevel) {
        if (!defaultLevel) {
            return null;
        }
        return defaultLevel.criteriumId ? defaultLevel.score : rubric.getChoiceScore(criterium, defaultLevel);
    }
    initData() {
        const convertedRubricData = convertRubricData(this.rubricData);
        const rubric = this.rubric = Rubric.fromJSON(convertedRubricData);
        const defaultLevel = rubric.rubricLevels.find(level => level.isDefault) || null;
        this.treeNodeEvaluations = rubric.getAllTreeNodes().map(treeNode => {
            if (treeNode instanceof Criterium) {
                const level = this.getCriteriumDefaultLevel(rubric, treeNode, defaultLevel);
                const score = this.getCriteriumDefaultScore(rubric, treeNode, level);
                return { treeNode, level, score, feedback: '' };
            }
            return { treeNode, level: null, score: null, feedback: '' };
        });
        this.rubricEvaluation = RubricEvaluation.fromEntry(rubric, this.treeNodeEvaluations);
        this.updateRubricResults();
    }
    created() {
        this.initData();
    }
};
__decorate([
    Prop({ type: Object, required: true }),
    __metadata("design:type", Object)
], RubricEntryWrapper.prototype, "rubricData", void 0);
__decorate([
    Prop({ type: Object, default: null }),
    __metadata("design:type", Object)
], RubricEntryWrapper.prototype, "rubricResults", void 0);
__decorate([
    Prop({ type: Boolean, default: false }),
    __metadata("design:type", Boolean)
], RubricEntryWrapper.prototype, "showErrors", void 0);
__decorate([
    Prop({ type: Object, default: null }),
    __metadata("design:type", Object)
], RubricEntryWrapper.prototype, "existingResult", void 0);
RubricEntryWrapper = __decorate([
    vue_class_component_esm({
        components: {
            RubricEntry: Views_RubricEntry
        },
    })
], RubricEntryWrapper);
/* harmony default export */ var RubricEntryWrappervue_type_script_lang_ts = (RubricEntryWrapper);

;// CONCATENATED MODULE: ./src/Views/RubricEntryWrapper.vue?vue&type=script&lang=ts
 /* harmony default export */ var Views_RubricEntryWrappervue_type_script_lang_ts = (RubricEntryWrappervue_type_script_lang_ts); 
;// CONCATENATED MODULE: ./src/Views/RubricEntryWrapper.vue





/* normalize component */
;
var RubricEntryWrapper_component = normalizeComponent(
  Views_RubricEntryWrappervue_type_script_lang_ts,
  RubricEntryWrappervue_type_template_id_4103181c_render,
  RubricEntryWrappervue_type_template_id_4103181c_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Views_RubricEntryWrapper = (RubricEntryWrapper_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricResultWrapper.vue?vue&type=template&id=0413d52a
var RubricResultWrappervue_type_template_id_0413d52a_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return (_vm.rubric)?_c('div',{attrs:{"id":"app"}},[_c('rubric-result',{attrs:{"rubric":_vm.rubric,"rubric-evaluation":_vm.rubricEvaluation,"rubric-entry-url":_vm.rubricEntryUrl,"can-create-from-existing-rubric":_vm.canCreateFromExistingRubric}})],1):_vm._e()
}
var RubricResultWrappervue_type_template_id_0413d52a_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricResult.vue?vue&type=template&id=a2c9a938&scoped=true
var RubricResultvue_type_template_id_a2c9a938_scoped_true_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return (_vm.rubric && _vm.evaluators.length)?_c('div',{staticClass:"rubric-results-view"},[_c('div',{staticClass:"rubric",class:_vm.showRelativeScores ? 'mod-res-w' : 'mod-res',style:({'--num-cols': _vm.evaluators.length + (_vm.useAbsoluteScores ? 1 : 0)}),on:{"click":function($event){$event.stopPropagation();_vm.selectedTreeNode = null}}},[(_vm.canCreateFromExistingRubric)?_c('div',{staticStyle:{"grid-column":"1 / -1","white-space":"nowrap","background-color":"#f4fffc","border-radius":"3px","padding":"1em"}},[_c('button',{staticClass:"btn-check",class:{ checked: _vm.createFromExisting },on:{"click":function($event){$event.stopPropagation();_vm.createFromExisting = !_vm.createFromExisting}}},[_c('span',{staticClass:"lbl-check",attrs:{"tabindex":"-1"}},[_c('i',{staticClass:"btn-icon-check fa",attrs:{"aria-hidden":"true"}}),_vm._v(_vm._s(_vm.$t('create-from-existing-rubric')))])])]):_vm._e(),(_vm.useRelativeScores)?_c('ul',{staticClass:"rubric-tools",staticStyle:{"padding-left":"1em"}},[_c('li',{staticClass:"app-tool-item"},[_c('button',{staticClass:"btn-check",class:{ checked: _vm.showScores },on:{"click":function($event){$event.stopPropagation();_vm.showScores = !_vm.showScores}}},[_c('span',{staticClass:"lbl-check",attrs:{"tabindex":"-1"}},[_c('i',{staticClass:"btn-icon-check fa",attrs:{"aria-hidden":"true"}}),_vm._v(_vm._s(_vm.$t('numbers-display')))])])])]):_vm._e(),(_vm.showRelativeScores)?_c('div',{staticClass:"treenode-weight-header rb-col-start-2"},[_c('span',[_vm._v(_vm._s(_vm.$t('weight')))])]):_vm._e(),(_vm.showRubricHeader)?_c('ul',{staticClass:"rubric-header",class:_vm.showRelativeScores ? 'rb-col-start-3' : 'rb-col-start-2'},[_vm._l((_vm.evaluators),function(evaluator){return _c('li',{staticClass:"rubric-header-title mod-res",class:{ 'mod-grades': _vm.useGradesMode },attrs:{"title":evaluator.name}},[_vm._v(_vm._s(_vm._f("capitalize")(evaluator.name)))])}),(_vm.useAbsoluteScores)?_c('li',{staticClass:"rubric-header-title mod-res mod-max"},[_vm._v("Max.")]):_vm._e()],2):_vm._e(),(_vm.showRubricHeader)?_c('ul',{staticClass:"rubric-header mod-date",class:_vm.showRelativeScores ? 'rb-col-start-3' : 'rb-col-start-2'},[_vm._l((_vm.evaluators),function(evaluator){return _c('li',{staticClass:"rubric-header-date",class:{ 'mod-grades': _vm.useGradesMode },attrs:{"title":evaluator.name}},[_vm._v(_vm._s(_vm._f("formatDate")(evaluator.date)))])}),(_vm.useAbsoluteScores)?_c('li',{staticClass:"rubric-header-date mod-max",attrs:{"aria-hidden":"true"}}):_vm._e()],2):_vm._e(),(_vm.showRubricHeader && _vm.createFromExisting)?_c('ul',{staticClass:"rubric-header",class:_vm.showRelativeScores ? 'rb-col-start-3' : 'rb-col-start-2',staticStyle:{"margin-top":"-.9375rem","margin-bottom":".3125rem","position":"static","z-index":"29"}},[_vm._l((_vm.evaluators),function(evaluator){return _c('li',{staticStyle:{"flex":"1"},style:('text-align: ' + (_vm.useGradesMode ? 'left': 'right'))},[_c('button',{staticClass:"btn btn-sm btn-default",staticStyle:{"padding":"0 4px"},on:{"click":function($event){return _vm.copyRubricResults(evaluator.resultId)}}},[_vm._v(_vm._s(_vm.$t('select')))])])}),(_vm.useAbsoluteScores)?_c('li',{staticClass:"rubric-header-date mod-max",staticStyle:{"flex":"1"},attrs:{"aria-hidden":"true"}}):_vm._e()],2):_vm._e(),_vm._l((_vm.getClusterRowsData(_vm.rubric)),function({cluster, maxScore, evaluations}){return [_c('tree-node-title',{attrs:{"rubric":_vm.rubric,"tree-node":cluster,"options":_vm.selectOptions}}),_c('tree-node-weight',{attrs:{"rubric":_vm.rubric,"tree-node":cluster,"options":_vm.selectOptions,"show-scores":_vm.showScores}}),_c('tree-node-rubric-results',{attrs:{"rubric":_vm.rubric,"tree-node":cluster,"rubric-evaluation":_vm.rubricEvaluation,"max-score":maxScore,"options":_vm.selectOptions,"evaluations":evaluations,"show-scores":_vm.showScores}}),_vm._l((_vm.getCategoryRowsData(cluster)),function({category, maxScore, evaluations},index){return [(category.title && _vm.rubric.getAllCriteria(category).length > 0)?[_c('tree-node-title',{attrs:{"rubric":_vm.rubric,"tree-node":category,"options":_vm.selectOptions}}),_c('tree-node-weight',{attrs:{"rubric":_vm.rubric,"tree-node":category,"options":_vm.selectOptions,"show-scores":_vm.showScores}}),_c('tree-node-rubric-results',{attrs:{"rubric":_vm.rubric,"tree-node":category,"rubric-evaluation":_vm.rubricEvaluation,"max-score":maxScore,"options":_vm.selectOptions,"evaluations":evaluations,"show-scores":_vm.showScores}})]:_vm._e(),_vm._l((_vm.getCriteriumRowsData(category)),function({criterium, maxScore, evaluations}){return [_c('tree-node-title',{attrs:{"rubric":_vm.rubric,"tree-node":criterium,"options":_vm.selectOptions}}),_c('tree-node-weight',{attrs:{"rubric":_vm.rubric,"tree-node":criterium,"options":_vm.selectOptions,"show-scores":_vm.showScores}}),_c('tree-node-rubric-results',{attrs:{"rubric":_vm.rubric,"tree-node":criterium,"rubric-evaluation":_vm.rubricEvaluation,"max-score":maxScore,"options":_vm.selectOptions,"evaluations":evaluations,"show-scores":_vm.showScores}})]}),(index < _vm.getCategoryRowsData(cluster).length - 1)?_c('div',{staticClass:"category-sep"}):_vm._e()]}),_c('div',{staticClass:"cluster-sep",class:{ 'mod-hide-last': _vm.useGradesMode }})]}),(_vm.showTotals)?[_c('div',{staticClass:"total-title",class:{'mod-res-col': _vm.showRelativeScores}},[_vm._v(_vm._s(_vm.$t('total'))+" "+_vm._s(_vm.$t('rubric'))+":")]),_c('tree-node-rubric-results',{attrs:{"rubric":_vm.rubric,"tree-node":_vm.rubric,"rubric-evaluation":_vm.rubricEvaluation,"max-score":_vm.rubric.getMaximumScore(),"evaluations":_vm.evaluators,"show-scores":_vm.showScores}})]:_vm._e()],2),(_vm.selectedTreeNode)?_c('tree-node-results-view',{attrs:{"rubric":_vm.rubric,"tree-node":_vm.selectedTreeNode,"evaluations":_vm.getTreeNodeRowData(_vm.selectedTreeNode).evaluations},on:{"close":function($event){_vm.selectedTreeNode = null}}}):_vm._e()],1):_c('div',{staticClass:"alert-rubric-results"},[_vm._v(_vm._s(_vm.$t('no-results-available')))])
}
var RubricResultvue_type_template_id_a2c9a938_scoped_true_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Result/TreeNodeResultsView.vue?vue&type=template&id=b110f6ee&scoped=true
var TreeNodeResultsViewvue_type_template_id_b110f6ee_scoped_true_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:"selected-treenode-container"},[_c('div',{staticClass:"selected-treenode-wrapper"},[_c('button',{staticClass:"btn-info-close",attrs:{"aria-label":_vm.$t('close'),"title":_vm.$t('close')},on:{"click":function($event){return _vm.$emit('close')}}},[_c('i',{staticClass:"fa fa-close",attrs:{"aria-hidden":"true"}})]),_c('div',{staticClass:"selected-treenode-results"},[_c('div',{staticStyle:{"display":"flex","flex-direction":"row-reverse","gap":".46875rem","margin-bottom":".625rem"}},[_c('div',{staticStyle:{"width":"2.1875rem","pointer-events":"all"}},[_c('div',{staticClass:"onoffswitch mod-only-feedback"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.showWithFeedbackOnly),expression:"showWithFeedbackOnly"}],staticClass:"onoffswitch-checkbox",attrs:{"type":"checkbox","id":"onoffswitch-feedback-only"},domProps:{"checked":Array.isArray(_vm.showWithFeedbackOnly)?_vm._i(_vm.showWithFeedbackOnly,null)>-1:(_vm.showWithFeedbackOnly)},on:{"input":function($event){_vm.showWithFeedbackOnly = !_vm.showWithFeedbackOnly},"change":function($event){var $$a=_vm.showWithFeedbackOnly,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.showWithFeedbackOnly=$$a.concat([$$v]))}else{$$i>-1&&(_vm.showWithFeedbackOnly=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.showWithFeedbackOnly=$$c}}}}),_vm._m(0)])]),_c('span',[_vm._v(_vm._s(_vm.$t('only-feedback')))])]),_c('div',{staticClass:"selected-treenode-results-title u-markdown-criterium",domProps:{"innerHTML":_vm._s(_vm.treeNode.toMarkdown())}}),(_vm.rubric.useScores && _vm.rubric.useRelativeWeights)?_c('div',{staticClass:"selected-treenode-results-weight"},[_vm._v(_vm._s(_vm.$t('weight'))+": "+_vm._s(_vm._f("formatNum")(_vm.relWeight))),_c('i',{staticClass:"fa fa-percent",attrs:{"aria-hidden":"true"}}),_c('span',{staticClass:"sr-only"},[_vm._v("%")])]):_vm._e(),(_vm.filteredEvaluations.length)?_c('div',{staticClass:"results-details"},_vm._l((_vm.filteredEvaluations),function({evaluator, score, level, feedback},index){return _c('tree-node-evaluator-results',{key:`${index}-${_vm.treeNode.id}`,attrs:{"rubric":_vm.rubric,"tree-node":_vm.treeNode,"evaluator":evaluator,"score":score,"level":level,"feedback":feedback}})}),1):_c('span',{staticClass:"m-no-results"},[_vm._v(_vm._s(_vm.$t('no-results')))])])])])
}
var TreeNodeResultsViewvue_type_template_id_b110f6ee_scoped_true_staticRenderFns = [function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('label',{staticClass:"onoffswitch-label",attrs:{"for":"onoffswitch-feedback-only"}},[_c('span',{staticClass:"onoffswitch-inner"},[_c('span',{staticClass:"onoffswitch-inner-before"},[_c('span',{staticStyle:{"opacity":"0"}},[_vm._v("Aan")])]),_c('span',{staticClass:"onoffswitch-inner-after"},[_c('span',{staticStyle:{"opacity":"0"}},[_vm._v("Uit")])])]),_c('span',{staticClass:"onoffswitch-switch"})])
}]


;// CONCATENATED MODULE: ./src/Components/Result/TreeNodeResultsView.vue?vue&type=template&id=b110f6ee&scoped=true

;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Result/TreeNodeEvaluatorResults.vue?vue&type=template&id=90182e08&scoped=true
var TreeNodeEvaluatorResultsvue_type_template_id_90182e08_scoped_true_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:"treenode-evaluator-results"},[_c('div',{staticClass:"treenode-evaluator-meta",class:{'mod-btm': !_vm.isCriterium}},[_c('div',{staticClass:"m-flex-1"},[_c('span',{staticClass:"treenode-evaluator-name"},[_vm._v(_vm._s(_vm._f("capitalize")(_vm.evaluator.name)))]),_c('time',{staticClass:"treenode-evaluator-date"},[_vm._v(_vm._s(_vm._f("formatDate")(_vm.evaluator.date,_vm.$t('date-time-at'))))])]),(_vm.useScores)?[(_vm.score !== null)?[_c('span',{staticClass:"treenode-evaluator-score"},[_vm._v(_vm._s(_vm._f("formatNum")(_vm.score))),(_vm.useRelativeWeights)?[_c('i',{staticClass:"fa fa-percent",attrs:{"aria-hidden":"true"}}),_c('span',{staticClass:"sr-only"},[_vm._v("%")])]:_vm._e()],2),(_vm.useRelativeWeights)?_c('span',{staticClass:"treenode-evaluator-rel-score",attrs:{"title":_vm.$t('score-weight')}},[_vm._v(_vm._s(_vm._f("formatNum")(_vm.weightedScore))),(_vm.useRelativeWeights)?[_c('i',{staticClass:"fa fa-percent",attrs:{"aria-hidden":"true"}}),_c('span',{staticClass:"sr-only"},[_vm._v("%")])]:_vm._e()],2):_vm._e()]:_c('span',{staticClass:"m-no-score"},[_vm._v(_vm._s(_vm.$t('no-score')))])]:_vm._e()],2),(_vm.isCriterium)?[(_vm.level)?[_c('div',{staticClass:"treenode-evaluator-level-title"},[_vm._v(" "+_vm._s(_vm.level.title)+" "),(_vm.useScores && _vm.level.useRangeScore)?_c('span',{staticStyle:{"color":"#5a92b5"},attrs:{"title":`${_vm.level.minimumScore} > ${_vm.level.score}`}},[_c('i',{staticClass:"fa fa-info-circle"})]):_vm._e()]),(_vm.treeNodeLevelDescription)?_c('div',{staticClass:"treenode-evaluator-level-description",domProps:{"innerHTML":_vm._s(_vm.toMarkDown(_vm.treeNodeLevelDescription))}}):_vm._e()]:_c('span',{staticClass:"m-no-score"},[_vm._v(_vm._s(_vm.$t('no-level')))])]:_vm._e(),(_vm.feedback)?_c('div',{staticClass:"treenode-evaluator-feedback"},[_c('i',{staticClass:"fa fa-comment",attrs:{"aria-hidden":"true"}}),_c('i',{staticClass:"fa fa-comment-o",attrs:{"aria-hidden":"true"}}),_vm._v(_vm._s(_vm.feedback))]):_vm._e()],2)
}
var TreeNodeEvaluatorResultsvue_type_template_id_90182e08_scoped_true_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Result/TreeNodeEvaluatorResults.vue?vue&type=script&lang=ts
var TreeNodeEvaluatorResultsvue_type_script_lang_ts_a, TreeNodeEvaluatorResultsvue_type_script_lang_ts_b, TreeNodeEvaluatorResultsvue_type_script_lang_ts_c, TreeNodeEvaluatorResultsvue_type_script_lang_ts_d;








function pad(num) {
    return `${num < 10 ? '0' : ''}${num}`;
}
let TreeNodeEvaluatorResults = class TreeNodeEvaluatorResults extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    rubric;
    treeNode;
    evaluator;
    score;
    level;
    feedback;
    get useScores() {
        return this.rubric.useScores;
    }
    get useRelativeWeights() {
        return this.rubric.useRelativeWeights;
    }
    get isCriterium() {
        return this.treeNode instanceof Criterium;
    }
    get treeNodeLevelDescription() {
        if (this.level !== null && this.treeNode instanceof Criterium) {
            if (this.level.criteriumId === this.treeNode.id) {
                return this.level.description;
            }
            return this.rubric.getChoice(this.treeNode, this.level).feedback;
        }
        return '';
    }
    get weightedScore() {
        if (this.score === null) {
            return 0;
        }
        return this.rubric.getRelativeWeight(this.treeNode) * this.score / 100;
    }
    toMarkDown(s) {
        return toMarkdown(s);
    }
};
__decorate([
    Prop({ type: Rubric }),
    __metadata("design:type", typeof (TreeNodeEvaluatorResultsvue_type_script_lang_ts_a = typeof Rubric !== "undefined" && Rubric) === "function" ? TreeNodeEvaluatorResultsvue_type_script_lang_ts_a : Object)
], TreeNodeEvaluatorResults.prototype, "rubric", void 0);
__decorate([
    Prop({ type: [Cluster, Category, Criterium] }),
    __metadata("design:type", Object)
], TreeNodeEvaluatorResults.prototype, "treeNode", void 0);
__decorate([
    Prop({ type: Object }),
    __metadata("design:type", Object)
], TreeNodeEvaluatorResults.prototype, "evaluator", void 0);
__decorate([
    Prop({ type: Number, default: null }),
    __metadata("design:type", Object)
], TreeNodeEvaluatorResults.prototype, "score", void 0);
__decorate([
    Prop({ type: Level }),
    __metadata("design:type", Object)
], TreeNodeEvaluatorResults.prototype, "level", void 0);
__decorate([
    Prop({ type: String, default: '' }),
    __metadata("design:type", String)
], TreeNodeEvaluatorResults.prototype, "feedback", void 0);
TreeNodeEvaluatorResults = __decorate([
    vue_class_component_esm({
        filters: {
            capitalize: function (value) {
                if (!value) {
                    return '';
                }
                value = value.toString();
                return value.charAt(0).toUpperCase() + value.slice(1);
            },
            formatDate: function (s, atStr = '') {
                const date = new Date(s);
                if (isNaN(date.getDate())) { // todo: dates with timezone offsets, e.g. +0200 result in NaN data in Safari. For now, return an empty string.
                    return '';
                }
                return `${pad(date.getDate())}/${pad(date.getMonth() + 1)}/${date.getFullYear().toString().substr(-2)} ${atStr} ${pad(date.getHours())}:${pad(date.getMinutes())}`;
            },
            formatNum: function (v) {
                if (v === null) {
                    return '';
                }
                return v.toLocaleString(undefined, { maximumFractionDigits: 2 });
            }
        }
    })
], TreeNodeEvaluatorResults);
/* harmony default export */ var TreeNodeEvaluatorResultsvue_type_script_lang_ts = (TreeNodeEvaluatorResults);

;// CONCATENATED MODULE: ./src/Components/Result/TreeNodeEvaluatorResults.vue?vue&type=script&lang=ts
 /* harmony default export */ var Result_TreeNodeEvaluatorResultsvue_type_script_lang_ts = (TreeNodeEvaluatorResultsvue_type_script_lang_ts); 
;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-66.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-66.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-66.use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-66.use[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Result/TreeNodeEvaluatorResults.vue?vue&type=style&index=0&id=90182e08&prod&lang=scss
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Components/Result/TreeNodeEvaluatorResults.vue?vue&type=style&index=0&id=90182e08&prod&lang=scss

;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-56.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-56.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-56.use[2]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Result/TreeNodeEvaluatorResults.vue?vue&type=style&index=1&id=90182e08&prod&scoped=true&lang=css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Components/Result/TreeNodeEvaluatorResults.vue?vue&type=style&index=1&id=90182e08&prod&scoped=true&lang=css

// EXTERNAL MODULE: ../../../../../../../../node_modules/@intlify/vue-i18n-loader/lib/index.js!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Result/TreeNodeEvaluatorResults.vue?vue&type=custom&index=0&blockType=i18n
var TreeNodeEvaluatorResultsvue_type_custom_index_0_blockType_i18n = __webpack_require__(243);
var TreeNodeEvaluatorResultsvue_type_custom_index_0_blockType_i18n_default = /*#__PURE__*/__webpack_require__.n(TreeNodeEvaluatorResultsvue_type_custom_index_0_blockType_i18n);
;// CONCATENATED MODULE: ./src/Components/Result/TreeNodeEvaluatorResults.vue?vue&type=custom&index=0&blockType=i18n
 /* harmony default export */ var Result_TreeNodeEvaluatorResultsvue_type_custom_index_0_blockType_i18n = ((TreeNodeEvaluatorResultsvue_type_custom_index_0_blockType_i18n_default())); 
;// CONCATENATED MODULE: ./src/Components/Result/TreeNodeEvaluatorResults.vue



;



/* normalize component */

var TreeNodeEvaluatorResults_component = normalizeComponent(
  Result_TreeNodeEvaluatorResultsvue_type_script_lang_ts,
  TreeNodeEvaluatorResultsvue_type_template_id_90182e08_scoped_true_render,
  TreeNodeEvaluatorResultsvue_type_template_id_90182e08_scoped_true_staticRenderFns,
  false,
  null,
  "90182e08",
  null
  
)

/* custom blocks */
;
if (typeof Result_TreeNodeEvaluatorResultsvue_type_custom_index_0_blockType_i18n === 'function') Result_TreeNodeEvaluatorResultsvue_type_custom_index_0_blockType_i18n(TreeNodeEvaluatorResults_component)

/* harmony default export */ var Result_TreeNodeEvaluatorResults = (TreeNodeEvaluatorResults_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Result/TreeNodeResultsView.vue?vue&type=script&lang=ts
var TreeNodeResultsViewvue_type_script_lang_ts_a, TreeNodeResultsViewvue_type_script_lang_ts_b, TreeNodeResultsViewvue_type_script_lang_ts_c;







function TreeNodeResultsViewvue_type_script_lang_ts_pad(num) {
    return `${num < 10 ? '0' : ''}${num}`;
}
let TreeNodeResultsView = class TreeNodeResultsView extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    showWithFeedbackOnly = false;
    rubric;
    treeNode;
    evaluations;
    get filteredEvaluations() {
        if (!this.showWithFeedbackOnly) {
            return this.evaluations;
        }
        return this.evaluations.filter(ev => !!ev.feedback);
    }
    get isCriterium() {
        return this.treeNode instanceof Criterium;
    }
    get relWeight() {
        return this.rubric.getRelativeWeight(this.treeNode);
    }
};
__decorate([
    Prop({ type: Rubric }),
    __metadata("design:type", typeof (TreeNodeResultsViewvue_type_script_lang_ts_a = typeof Rubric !== "undefined" && Rubric) === "function" ? TreeNodeResultsViewvue_type_script_lang_ts_a : Object)
], TreeNodeResultsView.prototype, "rubric", void 0);
__decorate([
    Prop({ type: [Cluster, Category, Criterium] }),
    __metadata("design:type", Object)
], TreeNodeResultsView.prototype, "treeNode", void 0);
__decorate([
    Prop({ type: Array }),
    __metadata("design:type", Array)
], TreeNodeResultsView.prototype, "evaluations", void 0);
TreeNodeResultsView = __decorate([
    vue_class_component_esm({
        components: { TreeNodeEvaluatorResults: Result_TreeNodeEvaluatorResults },
        filters: {
            formatNum: function (v) {
                if (v === null) {
                    return '0';
                }
                return v.toLocaleString(undefined, { maximumFractionDigits: 2 });
            }
        }
    })
], TreeNodeResultsView);
/* harmony default export */ var TreeNodeResultsViewvue_type_script_lang_ts = (TreeNodeResultsView);

;// CONCATENATED MODULE: ./src/Components/Result/TreeNodeResultsView.vue?vue&type=script&lang=ts
 /* harmony default export */ var Result_TreeNodeResultsViewvue_type_script_lang_ts = (TreeNodeResultsViewvue_type_script_lang_ts); 
;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-66.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-66.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-66.use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-66.use[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Result/TreeNodeResultsView.vue?vue&type=style&index=0&id=b110f6ee&prod&lang=scss
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Components/Result/TreeNodeResultsView.vue?vue&type=style&index=0&id=b110f6ee&prod&lang=scss

;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-56.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-56.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-56.use[2]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Result/TreeNodeResultsView.vue?vue&type=style&index=1&id=b110f6ee&prod&scoped=true&lang=css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Components/Result/TreeNodeResultsView.vue?vue&type=style&index=1&id=b110f6ee&prod&scoped=true&lang=css

// EXTERNAL MODULE: ../../../../../../../../node_modules/@intlify/vue-i18n-loader/lib/index.js!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Result/TreeNodeResultsView.vue?vue&type=custom&index=0&blockType=i18n
var TreeNodeResultsViewvue_type_custom_index_0_blockType_i18n = __webpack_require__(501);
var TreeNodeResultsViewvue_type_custom_index_0_blockType_i18n_default = /*#__PURE__*/__webpack_require__.n(TreeNodeResultsViewvue_type_custom_index_0_blockType_i18n);
;// CONCATENATED MODULE: ./src/Components/Result/TreeNodeResultsView.vue?vue&type=custom&index=0&blockType=i18n
 /* harmony default export */ var Result_TreeNodeResultsViewvue_type_custom_index_0_blockType_i18n = ((TreeNodeResultsViewvue_type_custom_index_0_blockType_i18n_default())); 
;// CONCATENATED MODULE: ./src/Components/Result/TreeNodeResultsView.vue



;



/* normalize component */

var TreeNodeResultsView_component = normalizeComponent(
  Result_TreeNodeResultsViewvue_type_script_lang_ts,
  TreeNodeResultsViewvue_type_template_id_b110f6ee_scoped_true_render,
  TreeNodeResultsViewvue_type_template_id_b110f6ee_scoped_true_staticRenderFns,
  false,
  null,
  "b110f6ee",
  null
  
)

/* custom blocks */
;
if (typeof Result_TreeNodeResultsViewvue_type_custom_index_0_blockType_i18n === 'function') Result_TreeNodeResultsViewvue_type_custom_index_0_blockType_i18n(TreeNodeResultsView_component)

/* harmony default export */ var Result_TreeNodeResultsView = (TreeNodeResultsView_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Result/TreeNodeRubricResults.vue?vue&type=template&id=c8641a78&scoped=true
var TreeNodeRubricResultsvue_type_template_id_c8641a78_scoped_true_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:"treenode-rubric-results",class:{'rb-col-start-3': _vm.useScores && _vm.rubric.useRelativeWeights && _vm.showScores, 'is-selected': _vm.options.selectedTreeNode === _vm.treeNode, 'is-highlighted': _vm.options.highlightedTreeNode === _vm.treeNode},on:{"click":function($event){$event.stopPropagation();_vm.options.selectedTreeNode = _vm.treeNode},"mouseover":function($event){_vm.options.highlightedTreeNode = _vm.treeNode},"mouseout":function($event){_vm.options.highlightedTreeNode = null}}},[_vm._l((_vm.evaluations),function(evaluation){return _c('tree-node-evaluation-display',{attrs:{"rubric":_vm.rubric,"tree-node":_vm.treeNode,"show-scores":_vm.showScores,"score":_vm.getScore(evaluation),"feedback":evaluation.feedback,"title-overlay":_vm.getEvaluationTitleOverlay(evaluation),"level":evaluation.level || null}})}),(_vm.useAbsoluteScores)?_c('tree-node-evaluation-display',{class:{'is-selected': _vm.isCriterium && _vm.options.selectedTreeNode === _vm.treeNode},attrs:{"show-max":"","rubric":_vm.rubric,"tree-node":_vm.treeNode,"score":_vm.maxScore}}):_vm._e()],2)
}
var TreeNodeRubricResultsvue_type_template_id_c8641a78_scoped_true_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Result/TreeNodeEvaluationDisplay.vue?vue&type=template&id=25b9c965&scoped=true
var TreeNodeEvaluationDisplayvue_type_template_id_25b9c965_scoped_true_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return (_vm.showMax)?_c('div',{staticClass:"treenode-evaluation",class:['mod-' + _vm.nodeType + '-max']},[_c('score-display',{attrs:{"score":_vm.score}})],1):_c('div',{staticClass:"treenode-evaluation",class:['mod-' + _vm.nodeType, {'mod-incomplete': _vm.isIncomplete, 'mod-grades': _vm.isGradeMode, 'mod-feedback': !!_vm.feedback}]},[(_vm.feedback)?_c('i',{staticClass:"treenode-feedback-icon fa fa-info",class:{'mod-cluster': _vm.isCluster && !_vm.isGradeMode && !_vm.isIncomplete},attrs:{"title":_vm.titleOverlay}}):_vm._e(),(_vm.isNA)?_c('span',{staticClass:"m-not-scored"},[_vm._v(" ")]):_vm._e(),(_vm.showScore)?_c('score-display',{attrs:{"score":_vm.score,"percent":_vm.rubric.useRelativeWeights}}):(_vm.isCriterium)?[_vm._v(_vm._s(_vm.levelTitle))]:_vm._e()],2)
}
var TreeNodeEvaluationDisplayvue_type_template_id_25b9c965_scoped_true_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Result/TreeNodeEvaluationDisplay.vue?vue&type=script&lang=ts
var TreeNodeEvaluationDisplayvue_type_script_lang_ts_a, TreeNodeEvaluationDisplayvue_type_script_lang_ts_b, TreeNodeEvaluationDisplayvue_type_script_lang_ts_c, TreeNodeEvaluationDisplayvue_type_script_lang_ts_d;








let TreeNodeEvaluationDisplay = class TreeNodeEvaluationDisplay extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    rubric;
    treeNode;
    score;
    showScores;
    feedback;
    titleOverlay;
    level;
    showMax;
    get nodeType() {
        return this.treeNode.getType();
    }
    get isRubric() {
        return this.nodeType === 'rubric';
    }
    get isCluster() {
        return this.nodeType === 'cluster';
    }
    get isCategory() {
        return this.nodeType === 'category';
    }
    get isCriterium() {
        return this.nodeType === 'criterium';
    }
    get useScores() {
        return this.rubric.useScores;
    }
    get useAbsoluteScores() {
        return this.rubric.useScores && !this.rubric.useRelativeWeights;
    }
    get useGrades() {
        return !this.rubric.useScores;
    }
    get isGradeMode() {
        return this.useGrades || (this.useScores && this.rubric.useRelativeWeights && !this.showScores);
    }
    get showScore() {
        return this.useScores && (!this.rubric.useRelativeWeights || this.showScores);
    }
    get isNA() {
        switch (this.nodeType) {
            case 'cluster':
            case 'category':
                return this.showScore && this.score === null;
            case 'criterium':
                return this.useScores ? this.score === null : this.level === null;
            case 'rubric':
                return this.score === null;
        }
    }
    get isIncomplete() {
        return this.score === null && !this.isGradeMode;
    }
    get levelTitle() {
        return this.level?.title || '';
    }
};
__decorate([
    Prop({ type: Rubric }),
    __metadata("design:type", typeof (TreeNodeEvaluationDisplayvue_type_script_lang_ts_a = typeof Rubric !== "undefined" && Rubric) === "function" ? TreeNodeEvaluationDisplayvue_type_script_lang_ts_a : Object)
], TreeNodeEvaluationDisplay.prototype, "rubric", void 0);
__decorate([
    Prop({ type: [Rubric, Cluster, Category, Criterium] }),
    __metadata("design:type", Object)
], TreeNodeEvaluationDisplay.prototype, "treeNode", void 0);
__decorate([
    Prop({ type: Number, default: null }),
    __metadata("design:type", Object)
], TreeNodeEvaluationDisplay.prototype, "score", void 0);
__decorate([
    Prop({ type: Boolean, default: true }),
    __metadata("design:type", Boolean)
], TreeNodeEvaluationDisplay.prototype, "showScores", void 0);
__decorate([
    Prop({ type: String, default: '' }),
    __metadata("design:type", String)
], TreeNodeEvaluationDisplay.prototype, "feedback", void 0);
__decorate([
    Prop({ type: String, default: '' }),
    __metadata("design:type", String)
], TreeNodeEvaluationDisplay.prototype, "titleOverlay", void 0);
__decorate([
    Prop({ type: Level, default: null }),
    __metadata("design:type", Object)
], TreeNodeEvaluationDisplay.prototype, "level", void 0);
__decorate([
    Prop({ type: Boolean, default: false }),
    __metadata("design:type", Boolean)
], TreeNodeEvaluationDisplay.prototype, "showMax", void 0);
TreeNodeEvaluationDisplay = __decorate([
    vue_class_component_esm({
        components: { ScoreDisplay: Components_ScoreDisplay }
    })
], TreeNodeEvaluationDisplay);
/* harmony default export */ var TreeNodeEvaluationDisplayvue_type_script_lang_ts = (TreeNodeEvaluationDisplay);

;// CONCATENATED MODULE: ./src/Components/Result/TreeNodeEvaluationDisplay.vue?vue&type=script&lang=ts
 /* harmony default export */ var Result_TreeNodeEvaluationDisplayvue_type_script_lang_ts = (TreeNodeEvaluationDisplayvue_type_script_lang_ts); 
;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-66.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-66.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-66.use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-66.use[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Result/TreeNodeEvaluationDisplay.vue?vue&type=style&index=0&id=25b9c965&prod&lang=scss&scoped=true
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Components/Result/TreeNodeEvaluationDisplay.vue?vue&type=style&index=0&id=25b9c965&prod&lang=scss&scoped=true

;// CONCATENATED MODULE: ./src/Components/Result/TreeNodeEvaluationDisplay.vue



;


/* normalize component */

var TreeNodeEvaluationDisplay_component = normalizeComponent(
  Result_TreeNodeEvaluationDisplayvue_type_script_lang_ts,
  TreeNodeEvaluationDisplayvue_type_template_id_25b9c965_scoped_true_render,
  TreeNodeEvaluationDisplayvue_type_template_id_25b9c965_scoped_true_staticRenderFns,
  false,
  null,
  "25b9c965",
  null
  
)

/* harmony default export */ var Result_TreeNodeEvaluationDisplay = (TreeNodeEvaluationDisplay_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Result/TreeNodeRubricResults.vue?vue&type=script&lang=ts
var TreeNodeRubricResultsvue_type_script_lang_ts_a, TreeNodeRubricResultsvue_type_script_lang_ts_b, TreeNodeRubricResultsvue_type_script_lang_ts_c, TreeNodeRubricResultsvue_type_script_lang_ts_d;








let TreeNodeRubricResults = class TreeNodeRubricResults extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    rubric;
    treeNode;
    maxScore;
    options;
    evaluations;
    rubricEvaluation;
    showScores;
    get nodeType() {
        return this.treeNode.getType();
    }
    get isCriterium() {
        return this.nodeType === 'criterium';
    }
    get useScores() {
        return this.rubric.useScores;
    }
    get useAbsoluteScores() {
        return this.rubric.useScores && !this.rubric.useRelativeWeights;
    }
    get useGrades() {
        return !this.rubric.useScores;
    }
    getEvaluationTitleOverlay(evaluation) {
        const extraFeedback = evaluation.feedback ? `${this.$t('extra-feedback')}: ${evaluation.feedback}` : '';
        if (this.nodeType === 'criterium') {
            return this.rubric.useScores ? extraFeedback : `${evaluation.level?.title || ''}${extraFeedback && ('\n' + extraFeedback)}`;
        }
        else {
            return extraFeedback;
        }
    }
    getScore(evaluation) {
        switch (this.nodeType) {
            case 'cluster':
                return this.rubricEvaluation.getClusterScore(this.treeNode, evaluation);
            case 'category':
                return this.rubricEvaluation.getCategoryScore(this.treeNode, evaluation);
            case 'criterium':
                return evaluation.score;
            case 'rubric':
                return this.rubricEvaluation.getRubricScore(evaluation);
            default:
                return null;
        }
    }
};
__decorate([
    Prop({ type: Rubric }),
    __metadata("design:type", typeof (TreeNodeRubricResultsvue_type_script_lang_ts_a = typeof Rubric !== "undefined" && Rubric) === "function" ? TreeNodeRubricResultsvue_type_script_lang_ts_a : Object)
], TreeNodeRubricResults.prototype, "rubric", void 0);
__decorate([
    Prop({ type: [Rubric, Cluster, Category, Criterium] }),
    __metadata("design:type", Object)
], TreeNodeRubricResults.prototype, "treeNode", void 0);
__decorate([
    Prop({ type: Number, default: null }),
    __metadata("design:type", Object)
], TreeNodeRubricResults.prototype, "maxScore", void 0);
__decorate([
    Prop({ type: Object, default: () => ({}) }),
    __metadata("design:type", Object)
], TreeNodeRubricResults.prototype, "options", void 0);
__decorate([
    Prop({ type: Array, default: () => [] }),
    __metadata("design:type", Array)
], TreeNodeRubricResults.prototype, "evaluations", void 0);
__decorate([
    Prop({ type: RubricEvaluation, required: true }),
    __metadata("design:type", typeof (TreeNodeRubricResultsvue_type_script_lang_ts_d = typeof RubricEvaluation !== "undefined" && RubricEvaluation) === "function" ? TreeNodeRubricResultsvue_type_script_lang_ts_d : Object)
], TreeNodeRubricResults.prototype, "rubricEvaluation", void 0);
__decorate([
    Prop({ type: Boolean, default: true }),
    __metadata("design:type", Boolean)
], TreeNodeRubricResults.prototype, "showScores", void 0);
TreeNodeRubricResults = __decorate([
    vue_class_component_esm({
        components: { TreeNodeEvaluationDisplay: Result_TreeNodeEvaluationDisplay }
    })
], TreeNodeRubricResults);
/* harmony default export */ var TreeNodeRubricResultsvue_type_script_lang_ts = (TreeNodeRubricResults);

;// CONCATENATED MODULE: ./src/Components/Result/TreeNodeRubricResults.vue?vue&type=script&lang=ts
 /* harmony default export */ var Result_TreeNodeRubricResultsvue_type_script_lang_ts = (TreeNodeRubricResultsvue_type_script_lang_ts); 
;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-66.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-66.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-66.use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-66.use[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Result/TreeNodeRubricResults.vue?vue&type=style&index=0&id=c8641a78&prod&lang=scss&scoped=true
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Components/Result/TreeNodeRubricResults.vue?vue&type=style&index=0&id=c8641a78&prod&lang=scss&scoped=true

;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-66.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-66.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-66.use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-66.use[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Result/TreeNodeRubricResults.vue?vue&type=style&index=1&id=c8641a78&prod&lang=scss
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Components/Result/TreeNodeRubricResults.vue?vue&type=style&index=1&id=c8641a78&prod&lang=scss

;// CONCATENATED MODULE: ./src/Components/Result/TreeNodeRubricResults.vue



;



/* normalize component */

var TreeNodeRubricResults_component = normalizeComponent(
  Result_TreeNodeRubricResultsvue_type_script_lang_ts,
  TreeNodeRubricResultsvue_type_template_id_c8641a78_scoped_true_render,
  TreeNodeRubricResultsvue_type_template_id_c8641a78_scoped_true_staticRenderFns,
  false,
  null,
  "c8641a78",
  null
  
)

/* harmony default export */ var Result_TreeNodeRubricResults = (TreeNodeRubricResults_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Result/TreeNodeWeight.vue?vue&type=template&id=d02fc8cc&scoped=true
var TreeNodeWeightvue_type_template_id_d02fc8cc_scoped_true_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return (_vm.useScores && _vm.rubric.useRelativeWeights && _vm.showScores)?_c('div',{staticClass:"treenode-weight",class:{'is-selected': _vm.options.selectedTreeNode === _vm.treeNode, 'is-highlighted': _vm.options.highlightedTreeNode === _vm.treeNode},on:{"click":function($event){$event.stopPropagation();_vm.options.selectedTreeNode = _vm.treeNode},"mouseover":function($event){_vm.options.highlightedTreeNode = _vm.treeNode},"mouseout":function($event){_vm.options.highlightedTreeNode = null}}},[_c('span',[_vm._v(_vm._s(_vm._f("formatNum")(_vm.rubric.getRelativeWeight(_vm.treeNode))))]),_c('span',{staticClass:"sr-only"},[_vm._v("%")]),_c('i',{staticClass:"fa fa-percent",attrs:{"aria-hidden":"true"}})]):_vm._e()
}
var TreeNodeWeightvue_type_template_id_d02fc8cc_scoped_true_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Result/TreeNodeWeight.vue?vue&type=script&lang=ts
var TreeNodeWeightvue_type_script_lang_ts_a, TreeNodeWeightvue_type_script_lang_ts_b, TreeNodeWeightvue_type_script_lang_ts_c;






let TreeNodeWeightvue_type_script_lang_ts_TreeNodeRubricResults = class TreeNodeRubricResults extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    rubric;
    treeNode;
    options;
    showScores;
    get useScores() {
        return this.rubric.useScores;
    }
};
__decorate([
    Prop({ type: Rubric }),
    __metadata("design:type", typeof (TreeNodeWeightvue_type_script_lang_ts_a = typeof Rubric !== "undefined" && Rubric) === "function" ? TreeNodeWeightvue_type_script_lang_ts_a : Object)
], TreeNodeWeightvue_type_script_lang_ts_TreeNodeRubricResults.prototype, "rubric", void 0);
__decorate([
    Prop({ type: [Cluster, Category, Criterium] }),
    __metadata("design:type", Object)
], TreeNodeWeightvue_type_script_lang_ts_TreeNodeRubricResults.prototype, "treeNode", void 0);
__decorate([
    Prop({ type: Object, default: () => ({}) }),
    __metadata("design:type", Object)
], TreeNodeWeightvue_type_script_lang_ts_TreeNodeRubricResults.prototype, "options", void 0);
__decorate([
    Prop({ type: Boolean, default: true }),
    __metadata("design:type", Boolean)
], TreeNodeWeightvue_type_script_lang_ts_TreeNodeRubricResults.prototype, "showScores", void 0);
TreeNodeWeightvue_type_script_lang_ts_TreeNodeRubricResults = __decorate([
    vue_class_component_esm({
        filters: {
            formatNum: function (v) {
                if (v === null) {
                    return '';
                }
                return v.toLocaleString(undefined, { maximumFractionDigits: 2 });
            }
        }
    })
], TreeNodeWeightvue_type_script_lang_ts_TreeNodeRubricResults);
/* harmony default export */ var TreeNodeWeightvue_type_script_lang_ts = (TreeNodeWeightvue_type_script_lang_ts_TreeNodeRubricResults);

;// CONCATENATED MODULE: ./src/Components/Result/TreeNodeWeight.vue?vue&type=script&lang=ts
 /* harmony default export */ var Result_TreeNodeWeightvue_type_script_lang_ts = (TreeNodeWeightvue_type_script_lang_ts); 
;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-66.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-66.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-66.use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-66.use[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Result/TreeNodeWeight.vue?vue&type=style&index=0&id=d02fc8cc&prod&lang=scss&scoped=true
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Components/Result/TreeNodeWeight.vue?vue&type=style&index=0&id=d02fc8cc&prod&lang=scss&scoped=true

;// CONCATENATED MODULE: ./src/Components/Result/TreeNodeWeight.vue



;


/* normalize component */

var TreeNodeWeight_component = normalizeComponent(
  Result_TreeNodeWeightvue_type_script_lang_ts,
  TreeNodeWeightvue_type_template_id_d02fc8cc_scoped_true_render,
  TreeNodeWeightvue_type_template_id_d02fc8cc_scoped_true_staticRenderFns,
  false,
  null,
  "d02fc8cc",
  null
  
)

/* harmony default export */ var TreeNodeWeight = (TreeNodeWeight_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Result/TreeNodeTitle.vue?vue&type=template&id=7db1e11b&scoped=true
var TreeNodeTitlevue_type_template_id_7db1e11b_scoped_true_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:"treenode-title-header-wrap",class:{'rb-col-start-1': _vm.isCluster, 'mod-category': _vm.isCategory, 'has-category': (_vm.isCategory && !!_vm.treeNode.title) || (_vm.isCriterium && !!_vm.treeNode.parent.title), 'is-selected': _vm.options.selectedTreeNode === _vm.treeNode, 'is-highlighted': _vm.options.highlightedTreeNode === _vm.treeNode},style:(_vm.color),on:{"click":function($event){$event.stopPropagation();_vm.options.selectedTreeNode = _vm.treeNode},"mouseover":function($event){_vm.options.highlightedTreeNode = _vm.treeNode},"mouseout":function($event){_vm.options.highlightedTreeNode = null}}},[_c('div',{staticClass:"treenode-title-header"},[(_vm.nodeType !== 'cluster')?_c('div',{staticClass:"treenode-title-header-pre",class:[`mod-${_vm.nodeType}`, {'mod-no-color': _vm.isCategory && !_vm.treeNode.color}]}):_vm._e(),(_vm.isCriterium)?_c('h3',{staticClass:"treenode-title criterium-title u-markdown-criterium",class:{'mod-no-category': !_vm.hasCategoryTitle},domProps:{"innerHTML":_vm._s(_vm.treeNode.toMarkdown())}}):_c(_vm.headerTag,{tag:"component",staticClass:"treenode-title",class:[`${_vm.nodeType}-title`]},[_vm._v(_vm._s(_vm.treeNode.title))])],1)])
}
var TreeNodeTitlevue_type_template_id_7db1e11b_scoped_true_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Result/TreeNodeTitle.vue?vue&type=script&lang=ts
var TreeNodeTitlevue_type_script_lang_ts_a, TreeNodeTitlevue_type_script_lang_ts_b, TreeNodeTitlevue_type_script_lang_ts_c;






let TreeNodeTitle = class TreeNodeTitle extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    rubric;
    treeNode;
    options;
    get nodeType() {
        return this.treeNode.getType();
    }
    get isCluster() {
        return this.nodeType === 'cluster';
    }
    get isCategory() {
        return this.nodeType === 'category';
    }
    get isCriterium() {
        return this.nodeType === 'criterium';
    }
    get hasCategoryTitle() {
        if (this.isCriterium) {
            const parentNode = this.treeNode.parent;
            if (parentNode instanceof Category) {
                return !!parentNode.title;
            }
        }
        return false;
    }
    get color() {
        let category;
        if (this.nodeType === 'category') {
            category = this.treeNode;
        }
        else if (this.nodeType === 'criterium') {
            category = this.treeNode.parent;
        }
        if (!(category instanceof Category)) {
            return '';
        }
        return `--category-color: ${category.title && category.color ? category.color : '#999'}`;
    }
    get headerTag() {
        switch (this.nodeType) {
            case 'cluster':
                return 'h1';
            case 'category':
                return 'h2';
            case 'criterium':
                return 'h3;';
            default:
                return '';
        }
    }
};
__decorate([
    Prop({ type: Rubric }),
    __metadata("design:type", typeof (TreeNodeTitlevue_type_script_lang_ts_a = typeof Rubric !== "undefined" && Rubric) === "function" ? TreeNodeTitlevue_type_script_lang_ts_a : Object)
], TreeNodeTitle.prototype, "rubric", void 0);
__decorate([
    Prop({ type: [Cluster, Category, Criterium] }),
    __metadata("design:type", Object)
], TreeNodeTitle.prototype, "treeNode", void 0);
__decorate([
    Prop({ type: Object, default: () => ({}) }),
    __metadata("design:type", Object)
], TreeNodeTitle.prototype, "options", void 0);
TreeNodeTitle = __decorate([
    vue_class_component_esm({})
], TreeNodeTitle);
/* harmony default export */ var TreeNodeTitlevue_type_script_lang_ts = (TreeNodeTitle);

;// CONCATENATED MODULE: ./src/Components/Result/TreeNodeTitle.vue?vue&type=script&lang=ts
 /* harmony default export */ var Result_TreeNodeTitlevue_type_script_lang_ts = (TreeNodeTitlevue_type_script_lang_ts); 
;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-66.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-66.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-66.use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-66.use[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Result/TreeNodeTitle.vue?vue&type=style&index=0&id=7db1e11b&prod&lang=scss&scoped=true
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Components/Result/TreeNodeTitle.vue?vue&type=style&index=0&id=7db1e11b&prod&lang=scss&scoped=true

;// CONCATENATED MODULE: ./src/Components/Result/TreeNodeTitle.vue



;


/* normalize component */

var TreeNodeTitle_component = normalizeComponent(
  Result_TreeNodeTitlevue_type_script_lang_ts,
  TreeNodeTitlevue_type_template_id_7db1e11b_scoped_true_render,
  TreeNodeTitlevue_type_template_id_7db1e11b_scoped_true_staticRenderFns,
  false,
  null,
  "7db1e11b",
  null
  
)

/* harmony default export */ var Result_TreeNodeTitle = (TreeNodeTitle_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricResult.vue?vue&type=script&lang=ts
var RubricResultvue_type_script_lang_ts_a, RubricResultvue_type_script_lang_ts_b;











function RubricResultvue_type_script_lang_ts_pad(num) {
    return `${num < 10 ? '0' : ''}${num}`;
}
let RubricResult = class RubricResult extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    showScores = false;
    createFromExisting = false;
    selectOptions = {
        selectedTreeNode: null,
        highlightedTreeNode: null
    };
    rubric;
    rubricEvaluation;
    options;
    rubricEntryUrl;
    canCreateFromExistingRubric;
    copyRubricResults(resultId) {
        if (this.rubricEntryUrl) {
            window.open(this.rubricEntryUrl + '&result_id=' + resultId, '_self');
        }
    }
    get selectedTreeNode() {
        return this.selectOptions.selectedTreeNode;
    }
    set selectedTreeNode(treeNode) {
        this.selectOptions.selectedTreeNode = treeNode;
    }
    get highlightedTreeNode() {
        return this.selectOptions.highlightedTreeNode;
    }
    set highlightedTreeNode(treeNode) {
        this.selectOptions.highlightedTreeNode = treeNode;
    }
    get useScores() {
        return this.rubric.useScores;
    }
    get useGrades() {
        return !this.rubric.useScores;
    }
    get useAbsoluteScores() {
        return this.rubric.useScores && !this.rubric.useRelativeWeights;
    }
    get useRelativeScores() {
        return this.rubric.useScores && this.rubric.useRelativeWeights;
    }
    get showRelativeScores() {
        return this.useRelativeScores && this.showScores;
    }
    get showRubricHeader() {
        return this.rubric.useScores || (!this.rubric.useScores && this.evaluators.length);
    }
    get showTotals() {
        return this.rubric.useScores && (!this.rubric.useRelativeWeights || this.showScores);
    }
    get useGradesMode() {
        return this.useGrades || (this.useScores && this.rubric.useRelativeWeights && !this.showScores);
    }
    get evaluators() {
        return this.rubricEvaluation.getEvaluators();
    }
    getTreeNodeRowData(treeNode) {
        if (treeNode instanceof Criterium) {
            return this.getCriteriumRowData(treeNode);
        }
        if (treeNode instanceof Category) {
            return this.getCategoryRowData(treeNode);
        }
        if (treeNode instanceof Cluster) {
            return this.getClusterRowData(treeNode);
        }
        return { maxScore: 0, evaluations: [] };
    }
    getClusterRowsData(rubric) {
        return rubric.clusters
            .filter(cluster => cluster.hasChildren())
            .map(this.getClusterRowData);
    }
    getClusterRowData(cluster) {
        return {
            cluster,
            maxScore: this.rubric.getClusterMaxScore(cluster),
            evaluations: this.rubricEvaluation.getEvaluations(cluster)
        };
    }
    getCategoryRowsData(cluster) {
        return cluster.categories
            .filter(category => category.hasChildren())
            .map(this.getCategoryRowData);
    }
    getCategoryRowData(category) {
        return {
            category,
            maxScore: this.rubric.getCategoryMaxScore(category),
            evaluations: this.rubricEvaluation.getEvaluations(category)
        };
    }
    getCriteriumRowsData(category) {
        return category.criteria.map(criterium => this.getCriteriumRowData(criterium));
    }
    getCriteriumRowData(criterium) {
        return {
            criterium,
            maxScore: this.rubric.getCriteriumMaxScore(criterium),
            evaluations: this.rubricEvaluation.getEvaluations(criterium)
        };
    }
};
__decorate([
    Prop({ type: Rubric }),
    __metadata("design:type", typeof (RubricResultvue_type_script_lang_ts_a = typeof Rubric !== "undefined" && Rubric) === "function" ? RubricResultvue_type_script_lang_ts_a : Object)
], RubricResult.prototype, "rubric", void 0);
__decorate([
    Prop({ type: RubricEvaluation, required: true }),
    __metadata("design:type", typeof (RubricResultvue_type_script_lang_ts_b = typeof RubricEvaluation !== "undefined" && RubricEvaluation) === "function" ? RubricResultvue_type_script_lang_ts_b : Object)
], RubricResult.prototype, "rubricEvaluation", void 0);
__decorate([
    Prop({ type: Object, default: () => ({}) }),
    __metadata("design:type", Object)
], RubricResult.prototype, "options", void 0);
__decorate([
    Prop({ type: String, default: '' }),
    __metadata("design:type", String)
], RubricResult.prototype, "rubricEntryUrl", void 0);
__decorate([
    Prop({ type: Boolean, default: false }),
    __metadata("design:type", Boolean)
], RubricResult.prototype, "canCreateFromExistingRubric", void 0);
RubricResult = __decorate([
    vue_class_component_esm({
        components: { TreeNodeResultsView: Result_TreeNodeResultsView, TreeNodeRubricResults: Result_TreeNodeRubricResults, TreeNodeWeight: TreeNodeWeight, TreeNodeTitle: Result_TreeNodeTitle },
        filters: {
            capitalize: function (value) {
                if (!value) {
                    return '';
                }
                value = value.toString();
                return value.charAt(0).toUpperCase() + value.slice(1);
            },
            formatDate: function (s) {
                const date = new Date(s);
                if (isNaN(date.getDate())) { // todo: dates with timezone offsets, e.g. +0200 result in NaN data in Safari. For now, return an empty string.
                    return '';
                }
                return `${RubricResultvue_type_script_lang_ts_pad(date.getDate())}/${RubricResultvue_type_script_lang_ts_pad(date.getMonth() + 1)}/${date.getFullYear().toString().substr(-2)} ${RubricResultvue_type_script_lang_ts_pad(date.getHours())}:${RubricResultvue_type_script_lang_ts_pad(date.getMinutes())}`;
            }
        }
    })
], RubricResult);
/* harmony default export */ var RubricResultvue_type_script_lang_ts = (RubricResult);

;// CONCATENATED MODULE: ./src/Views/RubricResult.vue?vue&type=script&lang=ts
 /* harmony default export */ var Views_RubricResultvue_type_script_lang_ts = (RubricResultvue_type_script_lang_ts); 
;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-66.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-66.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-66.use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-66.use[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricResult.vue?vue&type=style&index=0&id=a2c9a938&prod&lang=scss
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Views/RubricResult.vue?vue&type=style&index=0&id=a2c9a938&prod&lang=scss

;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-66.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-66.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-66.use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-66.use[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricResult.vue?vue&type=style&index=1&id=a2c9a938&prod&lang=scss&scoped=true
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Views/RubricResult.vue?vue&type=style&index=1&id=a2c9a938&prod&lang=scss&scoped=true

// EXTERNAL MODULE: ../../../../../../../../node_modules/@intlify/vue-i18n-loader/lib/index.js!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricResult.vue?vue&type=custom&index=0&blockType=i18n
var RubricResultvue_type_custom_index_0_blockType_i18n = __webpack_require__(573);
var RubricResultvue_type_custom_index_0_blockType_i18n_default = /*#__PURE__*/__webpack_require__.n(RubricResultvue_type_custom_index_0_blockType_i18n);
;// CONCATENATED MODULE: ./src/Views/RubricResult.vue?vue&type=custom&index=0&blockType=i18n
 /* harmony default export */ var Views_RubricResultvue_type_custom_index_0_blockType_i18n = ((RubricResultvue_type_custom_index_0_blockType_i18n_default())); 
;// CONCATENATED MODULE: ./src/Views/RubricResult.vue



;



/* normalize component */

var RubricResult_component = normalizeComponent(
  Views_RubricResultvue_type_script_lang_ts,
  RubricResultvue_type_template_id_a2c9a938_scoped_true_render,
  RubricResultvue_type_template_id_a2c9a938_scoped_true_staticRenderFns,
  false,
  null,
  "a2c9a938",
  null
  
)

/* custom blocks */
;
if (typeof Views_RubricResultvue_type_custom_index_0_blockType_i18n === 'function') Views_RubricResultvue_type_custom_index_0_blockType_i18n(RubricResult_component)

/* harmony default export */ var Views_RubricResult = (RubricResult_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricResultWrapper.vue?vue&type=script&lang=ts






let RubricResultWrapper = class RubricResultWrapper extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    rubric;
    rubricEvaluation;
    rubricData;
    rubricResults;
    rubricEntryUrl;
    canCreateFromExistingRubric;
    initData() {
        const convertedRubricData = convertRubricData(this.rubricData);
        this.rubric = Rubric.fromJSON(convertedRubricData);
        this.rubricEvaluation = RubricEvaluation.fromRubricResults(this.rubric, this.rubricResults);
    }
    created() {
        this.initData();
    }
};
__decorate([
    Prop({ type: Object, required: true }),
    __metadata("design:type", Object)
], RubricResultWrapper.prototype, "rubricData", void 0);
__decorate([
    Prop({ type: Array, required: true }),
    __metadata("design:type", Array)
], RubricResultWrapper.prototype, "rubricResults", void 0);
__decorate([
    Prop({ type: String, default: '' }),
    __metadata("design:type", String)
], RubricResultWrapper.prototype, "rubricEntryUrl", void 0);
__decorate([
    Prop({ type: Boolean, default: false }),
    __metadata("design:type", Boolean)
], RubricResultWrapper.prototype, "canCreateFromExistingRubric", void 0);
RubricResultWrapper = __decorate([
    vue_class_component_esm({
        components: {
            RubricResult: Views_RubricResult
        }
    })
], RubricResultWrapper);
/* harmony default export */ var RubricResultWrappervue_type_script_lang_ts = (RubricResultWrapper);

;// CONCATENATED MODULE: ./src/Views/RubricResultWrapper.vue?vue&type=script&lang=ts
 /* harmony default export */ var Views_RubricResultWrappervue_type_script_lang_ts = (RubricResultWrappervue_type_script_lang_ts); 
;// CONCATENATED MODULE: ./src/Views/RubricResultWrapper.vue





/* normalize component */
;
var RubricResultWrapper_component = normalizeComponent(
  Views_RubricResultWrappervue_type_script_lang_ts,
  RubricResultWrappervue_type_template_id_0413d52a_render,
  RubricResultWrappervue_type_template_id_0413d52a_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Views_RubricResultWrapper = (RubricResultWrapper_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/vue-router/dist/vue-router.esm.js
/*!
  * vue-router v3.6.5
  * (c) 2022 Evan You
  * @license MIT
  */
/*  */

function assert (condition, message) {
  if (!condition) {
    throw new Error(("[vue-router] " + message))
  }
}

function vue_router_esm_warn (condition, message) {
  if (!condition) {
    typeof console !== 'undefined' && console.warn(("[vue-router] " + message));
  }
}

function vue_router_esm_extend (a, b) {
  for (var key in b) {
    a[key] = b[key];
  }
  return a
}

/*  */

var encodeReserveRE = /[!'()*]/g;
var encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };
var commaRE = /%2C/g;

// fixed encodeURIComponent which is more conformant to RFC3986:
// - escapes [!'()*]
// - preserve commas
var vue_router_esm_encode = function (str) { return encodeURIComponent(str)
    .replace(encodeReserveRE, encodeReserveReplacer)
    .replace(commaRE, ','); };

function decode (str) {
  try {
    return decodeURIComponent(str)
  } catch (err) {
    if (false) {}
  }
  return str
}

function resolveQuery (
  query,
  extraQuery,
  _parseQuery
) {
  if ( extraQuery === void 0 ) extraQuery = {};

  var parse = _parseQuery || parseQuery;
  var parsedQuery;
  try {
    parsedQuery = parse(query || '');
  } catch (e) {
     false && 0;
    parsedQuery = {};
  }
  for (var key in extraQuery) {
    var value = extraQuery[key];
    parsedQuery[key] = Array.isArray(value)
      ? value.map(castQueryParamValue)
      : castQueryParamValue(value);
  }
  return parsedQuery
}

var castQueryParamValue = function (value) { return (value == null || typeof value === 'object' ? value : String(value)); };

function parseQuery (query) {
  var res = {};

  query = query.trim().replace(/^(\?|#|&)/, '');

  if (!query) {
    return res
  }

  query.split('&').forEach(function (param) {
    var parts = param.replace(/\+/g, ' ').split('=');
    var key = decode(parts.shift());
    var val = parts.length > 0 ? decode(parts.join('=')) : null;

    if (res[key] === undefined) {
      res[key] = val;
    } else if (Array.isArray(res[key])) {
      res[key].push(val);
    } else {
      res[key] = [res[key], val];
    }
  });

  return res
}

function stringifyQuery (obj) {
  var res = obj
    ? Object.keys(obj)
      .map(function (key) {
        var val = obj[key];

        if (val === undefined) {
          return ''
        }

        if (val === null) {
          return vue_router_esm_encode(key)
        }

        if (Array.isArray(val)) {
          var result = [];
          val.forEach(function (val2) {
            if (val2 === undefined) {
              return
            }
            if (val2 === null) {
              result.push(vue_router_esm_encode(key));
            } else {
              result.push(vue_router_esm_encode(key) + '=' + vue_router_esm_encode(val2));
            }
          });
          return result.join('&')
        }

        return vue_router_esm_encode(key) + '=' + vue_router_esm_encode(val)
      })
      .filter(function (x) { return x.length > 0; })
      .join('&')
    : null;
  return res ? ("?" + res) : ''
}

/*  */

var trailingSlashRE = /\/?$/;

function createRoute (
  record,
  location,
  redirectedFrom,
  router
) {
  var stringifyQuery = router && router.options.stringifyQuery;

  var query = location.query || {};
  try {
    query = clone(query);
  } catch (e) {}

  var route = {
    name: location.name || (record && record.name),
    meta: (record && record.meta) || {},
    path: location.path || '/',
    hash: location.hash || '',
    query: query,
    params: location.params || {},
    fullPath: getFullPath(location, stringifyQuery),
    matched: record ? formatMatch(record) : []
  };
  if (redirectedFrom) {
    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery);
  }
  return Object.freeze(route)
}

function clone (value) {
  if (Array.isArray(value)) {
    return value.map(clone)
  } else if (value && typeof value === 'object') {
    var res = {};
    for (var key in value) {
      res[key] = clone(value[key]);
    }
    return res
  } else {
    return value
  }
}

// the starting route that represents the initial state
var START = createRoute(null, {
  path: '/'
});

function formatMatch (record) {
  var res = [];
  while (record) {
    res.unshift(record);
    record = record.parent;
  }
  return res
}

function getFullPath (
  ref,
  _stringifyQuery
) {
  var path = ref.path;
  var query = ref.query; if ( query === void 0 ) query = {};
  var hash = ref.hash; if ( hash === void 0 ) hash = '';

  var stringify = _stringifyQuery || stringifyQuery;
  return (path || '/') + stringify(query) + hash
}

function isSameRoute (a, b, onlyPath) {
  if (b === START) {
    return a === b
  } else if (!b) {
    return false
  } else if (a.path && b.path) {
    return a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') && (onlyPath ||
      a.hash === b.hash &&
      isObjectEqual(a.query, b.query))
  } else if (a.name && b.name) {
    return (
      a.name === b.name &&
      (onlyPath || (
        a.hash === b.hash &&
      isObjectEqual(a.query, b.query) &&
      isObjectEqual(a.params, b.params))
      )
    )
  } else {
    return false
  }
}

function isObjectEqual (a, b) {
  if ( a === void 0 ) a = {};
  if ( b === void 0 ) b = {};

  // handle null value #1566
  if (!a || !b) { return a === b }
  var aKeys = Object.keys(a).sort();
  var bKeys = Object.keys(b).sort();
  if (aKeys.length !== bKeys.length) {
    return false
  }
  return aKeys.every(function (key, i) {
    var aVal = a[key];
    var bKey = bKeys[i];
    if (bKey !== key) { return false }
    var bVal = b[key];
    // query values can be null and undefined
    if (aVal == null || bVal == null) { return aVal === bVal }
    // check nested equality
    if (typeof aVal === 'object' && typeof bVal === 'object') {
      return isObjectEqual(aVal, bVal)
    }
    return String(aVal) === String(bVal)
  })
}

function isIncludedRoute (current, target) {
  return (
    current.path.replace(trailingSlashRE, '/').indexOf(
      target.path.replace(trailingSlashRE, '/')
    ) === 0 &&
    (!target.hash || current.hash === target.hash) &&
    queryIncludes(current.query, target.query)
  )
}

function queryIncludes (current, target) {
  for (var key in target) {
    if (!(key in current)) {
      return false
    }
  }
  return true
}

function handleRouteEntered (route) {
  for (var i = 0; i < route.matched.length; i++) {
    var record = route.matched[i];
    for (var name in record.instances) {
      var instance = record.instances[name];
      var cbs = record.enteredCbs[name];
      if (!instance || !cbs) { continue }
      delete record.enteredCbs[name];
      for (var i$1 = 0; i$1 < cbs.length; i$1++) {
        if (!instance._isBeingDestroyed) { cbs[i$1](instance); }
      }
    }
  }
}

var View = {
  name: 'RouterView',
  functional: true,
  props: {
    name: {
      type: String,
      default: 'default'
    }
  },
  render: function render (_, ref) {
    var props = ref.props;
    var children = ref.children;
    var parent = ref.parent;
    var data = ref.data;

    // used by devtools to display a router-view badge
    data.routerView = true;

    // directly use parent context's createElement() function
    // so that components rendered by router-view can resolve named slots
    var h = parent.$createElement;
    var name = props.name;
    var route = parent.$route;
    var cache = parent._routerViewCache || (parent._routerViewCache = {});

    // determine current view depth, also check to see if the tree
    // has been toggled inactive but kept-alive.
    var depth = 0;
    var inactive = false;
    while (parent && parent._routerRoot !== parent) {
      var vnodeData = parent.$vnode ? parent.$vnode.data : {};
      if (vnodeData.routerView) {
        depth++;
      }
      if (vnodeData.keepAlive && parent._directInactive && parent._inactive) {
        inactive = true;
      }
      parent = parent.$parent;
    }
    data.routerViewDepth = depth;

    // render previous view if the tree is inactive and kept-alive
    if (inactive) {
      var cachedData = cache[name];
      var cachedComponent = cachedData && cachedData.component;
      if (cachedComponent) {
        // #2301
        // pass props
        if (cachedData.configProps) {
          fillPropsinData(cachedComponent, data, cachedData.route, cachedData.configProps);
        }
        return h(cachedComponent, data, children)
      } else {
        // render previous empty view
        return h()
      }
    }

    var matched = route.matched[depth];
    var component = matched && matched.components[name];

    // render empty node if no matched route or no config component
    if (!matched || !component) {
      cache[name] = null;
      return h()
    }

    // cache component
    cache[name] = { component: component };

    // attach instance registration hook
    // this will be called in the instance's injected lifecycle hooks
    data.registerRouteInstance = function (vm, val) {
      // val could be undefined for unregistration
      var current = matched.instances[name];
      if (
        (val && current !== vm) ||
        (!val && current === vm)
      ) {
        matched.instances[name] = val;
      }
    }

    // also register instance in prepatch hook
    // in case the same component instance is reused across different routes
    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {
      matched.instances[name] = vnode.componentInstance;
    };

    // register instance in init hook
    // in case kept-alive component be actived when routes changed
    data.hook.init = function (vnode) {
      if (vnode.data.keepAlive &&
        vnode.componentInstance &&
        vnode.componentInstance !== matched.instances[name]
      ) {
        matched.instances[name] = vnode.componentInstance;
      }

      // if the route transition has already been confirmed then we weren't
      // able to call the cbs during confirmation as the component was not
      // registered yet, so we call it here.
      handleRouteEntered(route);
    };

    var configProps = matched.props && matched.props[name];
    // save route and configProps in cache
    if (configProps) {
      vue_router_esm_extend(cache[name], {
        route: route,
        configProps: configProps
      });
      fillPropsinData(component, data, route, configProps);
    }

    return h(component, data, children)
  }
};

function fillPropsinData (component, data, route, configProps) {
  // resolve props
  var propsToPass = data.props = resolveProps(route, configProps);
  if (propsToPass) {
    // clone to prevent mutation
    propsToPass = data.props = vue_router_esm_extend({}, propsToPass);
    // pass non-declared props as attrs
    var attrs = data.attrs = data.attrs || {};
    for (var key in propsToPass) {
      if (!component.props || !(key in component.props)) {
        attrs[key] = propsToPass[key];
        delete propsToPass[key];
      }
    }
  }
}

function resolveProps (route, config) {
  switch (typeof config) {
    case 'undefined':
      return
    case 'object':
      return config
    case 'function':
      return config(route)
    case 'boolean':
      return config ? route.params : undefined
    default:
      if (false) {}
  }
}

/*  */

function resolvePath (
  relative,
  base,
  append
) {
  var firstChar = relative.charAt(0);
  if (firstChar === '/') {
    return relative
  }

  if (firstChar === '?' || firstChar === '#') {
    return base + relative
  }

  var stack = base.split('/');

  // remove trailing segment if:
  // - not appending
  // - appending to trailing slash (last segment is empty)
  if (!append || !stack[stack.length - 1]) {
    stack.pop();
  }

  // resolve relative path
  var segments = relative.replace(/^\//, '').split('/');
  for (var i = 0; i < segments.length; i++) {
    var segment = segments[i];
    if (segment === '..') {
      stack.pop();
    } else if (segment !== '.') {
      stack.push(segment);
    }
  }

  // ensure leading slash
  if (stack[0] !== '') {
    stack.unshift('');
  }

  return stack.join('/')
}

function parsePath (path) {
  var hash = '';
  var query = '';

  var hashIndex = path.indexOf('#');
  if (hashIndex >= 0) {
    hash = path.slice(hashIndex);
    path = path.slice(0, hashIndex);
  }

  var queryIndex = path.indexOf('?');
  if (queryIndex >= 0) {
    query = path.slice(queryIndex + 1);
    path = path.slice(0, queryIndex);
  }

  return {
    path: path,
    query: query,
    hash: hash
  }
}

function cleanPath (path) {
  return path.replace(/\/(?:\s*\/)+/g, '/')
}

var isarray = Array.isArray || function (arr) {
  return Object.prototype.toString.call(arr) == '[object Array]';
};

/**
 * Expose `pathToRegexp`.
 */
var pathToRegexp_1 = pathToRegexp;
var parse_1 = vue_router_esm_parse;
var compile_1 = compile;
var tokensToFunction_1 = tokensToFunction;
var tokensToRegExp_1 = tokensToRegExp;

/**
 * The main path matching regexp utility.
 *
 * @type {RegExp}
 */
var PATH_REGEXP = new RegExp([
  // Match escaped characters that would otherwise appear in future matches.
  // This allows the user to escape special characters that won't transform.
  '(\\\\.)',
  // Match Express-style parameters and un-named parameters with a prefix
  // and optional suffixes. Matches appear as:
  //
  // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
  // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
  // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
  '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'
].join('|'), 'g');

/**
 * Parse a string for the raw tokens.
 *
 * @param  {string}  str
 * @param  {Object=} options
 * @return {!Array}
 */
function vue_router_esm_parse (str, options) {
  var tokens = [];
  var key = 0;
  var index = 0;
  var path = '';
  var defaultDelimiter = options && options.delimiter || '/';
  var res;

  while ((res = PATH_REGEXP.exec(str)) != null) {
    var m = res[0];
    var escaped = res[1];
    var offset = res.index;
    path += str.slice(index, offset);
    index = offset + m.length;

    // Ignore already escaped sequences.
    if (escaped) {
      path += escaped[1];
      continue
    }

    var next = str[index];
    var prefix = res[2];
    var name = res[3];
    var capture = res[4];
    var group = res[5];
    var modifier = res[6];
    var asterisk = res[7];

    // Push the current path onto the tokens.
    if (path) {
      tokens.push(path);
      path = '';
    }

    var partial = prefix != null && next != null && next !== prefix;
    var repeat = modifier === '+' || modifier === '*';
    var optional = modifier === '?' || modifier === '*';
    var delimiter = res[2] || defaultDelimiter;
    var pattern = capture || group;

    tokens.push({
      name: name || key++,
      prefix: prefix || '',
      delimiter: delimiter,
      optional: optional,
      repeat: repeat,
      partial: partial,
      asterisk: !!asterisk,
      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')
    });
  }

  // Match any characters still remaining.
  if (index < str.length) {
    path += str.substr(index);
  }

  // If the path exists, push it onto the end.
  if (path) {
    tokens.push(path);
  }

  return tokens
}

/**
 * Compile a string to a template function for the path.
 *
 * @param  {string}             str
 * @param  {Object=}            options
 * @return {!function(Object=, Object=)}
 */
function compile (str, options) {
  return tokensToFunction(vue_router_esm_parse(str, options), options)
}

/**
 * Prettier encoding of URI path segments.
 *
 * @param  {string}
 * @return {string}
 */
function encodeURIComponentPretty (str) {
  return encodeURI(str).replace(/[\/?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
  })
}

/**
 * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
 *
 * @param  {string}
 * @return {string}
 */
function encodeAsterisk (str) {
  return encodeURI(str).replace(/[?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
  })
}

/**
 * Expose a method for transforming tokens into the path function.
 */
function tokensToFunction (tokens, options) {
  // Compile all the tokens into regexps.
  var matches = new Array(tokens.length);

  // Compile all the patterns before compilation.
  for (var i = 0; i < tokens.length; i++) {
    if (typeof tokens[i] === 'object') {
      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options));
    }
  }

  return function (obj, opts) {
    var path = '';
    var data = obj || {};
    var options = opts || {};
    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;

    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i];

      if (typeof token === 'string') {
        path += token;

        continue
      }

      var value = data[token.name];
      var segment;

      if (value == null) {
        if (token.optional) {
          // Prepend partial segment prefixes.
          if (token.partial) {
            path += token.prefix;
          }

          continue
        } else {
          throw new TypeError('Expected "' + token.name + '" to be defined')
        }
      }

      if (isarray(value)) {
        if (!token.repeat) {
          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`')
        }

        if (value.length === 0) {
          if (token.optional) {
            continue
          } else {
            throw new TypeError('Expected "' + token.name + '" to not be empty')
          }
        }

        for (var j = 0; j < value.length; j++) {
          segment = encode(value[j]);

          if (!matches[i].test(segment)) {
            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`')
          }

          path += (j === 0 ? token.prefix : token.delimiter) + segment;
        }

        continue
      }

      segment = token.asterisk ? encodeAsterisk(value) : encode(value);

      if (!matches[i].test(segment)) {
        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
      }

      path += token.prefix + segment;
    }

    return path
  }
}

/**
 * Escape a regular expression string.
 *
 * @param  {string} str
 * @return {string}
 */
function escapeString (str) {
  return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1')
}

/**
 * Escape the capturing group by escaping special characters and meaning.
 *
 * @param  {string} group
 * @return {string}
 */
function escapeGroup (group) {
  return group.replace(/([=!:$\/()])/g, '\\$1')
}

/**
 * Attach the keys as a property of the regexp.
 *
 * @param  {!RegExp} re
 * @param  {Array}   keys
 * @return {!RegExp}
 */
function attachKeys (re, keys) {
  re.keys = keys;
  return re
}

/**
 * Get the flags for a regexp from the options.
 *
 * @param  {Object} options
 * @return {string}
 */
function flags (options) {
  return options && options.sensitive ? '' : 'i'
}

/**
 * Pull out keys from a regexp.
 *
 * @param  {!RegExp} path
 * @param  {!Array}  keys
 * @return {!RegExp}
 */
function regexpToRegexp (path, keys) {
  // Use a negative lookahead to match only capturing groups.
  var groups = path.source.match(/\((?!\?)/g);

  if (groups) {
    for (var i = 0; i < groups.length; i++) {
      keys.push({
        name: i,
        prefix: null,
        delimiter: null,
        optional: false,
        repeat: false,
        partial: false,
        asterisk: false,
        pattern: null
      });
    }
  }

  return attachKeys(path, keys)
}

/**
 * Transform an array into a regexp.
 *
 * @param  {!Array}  path
 * @param  {Array}   keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function arrayToRegexp (path, keys, options) {
  var parts = [];

  for (var i = 0; i < path.length; i++) {
    parts.push(pathToRegexp(path[i], keys, options).source);
  }

  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));

  return attachKeys(regexp, keys)
}

/**
 * Create a path regexp from string input.
 *
 * @param  {string}  path
 * @param  {!Array}  keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function stringToRegexp (path, keys, options) {
  return tokensToRegExp(vue_router_esm_parse(path, options), keys, options)
}

/**
 * Expose a function for taking tokens and returning a RegExp.
 *
 * @param  {!Array}          tokens
 * @param  {(Array|Object)=} keys
 * @param  {Object=}         options
 * @return {!RegExp}
 */
function tokensToRegExp (tokens, keys, options) {
  if (!isarray(keys)) {
    options = /** @type {!Object} */ (keys || options);
    keys = [];
  }

  options = options || {};

  var strict = options.strict;
  var end = options.end !== false;
  var route = '';

  // Iterate over the tokens and create our regexp string.
  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i];

    if (typeof token === 'string') {
      route += escapeString(token);
    } else {
      var prefix = escapeString(token.prefix);
      var capture = '(?:' + token.pattern + ')';

      keys.push(token);

      if (token.repeat) {
        capture += '(?:' + prefix + capture + ')*';
      }

      if (token.optional) {
        if (!token.partial) {
          capture = '(?:' + prefix + '(' + capture + '))?';
        } else {
          capture = prefix + '(' + capture + ')?';
        }
      } else {
        capture = prefix + '(' + capture + ')';
      }

      route += capture;
    }
  }

  var delimiter = escapeString(options.delimiter || '/');
  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;

  // In non-strict mode we allow a slash at the end of match. If the path to
  // match already ends with a slash, we remove it for consistency. The slash
  // is valid at the end of a path match, not in the middle. This is important
  // in non-ending mode, where "/test/" shouldn't match "/test//route".
  if (!strict) {
    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';
  }

  if (end) {
    route += '$';
  } else {
    // In non-ending mode, we need the capturing groups to match as much as
    // possible by using a positive lookahead to the end or next path segment.
    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';
  }

  return attachKeys(new RegExp('^' + route, flags(options)), keys)
}

/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 *
 * @param  {(string|RegExp|Array)} path
 * @param  {(Array|Object)=}       keys
 * @param  {Object=}               options
 * @return {!RegExp}
 */
function pathToRegexp (path, keys, options) {
  if (!isarray(keys)) {
    options = /** @type {!Object} */ (keys || options);
    keys = [];
  }

  options = options || {};

  if (path instanceof RegExp) {
    return regexpToRegexp(path, /** @type {!Array} */ (keys))
  }

  if (isarray(path)) {
    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)
  }

  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)
}
pathToRegexp_1.parse = parse_1;
pathToRegexp_1.compile = compile_1;
pathToRegexp_1.tokensToFunction = tokensToFunction_1;
pathToRegexp_1.tokensToRegExp = tokensToRegExp_1;

/*  */

// $flow-disable-line
var regexpCompileCache = Object.create(null);

function fillParams (
  path,
  params,
  routeMsg
) {
  params = params || {};
  try {
    var filler =
      regexpCompileCache[path] ||
      (regexpCompileCache[path] = pathToRegexp_1.compile(path));

    // Fix #2505 resolving asterisk routes { name: 'not-found', params: { pathMatch: '/not-found' }}
    // and fix #3106 so that you can work with location descriptor object having params.pathMatch equal to empty string
    if (typeof params.pathMatch === 'string') { params[0] = params.pathMatch; }

    return filler(params, { pretty: true })
  } catch (e) {
    if (false) {}
    return ''
  } finally {
    // delete the 0 if it was added
    delete params[0];
  }
}

/*  */

function normalizeLocation (
  raw,
  current,
  append,
  router
) {
  var next = typeof raw === 'string' ? { path: raw } : raw;
  // named target
  if (next._normalized) {
    return next
  } else if (next.name) {
    next = vue_router_esm_extend({}, raw);
    var params = next.params;
    if (params && typeof params === 'object') {
      next.params = vue_router_esm_extend({}, params);
    }
    return next
  }

  // relative params
  if (!next.path && next.params && current) {
    next = vue_router_esm_extend({}, next);
    next._normalized = true;
    var params$1 = vue_router_esm_extend(vue_router_esm_extend({}, current.params), next.params);
    if (current.name) {
      next.name = current.name;
      next.params = params$1;
    } else if (current.matched.length) {
      var rawPath = current.matched[current.matched.length - 1].path;
      next.path = fillParams(rawPath, params$1, ("path " + (current.path)));
    } else if (false) {}
    return next
  }

  var parsedPath = parsePath(next.path || '');
  var basePath = (current && current.path) || '/';
  var path = parsedPath.path
    ? resolvePath(parsedPath.path, basePath, append || next.append)
    : basePath;

  var query = resolveQuery(
    parsedPath.query,
    next.query,
    router && router.options.parseQuery
  );

  var hash = next.hash || parsedPath.hash;
  if (hash && hash.charAt(0) !== '#') {
    hash = "#" + hash;
  }

  return {
    _normalized: true,
    path: path,
    query: query,
    hash: hash
  }
}

/*  */

// work around weird flow bug
var toTypes = [String, Object];
var eventTypes = [String, Array];

var vue_router_esm_noop = function () {};

var warnedCustomSlot;
var warnedTagProp;
var warnedEventProp;

var Link = {
  name: 'RouterLink',
  props: {
    to: {
      type: toTypes,
      required: true
    },
    tag: {
      type: String,
      default: 'a'
    },
    custom: Boolean,
    exact: Boolean,
    exactPath: Boolean,
    append: Boolean,
    replace: Boolean,
    activeClass: String,
    exactActiveClass: String,
    ariaCurrentValue: {
      type: String,
      default: 'page'
    },
    event: {
      type: eventTypes,
      default: 'click'
    }
  },
  render: function render (h) {
    var this$1$1 = this;

    var router = this.$router;
    var current = this.$route;
    var ref = router.resolve(
      this.to,
      current,
      this.append
    );
    var location = ref.location;
    var route = ref.route;
    var href = ref.href;

    var classes = {};
    var globalActiveClass = router.options.linkActiveClass;
    var globalExactActiveClass = router.options.linkExactActiveClass;
    // Support global empty active class
    var activeClassFallback =
      globalActiveClass == null ? 'router-link-active' : globalActiveClass;
    var exactActiveClassFallback =
      globalExactActiveClass == null
        ? 'router-link-exact-active'
        : globalExactActiveClass;
    var activeClass =
      this.activeClass == null ? activeClassFallback : this.activeClass;
    var exactActiveClass =
      this.exactActiveClass == null
        ? exactActiveClassFallback
        : this.exactActiveClass;

    var compareTarget = route.redirectedFrom
      ? createRoute(null, normalizeLocation(route.redirectedFrom), null, router)
      : route;

    classes[exactActiveClass] = isSameRoute(current, compareTarget, this.exactPath);
    classes[activeClass] = this.exact || this.exactPath
      ? classes[exactActiveClass]
      : isIncludedRoute(current, compareTarget);

    var ariaCurrentValue = classes[exactActiveClass] ? this.ariaCurrentValue : null;

    var handler = function (e) {
      if (guardEvent(e)) {
        if (this$1$1.replace) {
          router.replace(location, vue_router_esm_noop);
        } else {
          router.push(location, vue_router_esm_noop);
        }
      }
    };

    var on = { click: guardEvent };
    if (Array.isArray(this.event)) {
      this.event.forEach(function (e) {
        on[e] = handler;
      });
    } else {
      on[this.event] = handler;
    }

    var data = { class: classes };

    var scopedSlot =
      !this.$scopedSlots.$hasNormal &&
      this.$scopedSlots.default &&
      this.$scopedSlots.default({
        href: href,
        route: route,
        navigate: handler,
        isActive: classes[activeClass],
        isExactActive: classes[exactActiveClass]
      });

    if (scopedSlot) {
      if (false) {}
      if (scopedSlot.length === 1) {
        return scopedSlot[0]
      } else if (scopedSlot.length > 1 || !scopedSlot.length) {
        if (false) {}
        return scopedSlot.length === 0 ? h() : h('span', {}, scopedSlot)
      }
    }

    if (false) {}

    if (this.tag === 'a') {
      data.on = on;
      data.attrs = { href: href, 'aria-current': ariaCurrentValue };
    } else {
      // find the first <a> child and apply listener and href
      var a = findAnchor(this.$slots.default);
      if (a) {
        // in case the <a> is a static node
        a.isStatic = false;
        var aData = (a.data = vue_router_esm_extend({}, a.data));
        aData.on = aData.on || {};
        // transform existing events in both objects into arrays so we can push later
        for (var event in aData.on) {
          var handler$1 = aData.on[event];
          if (event in on) {
            aData.on[event] = Array.isArray(handler$1) ? handler$1 : [handler$1];
          }
        }
        // append new listeners for router-link
        for (var event$1 in on) {
          if (event$1 in aData.on) {
            // on[event] is always a function
            aData.on[event$1].push(on[event$1]);
          } else {
            aData.on[event$1] = handler;
          }
        }

        var aAttrs = (a.data.attrs = vue_router_esm_extend({}, a.data.attrs));
        aAttrs.href = href;
        aAttrs['aria-current'] = ariaCurrentValue;
      } else {
        // doesn't have <a> child, apply listener to self
        data.on = on;
      }
    }

    return h(this.tag, data, this.$slots.default)
  }
};

function guardEvent (e) {
  // don't redirect with control keys
  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }
  // don't redirect when preventDefault called
  if (e.defaultPrevented) { return }
  // don't redirect on right click
  if (e.button !== undefined && e.button !== 0) { return }
  // don't redirect if `target="_blank"`
  if (e.currentTarget && e.currentTarget.getAttribute) {
    var target = e.currentTarget.getAttribute('target');
    if (/\b_blank\b/i.test(target)) { return }
  }
  // this may be a Weex event which doesn't have this method
  if (e.preventDefault) {
    e.preventDefault();
  }
  return true
}

function findAnchor (children) {
  if (children) {
    var child;
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      if (child.tag === 'a') {
        return child
      }
      if (child.children && (child = findAnchor(child.children))) {
        return child
      }
    }
  }
}

var _Vue;

function install (Vue) {
  if (install.installed && _Vue === Vue) { return }
  install.installed = true;

  _Vue = Vue;

  var isDef = function (v) { return v !== undefined; };

  var registerInstance = function (vm, callVal) {
    var i = vm.$options._parentVnode;
    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {
      i(vm, callVal);
    }
  };

  Vue.mixin({
    beforeCreate: function beforeCreate () {
      if (isDef(this.$options.router)) {
        this._routerRoot = this;
        this._router = this.$options.router;
        this._router.init(this);
        Vue.util.defineReactive(this, '_route', this._router.history.current);
      } else {
        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;
      }
      registerInstance(this, this);
    },
    destroyed: function destroyed () {
      registerInstance(this);
    }
  });

  Object.defineProperty(Vue.prototype, '$router', {
    get: function get () { return this._routerRoot._router }
  });

  Object.defineProperty(Vue.prototype, '$route', {
    get: function get () { return this._routerRoot._route }
  });

  Vue.component('RouterView', View);
  Vue.component('RouterLink', Link);

  var strats = Vue.config.optionMergeStrategies;
  // use the same hook merging strategy for route hooks
  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;
}

/*  */

var inBrowser = typeof window !== 'undefined';

/*  */

function createRouteMap (
  routes,
  oldPathList,
  oldPathMap,
  oldNameMap,
  parentRoute
) {
  // the path list is used to control path matching priority
  var pathList = oldPathList || [];
  // $flow-disable-line
  var pathMap = oldPathMap || Object.create(null);
  // $flow-disable-line
  var nameMap = oldNameMap || Object.create(null);

  routes.forEach(function (route) {
    addRouteRecord(pathList, pathMap, nameMap, route, parentRoute);
  });

  // ensure wildcard routes are always at the end
  for (var i = 0, l = pathList.length; i < l; i++) {
    if (pathList[i] === '*') {
      pathList.push(pathList.splice(i, 1)[0]);
      l--;
      i--;
    }
  }

  if (false) { var pathNames, found; }

  return {
    pathList: pathList,
    pathMap: pathMap,
    nameMap: nameMap
  }
}

function addRouteRecord (
  pathList,
  pathMap,
  nameMap,
  route,
  parent,
  matchAs
) {
  var path = route.path;
  var name = route.name;
  if (false) {}

  var pathToRegexpOptions =
    route.pathToRegexpOptions || {};
  var normalizedPath = normalizePath(path, parent, pathToRegexpOptions.strict);

  if (typeof route.caseSensitive === 'boolean') {
    pathToRegexpOptions.sensitive = route.caseSensitive;
  }

  var record = {
    path: normalizedPath,
    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),
    components: route.components || { default: route.component },
    alias: route.alias
      ? typeof route.alias === 'string'
        ? [route.alias]
        : route.alias
      : [],
    instances: {},
    enteredCbs: {},
    name: name,
    parent: parent,
    matchAs: matchAs,
    redirect: route.redirect,
    beforeEnter: route.beforeEnter,
    meta: route.meta || {},
    props:
      route.props == null
        ? {}
        : route.components
          ? route.props
          : { default: route.props }
  };

  if (route.children) {
    // Warn if route is named, does not redirect and has a default child route.
    // If users navigate to this route by name, the default child will
    // not be rendered (GH Issue #629)
    if (false) {}
    route.children.forEach(function (child) {
      var childMatchAs = matchAs
        ? cleanPath((matchAs + "/" + (child.path)))
        : undefined;
      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);
    });
  }

  if (!pathMap[record.path]) {
    pathList.push(record.path);
    pathMap[record.path] = record;
  }

  if (route.alias !== undefined) {
    var aliases = Array.isArray(route.alias) ? route.alias : [route.alias];
    for (var i = 0; i < aliases.length; ++i) {
      var alias = aliases[i];
      if (false) {}

      var aliasRoute = {
        path: alias,
        children: route.children
      };
      addRouteRecord(
        pathList,
        pathMap,
        nameMap,
        aliasRoute,
        parent,
        record.path || '/' // matchAs
      );
    }
  }

  if (name) {
    if (!nameMap[name]) {
      nameMap[name] = record;
    } else if (false) {}
  }
}

function compileRouteRegex (
  path,
  pathToRegexpOptions
) {
  var regex = pathToRegexp_1(path, [], pathToRegexpOptions);
  if (false) { var keys; }
  return regex
}

function normalizePath (
  path,
  parent,
  strict
) {
  if (!strict) { path = path.replace(/\/$/, ''); }
  if (path[0] === '/') { return path }
  if (parent == null) { return path }
  return cleanPath(((parent.path) + "/" + path))
}

/*  */



function createMatcher (
  routes,
  router
) {
  var ref = createRouteMap(routes);
  var pathList = ref.pathList;
  var pathMap = ref.pathMap;
  var nameMap = ref.nameMap;

  function addRoutes (routes) {
    createRouteMap(routes, pathList, pathMap, nameMap);
  }

  function addRoute (parentOrRoute, route) {
    var parent = (typeof parentOrRoute !== 'object') ? nameMap[parentOrRoute] : undefined;
    // $flow-disable-line
    createRouteMap([route || parentOrRoute], pathList, pathMap, nameMap, parent);

    // add aliases of parent
    if (parent && parent.alias.length) {
      createRouteMap(
        // $flow-disable-line route is defined if parent is
        parent.alias.map(function (alias) { return ({ path: alias, children: [route] }); }),
        pathList,
        pathMap,
        nameMap,
        parent
      );
    }
  }

  function getRoutes () {
    return pathList.map(function (path) { return pathMap[path]; })
  }

  function match (
    raw,
    currentRoute,
    redirectedFrom
  ) {
    var location = normalizeLocation(raw, currentRoute, false, router);
    var name = location.name;

    if (name) {
      var record = nameMap[name];
      if (false) {}
      if (!record) { return _createRoute(null, location) }
      var paramNames = record.regex.keys
        .filter(function (key) { return !key.optional; })
        .map(function (key) { return key.name; });

      if (typeof location.params !== 'object') {
        location.params = {};
      }

      if (currentRoute && typeof currentRoute.params === 'object') {
        for (var key in currentRoute.params) {
          if (!(key in location.params) && paramNames.indexOf(key) > -1) {
            location.params[key] = currentRoute.params[key];
          }
        }
      }

      location.path = fillParams(record.path, location.params, ("named route \"" + name + "\""));
      return _createRoute(record, location, redirectedFrom)
    } else if (location.path) {
      location.params = {};
      for (var i = 0; i < pathList.length; i++) {
        var path = pathList[i];
        var record$1 = pathMap[path];
        if (matchRoute(record$1.regex, location.path, location.params)) {
          return _createRoute(record$1, location, redirectedFrom)
        }
      }
    }
    // no match
    return _createRoute(null, location)
  }

  function redirect (
    record,
    location
  ) {
    var originalRedirect = record.redirect;
    var redirect = typeof originalRedirect === 'function'
      ? originalRedirect(createRoute(record, location, null, router))
      : originalRedirect;

    if (typeof redirect === 'string') {
      redirect = { path: redirect };
    }

    if (!redirect || typeof redirect !== 'object') {
      if (false) {}
      return _createRoute(null, location)
    }

    var re = redirect;
    var name = re.name;
    var path = re.path;
    var query = location.query;
    var hash = location.hash;
    var params = location.params;
    query = re.hasOwnProperty('query') ? re.query : query;
    hash = re.hasOwnProperty('hash') ? re.hash : hash;
    params = re.hasOwnProperty('params') ? re.params : params;

    if (name) {
      // resolved named direct
      var targetRecord = nameMap[name];
      if (false) {}
      return match({
        _normalized: true,
        name: name,
        query: query,
        hash: hash,
        params: params
      }, undefined, location)
    } else if (path) {
      // 1. resolve relative redirect
      var rawPath = resolveRecordPath(path, record);
      // 2. resolve params
      var resolvedPath = fillParams(rawPath, params, ("redirect route with path \"" + rawPath + "\""));
      // 3. rematch with existing query and hash
      return match({
        _normalized: true,
        path: resolvedPath,
        query: query,
        hash: hash
      }, undefined, location)
    } else {
      if (false) {}
      return _createRoute(null, location)
    }
  }

  function alias (
    record,
    location,
    matchAs
  ) {
    var aliasedPath = fillParams(matchAs, location.params, ("aliased route with path \"" + matchAs + "\""));
    var aliasedMatch = match({
      _normalized: true,
      path: aliasedPath
    });
    if (aliasedMatch) {
      var matched = aliasedMatch.matched;
      var aliasedRecord = matched[matched.length - 1];
      location.params = aliasedMatch.params;
      return _createRoute(aliasedRecord, location)
    }
    return _createRoute(null, location)
  }

  function _createRoute (
    record,
    location,
    redirectedFrom
  ) {
    if (record && record.redirect) {
      return redirect(record, redirectedFrom || location)
    }
    if (record && record.matchAs) {
      return alias(record, location, record.matchAs)
    }
    return createRoute(record, location, redirectedFrom, router)
  }

  return {
    match: match,
    addRoute: addRoute,
    getRoutes: getRoutes,
    addRoutes: addRoutes
  }
}

function matchRoute (
  regex,
  path,
  params
) {
  var m = path.match(regex);

  if (!m) {
    return false
  } else if (!params) {
    return true
  }

  for (var i = 1, len = m.length; i < len; ++i) {
    var key = regex.keys[i - 1];
    if (key) {
      // Fix #1994: using * with props: true generates a param named 0
      params[key.name || 'pathMatch'] = typeof m[i] === 'string' ? decode(m[i]) : m[i];
    }
  }

  return true
}

function resolveRecordPath (path, record) {
  return resolvePath(path, record.parent ? record.parent.path : '/', true)
}

/*  */

// use User Timing api (if present) for more accurate key precision
var Time =
  inBrowser && window.performance && window.performance.now
    ? window.performance
    : Date;

function genStateKey () {
  return Time.now().toFixed(3)
}

var _key = genStateKey();

function getStateKey () {
  return _key
}

function setStateKey (key) {
  return (_key = key)
}

/*  */

var positionStore = Object.create(null);

function setupScroll () {
  // Prevent browser scroll behavior on History popstate
  if ('scrollRestoration' in window.history) {
    window.history.scrollRestoration = 'manual';
  }
  // Fix for #1585 for Firefox
  // Fix for #2195 Add optional third attribute to workaround a bug in safari https://bugs.webkit.org/show_bug.cgi?id=182678
  // Fix for #2774 Support for apps loaded from Windows file shares not mapped to network drives: replaced location.origin with
  // window.location.protocol + '//' + window.location.host
  // location.host contains the port and location.hostname doesn't
  var protocolAndPath = window.location.protocol + '//' + window.location.host;
  var absolutePath = window.location.href.replace(protocolAndPath, '');
  // preserve existing history state as it could be overriden by the user
  var stateCopy = vue_router_esm_extend({}, window.history.state);
  stateCopy.key = getStateKey();
  window.history.replaceState(stateCopy, '', absolutePath);
  window.addEventListener('popstate', handlePopState);
  return function () {
    window.removeEventListener('popstate', handlePopState);
  }
}

function handleScroll (
  router,
  to,
  from,
  isPop
) {
  if (!router.app) {
    return
  }

  var behavior = router.options.scrollBehavior;
  if (!behavior) {
    return
  }

  if (false) {}

  // wait until re-render finishes before scrolling
  router.app.$nextTick(function () {
    var position = getScrollPosition();
    var shouldScroll = behavior.call(
      router,
      to,
      from,
      isPop ? position : null
    );

    if (!shouldScroll) {
      return
    }

    if (typeof shouldScroll.then === 'function') {
      shouldScroll
        .then(function (shouldScroll) {
          scrollToPosition((shouldScroll), position);
        })
        .catch(function (err) {
          if (false) {}
        });
    } else {
      scrollToPosition(shouldScroll, position);
    }
  });
}

function saveScrollPosition () {
  var key = getStateKey();
  if (key) {
    positionStore[key] = {
      x: window.pageXOffset,
      y: window.pageYOffset
    };
  }
}

function handlePopState (e) {
  saveScrollPosition();
  if (e.state && e.state.key) {
    setStateKey(e.state.key);
  }
}

function getScrollPosition () {
  var key = getStateKey();
  if (key) {
    return positionStore[key]
  }
}

function getElementPosition (el, offset) {
  var docEl = document.documentElement;
  var docRect = docEl.getBoundingClientRect();
  var elRect = el.getBoundingClientRect();
  return {
    x: elRect.left - docRect.left - offset.x,
    y: elRect.top - docRect.top - offset.y
  }
}

function isValidPosition (obj) {
  return vue_router_esm_isNumber(obj.x) || vue_router_esm_isNumber(obj.y)
}

function normalizePosition (obj) {
  return {
    x: vue_router_esm_isNumber(obj.x) ? obj.x : window.pageXOffset,
    y: vue_router_esm_isNumber(obj.y) ? obj.y : window.pageYOffset
  }
}

function normalizeOffset (obj) {
  return {
    x: vue_router_esm_isNumber(obj.x) ? obj.x : 0,
    y: vue_router_esm_isNumber(obj.y) ? obj.y : 0
  }
}

function vue_router_esm_isNumber (v) {
  return typeof v === 'number'
}

var hashStartsWithNumberRE = /^#\d/;

function scrollToPosition (shouldScroll, position) {
  var isObject = typeof shouldScroll === 'object';
  if (isObject && typeof shouldScroll.selector === 'string') {
    // getElementById would still fail if the selector contains a more complicated query like #main[data-attr]
    // but at the same time, it doesn't make much sense to select an element with an id and an extra selector
    var el = hashStartsWithNumberRE.test(shouldScroll.selector) // $flow-disable-line
      ? document.getElementById(shouldScroll.selector.slice(1)) // $flow-disable-line
      : document.querySelector(shouldScroll.selector);

    if (el) {
      var offset =
        shouldScroll.offset && typeof shouldScroll.offset === 'object'
          ? shouldScroll.offset
          : {};
      offset = normalizeOffset(offset);
      position = getElementPosition(el, offset);
    } else if (isValidPosition(shouldScroll)) {
      position = normalizePosition(shouldScroll);
    }
  } else if (isObject && isValidPosition(shouldScroll)) {
    position = normalizePosition(shouldScroll);
  }

  if (position) {
    // $flow-disable-line
    if ('scrollBehavior' in document.documentElement.style) {
      window.scrollTo({
        left: position.x,
        top: position.y,
        // $flow-disable-line
        behavior: shouldScroll.behavior
      });
    } else {
      window.scrollTo(position.x, position.y);
    }
  }
}

/*  */

var supportsPushState =
  inBrowser &&
  (function () {
    var ua = window.navigator.userAgent;

    if (
      (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&
      ua.indexOf('Mobile Safari') !== -1 &&
      ua.indexOf('Chrome') === -1 &&
      ua.indexOf('Windows Phone') === -1
    ) {
      return false
    }

    return window.history && typeof window.history.pushState === 'function'
  })();

function pushState (url, replace) {
  saveScrollPosition();
  // try...catch the pushState call to get around Safari
  // DOM Exception 18 where it limits to 100 pushState calls
  var history = window.history;
  try {
    if (replace) {
      // preserve existing history state as it could be overriden by the user
      var stateCopy = vue_router_esm_extend({}, history.state);
      stateCopy.key = getStateKey();
      history.replaceState(stateCopy, '', url);
    } else {
      history.pushState({ key: setStateKey(genStateKey()) }, '', url);
    }
  } catch (e) {
    window.location[replace ? 'replace' : 'assign'](url);
  }
}

function replaceState (url) {
  pushState(url, true);
}

// When changing thing, also edit router.d.ts
var NavigationFailureType = {
  redirected: 2,
  aborted: 4,
  cancelled: 8,
  duplicated: 16
};

function createNavigationRedirectedError (from, to) {
  return createRouterError(
    from,
    to,
    NavigationFailureType.redirected,
    ("Redirected when going from \"" + (from.fullPath) + "\" to \"" + (stringifyRoute(
      to
    )) + "\" via a navigation guard.")
  )
}

function createNavigationDuplicatedError (from, to) {
  var error = createRouterError(
    from,
    to,
    NavigationFailureType.duplicated,
    ("Avoided redundant navigation to current location: \"" + (from.fullPath) + "\".")
  );
  // backwards compatible with the first introduction of Errors
  error.name = 'NavigationDuplicated';
  return error
}

function createNavigationCancelledError (from, to) {
  return createRouterError(
    from,
    to,
    NavigationFailureType.cancelled,
    ("Navigation cancelled from \"" + (from.fullPath) + "\" to \"" + (to.fullPath) + "\" with a new navigation.")
  )
}

function createNavigationAbortedError (from, to) {
  return createRouterError(
    from,
    to,
    NavigationFailureType.aborted,
    ("Navigation aborted from \"" + (from.fullPath) + "\" to \"" + (to.fullPath) + "\" via a navigation guard.")
  )
}

function createRouterError (from, to, type, message) {
  var error = new Error(message);
  error._isRouter = true;
  error.from = from;
  error.to = to;
  error.type = type;

  return error
}

var propertiesToLog = ['params', 'query', 'hash'];

function stringifyRoute (to) {
  if (typeof to === 'string') { return to }
  if ('path' in to) { return to.path }
  var location = {};
  propertiesToLog.forEach(function (key) {
    if (key in to) { location[key] = to[key]; }
  });
  return JSON.stringify(location, null, 2)
}

function isError (err) {
  return Object.prototype.toString.call(err).indexOf('Error') > -1
}

function isNavigationFailure (err, errorType) {
  return (
    isError(err) &&
    err._isRouter &&
    (errorType == null || err.type === errorType)
  )
}

/*  */

function runQueue (queue, fn, cb) {
  var step = function (index) {
    if (index >= queue.length) {
      cb();
    } else {
      if (queue[index]) {
        fn(queue[index], function () {
          step(index + 1);
        });
      } else {
        step(index + 1);
      }
    }
  };
  step(0);
}

/*  */

function resolveAsyncComponents (matched) {
  return function (to, from, next) {
    var hasAsync = false;
    var pending = 0;
    var error = null;

    flatMapComponents(matched, function (def, _, match, key) {
      // if it's a function and doesn't have cid attached,
      // assume it's an async component resolve function.
      // we are not using Vue's default async resolving mechanism because
      // we want to halt the navigation until the incoming component has been
      // resolved.
      if (typeof def === 'function' && def.cid === undefined) {
        hasAsync = true;
        pending++;

        var resolve = once(function (resolvedDef) {
          if (isESModule(resolvedDef)) {
            resolvedDef = resolvedDef.default;
          }
          // save resolved on async factory in case it's used elsewhere
          def.resolved = typeof resolvedDef === 'function'
            ? resolvedDef
            : _Vue.extend(resolvedDef);
          match.components[key] = resolvedDef;
          pending--;
          if (pending <= 0) {
            next();
          }
        });

        var reject = once(function (reason) {
          var msg = "Failed to resolve async component " + key + ": " + reason;
           false && 0;
          if (!error) {
            error = isError(reason)
              ? reason
              : new Error(msg);
            next(error);
          }
        });

        var res;
        try {
          res = def(resolve, reject);
        } catch (e) {
          reject(e);
        }
        if (res) {
          if (typeof res.then === 'function') {
            res.then(resolve, reject);
          } else {
            // new syntax in Vue 2.3
            var comp = res.component;
            if (comp && typeof comp.then === 'function') {
              comp.then(resolve, reject);
            }
          }
        }
      }
    });

    if (!hasAsync) { next(); }
  }
}

function flatMapComponents (
  matched,
  fn
) {
  return flatten(matched.map(function (m) {
    return Object.keys(m.components).map(function (key) { return fn(
      m.components[key],
      m.instances[key],
      m, key
    ); })
  }))
}

function flatten (arr) {
  return Array.prototype.concat.apply([], arr)
}

var hasSymbol =
  typeof Symbol === 'function' &&
  typeof Symbol.toStringTag === 'symbol';

function isESModule (obj) {
  return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module')
}

// in Webpack 2, require.ensure now also returns a Promise
// so the resolve/reject functions may get called an extra time
// if the user uses an arrow function shorthand that happens to
// return that Promise.
function once (fn) {
  var called = false;
  return function () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    if (called) { return }
    called = true;
    return fn.apply(this, args)
  }
}

/*  */

var History = function History (router, base) {
  this.router = router;
  this.base = normalizeBase(base);
  // start with a route object that stands for "nowhere"
  this.current = START;
  this.pending = null;
  this.ready = false;
  this.readyCbs = [];
  this.readyErrorCbs = [];
  this.errorCbs = [];
  this.listeners = [];
};

History.prototype.listen = function listen (cb) {
  this.cb = cb;
};

History.prototype.onReady = function onReady (cb, errorCb) {
  if (this.ready) {
    cb();
  } else {
    this.readyCbs.push(cb);
    if (errorCb) {
      this.readyErrorCbs.push(errorCb);
    }
  }
};

History.prototype.onError = function onError (errorCb) {
  this.errorCbs.push(errorCb);
};

History.prototype.transitionTo = function transitionTo (
  location,
  onComplete,
  onAbort
) {
    var this$1$1 = this;

  var route;
  // catch redirect option https://github.com/vuejs/vue-router/issues/3201
  try {
    route = this.router.match(location, this.current);
  } catch (e) {
    this.errorCbs.forEach(function (cb) {
      cb(e);
    });
    // Exception should still be thrown
    throw e
  }
  var prev = this.current;
  this.confirmTransition(
    route,
    function () {
      this$1$1.updateRoute(route);
      onComplete && onComplete(route);
      this$1$1.ensureURL();
      this$1$1.router.afterHooks.forEach(function (hook) {
        hook && hook(route, prev);
      });

      // fire ready cbs once
      if (!this$1$1.ready) {
        this$1$1.ready = true;
        this$1$1.readyCbs.forEach(function (cb) {
          cb(route);
        });
      }
    },
    function (err) {
      if (onAbort) {
        onAbort(err);
      }
      if (err && !this$1$1.ready) {
        // Initial redirection should not mark the history as ready yet
        // because it's triggered by the redirection instead
        // https://github.com/vuejs/vue-router/issues/3225
        // https://github.com/vuejs/vue-router/issues/3331
        if (!isNavigationFailure(err, NavigationFailureType.redirected) || prev !== START) {
          this$1$1.ready = true;
          this$1$1.readyErrorCbs.forEach(function (cb) {
            cb(err);
          });
        }
      }
    }
  );
};

History.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {
    var this$1$1 = this;

  var current = this.current;
  this.pending = route;
  var abort = function (err) {
    // changed after adding errors with
    // https://github.com/vuejs/vue-router/pull/3047 before that change,
    // redirect and aborted navigation would produce an err == null
    if (!isNavigationFailure(err) && isError(err)) {
      if (this$1$1.errorCbs.length) {
        this$1$1.errorCbs.forEach(function (cb) {
          cb(err);
        });
      } else {
        if (false) {}
        console.error(err);
      }
    }
    onAbort && onAbort(err);
  };
  var lastRouteIndex = route.matched.length - 1;
  var lastCurrentIndex = current.matched.length - 1;
  if (
    isSameRoute(route, current) &&
    // in the case the route map has been dynamically appended to
    lastRouteIndex === lastCurrentIndex &&
    route.matched[lastRouteIndex] === current.matched[lastCurrentIndex]
  ) {
    this.ensureURL();
    if (route.hash) {
      handleScroll(this.router, current, route, false);
    }
    return abort(createNavigationDuplicatedError(current, route))
  }

  var ref = resolveQueue(
    this.current.matched,
    route.matched
  );
    var updated = ref.updated;
    var deactivated = ref.deactivated;
    var activated = ref.activated;

  var queue = [].concat(
    // in-component leave guards
    extractLeaveGuards(deactivated),
    // global before hooks
    this.router.beforeHooks,
    // in-component update hooks
    extractUpdateHooks(updated),
    // in-config enter guards
    activated.map(function (m) { return m.beforeEnter; }),
    // async components
    resolveAsyncComponents(activated)
  );

  var iterator = function (hook, next) {
    if (this$1$1.pending !== route) {
      return abort(createNavigationCancelledError(current, route))
    }
    try {
      hook(route, current, function (to) {
        if (to === false) {
          // next(false) -> abort navigation, ensure current URL
          this$1$1.ensureURL(true);
          abort(createNavigationAbortedError(current, route));
        } else if (isError(to)) {
          this$1$1.ensureURL(true);
          abort(to);
        } else if (
          typeof to === 'string' ||
          (typeof to === 'object' &&
            (typeof to.path === 'string' || typeof to.name === 'string'))
        ) {
          // next('/') or next({ path: '/' }) -> redirect
          abort(createNavigationRedirectedError(current, route));
          if (typeof to === 'object' && to.replace) {
            this$1$1.replace(to);
          } else {
            this$1$1.push(to);
          }
        } else {
          // confirm transition and pass on the value
          next(to);
        }
      });
    } catch (e) {
      abort(e);
    }
  };

  runQueue(queue, iterator, function () {
    // wait until async components are resolved before
    // extracting in-component enter guards
    var enterGuards = extractEnterGuards(activated);
    var queue = enterGuards.concat(this$1$1.router.resolveHooks);
    runQueue(queue, iterator, function () {
      if (this$1$1.pending !== route) {
        return abort(createNavigationCancelledError(current, route))
      }
      this$1$1.pending = null;
      onComplete(route);
      if (this$1$1.router.app) {
        this$1$1.router.app.$nextTick(function () {
          handleRouteEntered(route);
        });
      }
    });
  });
};

History.prototype.updateRoute = function updateRoute (route) {
  this.current = route;
  this.cb && this.cb(route);
};

History.prototype.setupListeners = function setupListeners () {
  // Default implementation is empty
};

History.prototype.teardown = function teardown () {
  // clean up event listeners
  // https://github.com/vuejs/vue-router/issues/2341
  this.listeners.forEach(function (cleanupListener) {
    cleanupListener();
  });
  this.listeners = [];

  // reset current history route
  // https://github.com/vuejs/vue-router/issues/3294
  this.current = START;
  this.pending = null;
};

function normalizeBase (base) {
  if (!base) {
    if (inBrowser) {
      // respect <base> tag
      var baseEl = document.querySelector('base');
      base = (baseEl && baseEl.getAttribute('href')) || '/';
      // strip full URL origin
      base = base.replace(/^https?:\/\/[^\/]+/, '');
    } else {
      base = '/';
    }
  }
  // make sure there's the starting slash
  if (base.charAt(0) !== '/') {
    base = '/' + base;
  }
  // remove trailing slash
  return base.replace(/\/$/, '')
}

function resolveQueue (
  current,
  next
) {
  var i;
  var max = Math.max(current.length, next.length);
  for (i = 0; i < max; i++) {
    if (current[i] !== next[i]) {
      break
    }
  }
  return {
    updated: next.slice(0, i),
    activated: next.slice(i),
    deactivated: current.slice(i)
  }
}

function extractGuards (
  records,
  name,
  bind,
  reverse
) {
  var guards = flatMapComponents(records, function (def, instance, match, key) {
    var guard = extractGuard(def, name);
    if (guard) {
      return Array.isArray(guard)
        ? guard.map(function (guard) { return bind(guard, instance, match, key); })
        : bind(guard, instance, match, key)
    }
  });
  return flatten(reverse ? guards.reverse() : guards)
}

function extractGuard (
  def,
  key
) {
  if (typeof def !== 'function') {
    // extend now so that global mixins are applied.
    def = _Vue.extend(def);
  }
  return def.options[key]
}

function extractLeaveGuards (deactivated) {
  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)
}

function extractUpdateHooks (updated) {
  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)
}

function bindGuard (guard, instance) {
  if (instance) {
    return function boundRouteGuard () {
      return guard.apply(instance, arguments)
    }
  }
}

function extractEnterGuards (
  activated
) {
  return extractGuards(
    activated,
    'beforeRouteEnter',
    function (guard, _, match, key) {
      return bindEnterGuard(guard, match, key)
    }
  )
}

function bindEnterGuard (
  guard,
  match,
  key
) {
  return function routeEnterGuard (to, from, next) {
    return guard(to, from, function (cb) {
      if (typeof cb === 'function') {
        if (!match.enteredCbs[key]) {
          match.enteredCbs[key] = [];
        }
        match.enteredCbs[key].push(cb);
      }
      next(cb);
    })
  }
}

/*  */

var HTML5History = /*@__PURE__*/(function (History) {
  function HTML5History (router, base) {
    History.call(this, router, base);

    this._startLocation = getLocation(this.base);
  }

  if ( History ) HTML5History.__proto__ = History;
  HTML5History.prototype = Object.create( History && History.prototype );
  HTML5History.prototype.constructor = HTML5History;

  HTML5History.prototype.setupListeners = function setupListeners () {
    var this$1$1 = this;

    if (this.listeners.length > 0) {
      return
    }

    var router = this.router;
    var expectScroll = router.options.scrollBehavior;
    var supportsScroll = supportsPushState && expectScroll;

    if (supportsScroll) {
      this.listeners.push(setupScroll());
    }

    var handleRoutingEvent = function () {
      var current = this$1$1.current;

      // Avoiding first `popstate` event dispatched in some browsers but first
      // history route not updated since async guard at the same time.
      var location = getLocation(this$1$1.base);
      if (this$1$1.current === START && location === this$1$1._startLocation) {
        return
      }

      this$1$1.transitionTo(location, function (route) {
        if (supportsScroll) {
          handleScroll(router, route, current, true);
        }
      });
    };
    window.addEventListener('popstate', handleRoutingEvent);
    this.listeners.push(function () {
      window.removeEventListener('popstate', handleRoutingEvent);
    });
  };

  HTML5History.prototype.go = function go (n) {
    window.history.go(n);
  };

  HTML5History.prototype.push = function push (location, onComplete, onAbort) {
    var this$1$1 = this;

    var ref = this;
    var fromRoute = ref.current;
    this.transitionTo(location, function (route) {
      pushState(cleanPath(this$1$1.base + route.fullPath));
      handleScroll(this$1$1.router, route, fromRoute, false);
      onComplete && onComplete(route);
    }, onAbort);
  };

  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {
    var this$1$1 = this;

    var ref = this;
    var fromRoute = ref.current;
    this.transitionTo(location, function (route) {
      replaceState(cleanPath(this$1$1.base + route.fullPath));
      handleScroll(this$1$1.router, route, fromRoute, false);
      onComplete && onComplete(route);
    }, onAbort);
  };

  HTML5History.prototype.ensureURL = function ensureURL (push) {
    if (getLocation(this.base) !== this.current.fullPath) {
      var current = cleanPath(this.base + this.current.fullPath);
      push ? pushState(current) : replaceState(current);
    }
  };

  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {
    return getLocation(this.base)
  };

  return HTML5History;
}(History));

function getLocation (base) {
  var path = window.location.pathname;
  var pathLowerCase = path.toLowerCase();
  var baseLowerCase = base.toLowerCase();
  // base="/a" shouldn't turn path="/app" into "/a/pp"
  // https://github.com/vuejs/vue-router/issues/3555
  // so we ensure the trailing slash in the base
  if (base && ((pathLowerCase === baseLowerCase) ||
    (pathLowerCase.indexOf(cleanPath(baseLowerCase + '/')) === 0))) {
    path = path.slice(base.length);
  }
  return (path || '/') + window.location.search + window.location.hash
}

/*  */

var HashHistory = /*@__PURE__*/(function (History) {
  function HashHistory (router, base, fallback) {
    History.call(this, router, base);
    // check history fallback deeplinking
    if (fallback && checkFallback(this.base)) {
      return
    }
    ensureSlash();
  }

  if ( History ) HashHistory.__proto__ = History;
  HashHistory.prototype = Object.create( History && History.prototype );
  HashHistory.prototype.constructor = HashHistory;

  // this is delayed until the app mounts
  // to avoid the hashchange listener being fired too early
  HashHistory.prototype.setupListeners = function setupListeners () {
    var this$1$1 = this;

    if (this.listeners.length > 0) {
      return
    }

    var router = this.router;
    var expectScroll = router.options.scrollBehavior;
    var supportsScroll = supportsPushState && expectScroll;

    if (supportsScroll) {
      this.listeners.push(setupScroll());
    }

    var handleRoutingEvent = function () {
      var current = this$1$1.current;
      if (!ensureSlash()) {
        return
      }
      this$1$1.transitionTo(getHash(), function (route) {
        if (supportsScroll) {
          handleScroll(this$1$1.router, route, current, true);
        }
        if (!supportsPushState) {
          replaceHash(route.fullPath);
        }
      });
    };
    var eventType = supportsPushState ? 'popstate' : 'hashchange';
    window.addEventListener(
      eventType,
      handleRoutingEvent
    );
    this.listeners.push(function () {
      window.removeEventListener(eventType, handleRoutingEvent);
    });
  };

  HashHistory.prototype.push = function push (location, onComplete, onAbort) {
    var this$1$1 = this;

    var ref = this;
    var fromRoute = ref.current;
    this.transitionTo(
      location,
      function (route) {
        pushHash(route.fullPath);
        handleScroll(this$1$1.router, route, fromRoute, false);
        onComplete && onComplete(route);
      },
      onAbort
    );
  };

  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {
    var this$1$1 = this;

    var ref = this;
    var fromRoute = ref.current;
    this.transitionTo(
      location,
      function (route) {
        replaceHash(route.fullPath);
        handleScroll(this$1$1.router, route, fromRoute, false);
        onComplete && onComplete(route);
      },
      onAbort
    );
  };

  HashHistory.prototype.go = function go (n) {
    window.history.go(n);
  };

  HashHistory.prototype.ensureURL = function ensureURL (push) {
    var current = this.current.fullPath;
    if (getHash() !== current) {
      push ? pushHash(current) : replaceHash(current);
    }
  };

  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {
    return getHash()
  };

  return HashHistory;
}(History));

function checkFallback (base) {
  var location = getLocation(base);
  if (!/^\/#/.test(location)) {
    window.location.replace(cleanPath(base + '/#' + location));
    return true
  }
}

function ensureSlash () {
  var path = getHash();
  if (path.charAt(0) === '/') {
    return true
  }
  replaceHash('/' + path);
  return false
}

function getHash () {
  // We can't use window.location.hash here because it's not
  // consistent across browsers - Firefox will pre-decode it!
  var href = window.location.href;
  var index = href.indexOf('#');
  // empty path
  if (index < 0) { return '' }

  href = href.slice(index + 1);

  return href
}

function getUrl (path) {
  var href = window.location.href;
  var i = href.indexOf('#');
  var base = i >= 0 ? href.slice(0, i) : href;
  return (base + "#" + path)
}

function pushHash (path) {
  if (supportsPushState) {
    pushState(getUrl(path));
  } else {
    window.location.hash = path;
  }
}

function replaceHash (path) {
  if (supportsPushState) {
    replaceState(getUrl(path));
  } else {
    window.location.replace(getUrl(path));
  }
}

/*  */

var AbstractHistory = /*@__PURE__*/(function (History) {
  function AbstractHistory (router, base) {
    History.call(this, router, base);
    this.stack = [];
    this.index = -1;
  }

  if ( History ) AbstractHistory.__proto__ = History;
  AbstractHistory.prototype = Object.create( History && History.prototype );
  AbstractHistory.prototype.constructor = AbstractHistory;

  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {
    var this$1$1 = this;

    this.transitionTo(
      location,
      function (route) {
        this$1$1.stack = this$1$1.stack.slice(0, this$1$1.index + 1).concat(route);
        this$1$1.index++;
        onComplete && onComplete(route);
      },
      onAbort
    );
  };

  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {
    var this$1$1 = this;

    this.transitionTo(
      location,
      function (route) {
        this$1$1.stack = this$1$1.stack.slice(0, this$1$1.index).concat(route);
        onComplete && onComplete(route);
      },
      onAbort
    );
  };

  AbstractHistory.prototype.go = function go (n) {
    var this$1$1 = this;

    var targetIndex = this.index + n;
    if (targetIndex < 0 || targetIndex >= this.stack.length) {
      return
    }
    var route = this.stack[targetIndex];
    this.confirmTransition(
      route,
      function () {
        var prev = this$1$1.current;
        this$1$1.index = targetIndex;
        this$1$1.updateRoute(route);
        this$1$1.router.afterHooks.forEach(function (hook) {
          hook && hook(route, prev);
        });
      },
      function (err) {
        if (isNavigationFailure(err, NavigationFailureType.duplicated)) {
          this$1$1.index = targetIndex;
        }
      }
    );
  };

  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {
    var current = this.stack[this.stack.length - 1];
    return current ? current.fullPath : '/'
  };

  AbstractHistory.prototype.ensureURL = function ensureURL () {
    // noop
  };

  return AbstractHistory;
}(History));

/*  */



var VueRouter = function VueRouter (options) {
  if ( options === void 0 ) options = {};

  if (false) {}
  this.app = null;
  this.apps = [];
  this.options = options;
  this.beforeHooks = [];
  this.resolveHooks = [];
  this.afterHooks = [];
  this.matcher = createMatcher(options.routes || [], this);

  var mode = options.mode || 'hash';
  this.fallback =
    mode === 'history' && !supportsPushState && options.fallback !== false;
  if (this.fallback) {
    mode = 'hash';
  }
  if (!inBrowser) {
    mode = 'abstract';
  }
  this.mode = mode;

  switch (mode) {
    case 'history':
      this.history = new HTML5History(this, options.base);
      break
    case 'hash':
      this.history = new HashHistory(this, options.base, this.fallback);
      break
    case 'abstract':
      this.history = new AbstractHistory(this, options.base);
      break
    default:
      if (false) {}
  }
};

var prototypeAccessors = { currentRoute: { configurable: true } };

VueRouter.prototype.match = function match (raw, current, redirectedFrom) {
  return this.matcher.match(raw, current, redirectedFrom)
};

prototypeAccessors.currentRoute.get = function () {
  return this.history && this.history.current
};

VueRouter.prototype.init = function init (app /* Vue component instance */) {
    var this$1$1 = this;

   false &&
    0;

  this.apps.push(app);

  // set up app destroyed handler
  // https://github.com/vuejs/vue-router/issues/2639
  app.$once('hook:destroyed', function () {
    // clean out app from this.apps array once destroyed
    var index = this$1$1.apps.indexOf(app);
    if (index > -1) { this$1$1.apps.splice(index, 1); }
    // ensure we still have a main app or null if no apps
    // we do not release the router so it can be reused
    if (this$1$1.app === app) { this$1$1.app = this$1$1.apps[0] || null; }

    if (!this$1$1.app) { this$1$1.history.teardown(); }
  });

  // main app previously initialized
  // return as we don't need to set up new history listener
  if (this.app) {
    return
  }

  this.app = app;

  var history = this.history;

  if (history instanceof HTML5History || history instanceof HashHistory) {
    var handleInitialScroll = function (routeOrError) {
      var from = history.current;
      var expectScroll = this$1$1.options.scrollBehavior;
      var supportsScroll = supportsPushState && expectScroll;

      if (supportsScroll && 'fullPath' in routeOrError) {
        handleScroll(this$1$1, routeOrError, from, false);
      }
    };
    var setupListeners = function (routeOrError) {
      history.setupListeners();
      handleInitialScroll(routeOrError);
    };
    history.transitionTo(
      history.getCurrentLocation(),
      setupListeners,
      setupListeners
    );
  }

  history.listen(function (route) {
    this$1$1.apps.forEach(function (app) {
      app._route = route;
    });
  });
};

VueRouter.prototype.beforeEach = function beforeEach (fn) {
  return registerHook(this.beforeHooks, fn)
};

VueRouter.prototype.beforeResolve = function beforeResolve (fn) {
  return registerHook(this.resolveHooks, fn)
};

VueRouter.prototype.afterEach = function afterEach (fn) {
  return registerHook(this.afterHooks, fn)
};

VueRouter.prototype.onReady = function onReady (cb, errorCb) {
  this.history.onReady(cb, errorCb);
};

VueRouter.prototype.onError = function onError (errorCb) {
  this.history.onError(errorCb);
};

VueRouter.prototype.push = function push (location, onComplete, onAbort) {
    var this$1$1 = this;

  // $flow-disable-line
  if (!onComplete && !onAbort && typeof Promise !== 'undefined') {
    return new Promise(function (resolve, reject) {
      this$1$1.history.push(location, resolve, reject);
    })
  } else {
    this.history.push(location, onComplete, onAbort);
  }
};

VueRouter.prototype.replace = function replace (location, onComplete, onAbort) {
    var this$1$1 = this;

  // $flow-disable-line
  if (!onComplete && !onAbort && typeof Promise !== 'undefined') {
    return new Promise(function (resolve, reject) {
      this$1$1.history.replace(location, resolve, reject);
    })
  } else {
    this.history.replace(location, onComplete, onAbort);
  }
};

VueRouter.prototype.go = function go (n) {
  this.history.go(n);
};

VueRouter.prototype.back = function back () {
  this.go(-1);
};

VueRouter.prototype.forward = function forward () {
  this.go(1);
};

VueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {
  var route = to
    ? to.matched
      ? to
      : this.resolve(to).route
    : this.currentRoute;
  if (!route) {
    return []
  }
  return [].concat.apply(
    [],
    route.matched.map(function (m) {
      return Object.keys(m.components).map(function (key) {
        return m.components[key]
      })
    })
  )
};

VueRouter.prototype.resolve = function resolve (
  to,
  current,
  append
) {
  current = current || this.history.current;
  var location = normalizeLocation(to, current, append, this);
  var route = this.match(location, current);
  var fullPath = route.redirectedFrom || route.fullPath;
  var base = this.history.base;
  var href = createHref(base, fullPath, this.mode);
  return {
    location: location,
    route: route,
    href: href,
    // for backwards compat
    normalizedTo: location,
    resolved: route
  }
};

VueRouter.prototype.getRoutes = function getRoutes () {
  return this.matcher.getRoutes()
};

VueRouter.prototype.addRoute = function addRoute (parentOrRoute, route) {
  this.matcher.addRoute(parentOrRoute, route);
  if (this.history.current !== START) {
    this.history.transitionTo(this.history.getCurrentLocation());
  }
};

VueRouter.prototype.addRoutes = function addRoutes (routes) {
  if (false) {}
  this.matcher.addRoutes(routes);
  if (this.history.current !== START) {
    this.history.transitionTo(this.history.getCurrentLocation());
  }
};

Object.defineProperties( VueRouter.prototype, prototypeAccessors );

var VueRouter$1 = VueRouter;

function registerHook (list, fn) {
  list.push(fn);
  return function () {
    var i = list.indexOf(fn);
    if (i > -1) { list.splice(i, 1); }
  }
}

function createHref (base, fullPath, mode) {
  var path = mode === 'hash' ? '#' + fullPath : fullPath;
  return base ? cleanPath(base + '/' + path) : path
}

// We cannot remove this as it would be a breaking change
VueRouter.install = install;
VueRouter.version = '3.6.5';
VueRouter.isNavigationFailure = isNavigationFailure;
VueRouter.NavigationFailureType = NavigationFailureType;
VueRouter.START_LOCATION = START;

if (inBrowser && window.Vue) {
  window.Vue.use(VueRouter);
}

var version = '3.6.5';



;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricDemoHome.vue?vue&type=template&id=f402fe18
var RubricDemoHomevue_type_template_id_f402fe18_render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:"demo-page",attrs:{"id":"app"}},[_c('h1',[_vm._v("Rubric Demo Page")]),_c('router-link',{staticClass:"rubric-demo-item",attrs:{"to":{ name: 'Builder' }}},[_c('i',{staticClass:"fa fa-institution"}),_vm._v("Builder")]),_c('router-link',{staticClass:"rubric-demo-item",attrs:{"to":{ name: 'Preview' }}},[_c('i',{staticClass:"fa fa-institution"}),_vm._v("Preview")]),_c('router-link',{staticClass:"rubric-demo-item",attrs:{"to":{ name: 'Entry' }}},[_c('i',{staticClass:"fa fa-edit"}),_vm._v("Entry")]),_c('router-link',{staticClass:"rubric-demo-item",attrs:{"to":{ name: 'Results' }}},[_c('i',{staticClass:"fa fa-calculator"}),_vm._v("Results")])],1)
}
var RubricDemoHomevue_type_template_id_f402fe18_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-66.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-66.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-66.use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-66.use[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricDemoHome.vue?vue&type=style&index=0&id=f402fe18&prod&lang=scss
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Views/RubricDemoHome.vue?vue&type=style&index=0&id=f402fe18&prod&lang=scss

;// CONCATENATED MODULE: ./src/Views/RubricDemoHome.vue

var script = {}
;


/* normalize component */

var RubricDemoHome_component = normalizeComponent(
  script,
  RubricDemoHomevue_type_template_id_f402fe18_render,
  RubricDemoHomevue_type_template_id_f402fe18_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var RubricDemoHome = (RubricDemoHome_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricBuilderDemoWrapper.vue?vue&type=template&id=d9a1de18
var RubricBuilderDemoWrappervue_type_template_id_d9a1de18_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticStyle:{"margin":"-20px 0"}},[_c('rubric-builder',{attrs:{"api-config":_vm.config,"version":null,"rubric-data":_vm.store.rubricData,"ui-state":_vm.store.uiState.builder},on:{"rubric-updated":_vm.onRubricUpdated}})],1)
}
var RubricBuilderDemoWrappervue_type_template_id_d9a1de18_staticRenderFns = []


;// CONCATENATED MODULE: ./src/store.ts
/* harmony default export */ var store = ({
    uiState: {
        builder: {
            showDefaultFeedbackFields: false,
            showSplitView: false,
            selectedCriterium: '',
            selectedClusterView1: '',
            selectedClusterView2: ''
        },
        preview: {
            showDefaultFeedbackFields: false
        },
        entry: {
            showDefaultFeedbackFields: false,
            options: {
                isDemo: true,
                evaluator: null,
            }
        }
    },
    rubricData: {
        "id": "t9hnqokwvenfdgskc7ykas",
        "useScores": true,
        "useRelativeWeights": false,
        "title": "Holistisch scoren",
        "levels": [
            {
                "id": "ll1mno0a18hjedwy6w3jt",
                "title": "Overstijgt de verwachtingen",
                "description": "",
                "score": 10,
                "is_default": false
            },
            {
                "id": "icoz2ha4bahqvqfi71slz",
                "title": "Voldoet aan de verwachtingen",
                "description": "",
                "score": 7,
                "is_default": false
            },
            {
                "id": "ewl5t7raruutqf4gudx15",
                "title": "Voldoet bijna aan de verwachtingen",
                "description": "",
                "score": 4,
                "is_default": true
            },
            {
                "id": "fcd66dsoj78g8jq0diks3b",
                "title": "Voldoet niet aan de verwachtingen",
                "description": "",
                "score": 0,
                "is_default": false
            }
        ],
        "clusters": [
            {
                "id": "fbb3yazs9iaxc8zff4jurm",
                "title": "Holistisch scoren",
                "categories": [
                    {
                        "id": "r7z43w6cuzijn6782siusl",
                        "title": "",
                        "color": "#00943E",
                        "criteria": [
                            {
                                "id": "fufp9nyhm59tpv834p7s5",
                                "title": "Volledigheid antwoorden",
                                "weight": 80
                            },
                            {
                                "id": "yjz8854ozprzhr2hw45wup",
                                "title": "Onderbouwde mening",
                                "weight": 100
                            }
                        ]
                    }
                ],
                "criteria": []
            },
            {
                "id": "v6ptmrbfp829l5wir7y1c",
                "title": "Professioneel Communiceren",
                "categories": [
                    {
                        "id": "qkpojkdo7195jmdwgw29sb",
                        "title": "De student kan de basisprincipes van e-mail en social media policy in het Nederlands integreren in zijn of haar professionele communicatie.",
                        "color": "#E76F01",
                        "criteria": [
                            {
                                "id": "9ec44j2au3v1nl9sigksrq",
                                "title": "Een professionele, doelgerichte en duidelijke e-mail opstellen.",
                                "weight": 100
                            },
                            {
                                "id": "xzcorbibce20cm5g54xemi",
                                "title": "De meest geschikte sociale media selecteren in een beroepscontext.",
                                "weight": 100
                            },
                            {
                                "id": "aas2bl49lrnfl4i1m7uwho",
                                "title": "Een kritische analyse maken van de e-mail en social media policy van bedrijven en organisaties.",
                                "weight": 100
                            },
                            {
                                "id": "b6fxxz8q2nq21595ncj6od",
                                "title": "De student kan taalkundig, stilistisch en lexicaal correct, zakelijk en helder formuleren.",
                                "weight": 100
                            }
                        ]
                    }
                ],
                "criteria": []
            },
            {
                "id": "iltm24mgoemsoc8okbny",
                "title": "Bedrijfseconomisch handelen",
                "categories": [
                    {
                        "id": "iuxmxxycunsonrldrk16m",
                        "title": "De student kan de normen van het bedrijf of de organisatie, de beroepsdeontologie en de maatschappelijke normen toepassen.",
                        "color": "",
                        "criteria": [
                            {
                                "id": "xkisqg35b4897yv42v0uwh",
                                "title": "Een kritische analyse maken van een klant- en servicegerichte aanpak. ",
                                "weight": 100
                            },
                            {
                                "id": "npq74gmgw7gykpvuyzai",
                                "title": "De beroepsmogelijkheden (specifiek voor de afstudeerrichting) omschrijven.",
                                "weight": 100
                            }
                        ]
                    },
                    {
                        "id": "2jqipotb8yaw5cqh7nfvun",
                        "title": "De student kan reflecteren over het beroepenveld, de klanten binnen de professionele werking en de servicegerichtheid.",
                        "color": "",
                        "criteria": [
                            {
                                "id": "m6aub4lk7xb3j3njnqf63c",
                                "title": "Waarden en normen identificeren.",
                                "weight": 100
                            },
                            {
                                "id": "0ws20lmnw5kk56h4mxnque",
                                "title": "Persoonlijke waarden en normen aan die van een bedrijf of organisatie aftoetsen.",
                                "weight": 100
                            },
                            {
                                "id": "6h2a07o2caeqeypvf1n8nj",
                                "title": "Privacywetgeving, auteursrecht, portretrecht, beroepsgeheim, discretieplicht en vertrouwelijke gegevens van medewerkers en klanten of patiënten respecteren.",
                                "weight": 100
                            }
                        ]
                    }
                ],
                "criteria": []
            },
            {
                "id": "0niw2sttq8erqq7w2zmpuah",
                "title": "Onderzoekend handelen",
                "categories": [
                    {
                        "id": "nbi1y48rvvzl3pszo33ko",
                        "title": "De student kan reflecteren over creativiteit",
                        "color": "",
                        "criteria": [
                            {
                                "id": "6m1j1p07g5yb4jn8rxfds",
                                "title": "Anders durven denken.",
                                "weight": 100
                            },
                            {
                                "id": "0ckexyst4tadt2vppdqhbct",
                                "title": "De adviezen en uitgewerkte alternatieven getuigen van inventiviteit en creativiteit.",
                                "weight": 100
                            }
                        ]
                    },
                    {
                        "id": "4rrpq53r2zebnssolx9io6",
                        "title": "De student kan databanken, ook anderstalige, hanteren bij onderzoek.",
                        "color": "",
                        "criteria": [
                            {
                                "id": "hwdfiaeimmqk6tg4xv9d4",
                                "title": "De meest geschikte databanken raadplegen.",
                                "weight": 100
                            },
                            {
                                "id": "odvm3c1nde9gslxuas5q1m",
                                "title": "De meest efficiënte zoekstrategieën toepassen.",
                                "weight": 100
                            }
                        ]
                    },
                    {
                        "id": "nlww6dbqzgi2a2u6lv7rk",
                        "title": "De student kan de gepaste wetenschappelijke bronnen selecteren in het Nederlands, Frans en Engels.",
                        "color": "",
                        "criteria": [
                            {
                                "id": "a9rm6of2j6ox13skroxg6",
                                "title": "Bronnen correct analyseren en interpreteren.",
                                "weight": 100
                            },
                            {
                                "id": "7yh29o4t4zbuwdezsqiy08",
                                "title": "De geraadpleegde bronnen kritisch integreren tot een gestructureerd en samenhangend verhaal.",
                                "weight": 100
                            }
                        ]
                    },
                    {
                        "id": "a57a1gng3gnp7pwunif49",
                        "title": "De student kan correct bronnen refereren.",
                        "color": "",
                        "criteria": [
                            {
                                "id": "3bypc8f2th99zqdvfl5r9",
                                "title": "Gebruikmaken van refereertools.",
                                "weight": 100
                            },
                            {
                                "id": "tua60ec3j5oas4ki7sbkqk",
                                "title": "Bronnen in de lopende tekst en in de bronnenlijst opnemen volgens de APA 6th-richtlijnen (American Psychological Association).",
                                "weight": 100
                            }
                        ]
                    },
                    {
                        "id": "n0r6vtcquw1q87k9td85h",
                        "title": "De student kan zijn of haar visie met diepgaande argumenten onderbouwen.",
                        "color": "",
                        "criteria": []
                    }
                ],
                "criteria": []
            }
        ],
        "choices": [
            {
                "selected": false,
                "feedback": "Student geeft steeds volledige en betrouwbare informatie. Alle informatie is opgenomen in de antwoorden.",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "fufp9nyhm59tpv834p7s5",
                "level_id": "ll1mno0a18hjedwy6w3jt"
            },
            {
                "selected": false,
                "feedback": "Student geeft vaker wel dan niet volledige en betrouwbare informatie. Bijna alle informatie is opgenomen in de antwoorden.",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "fufp9nyhm59tpv834p7s5",
                "level_id": "icoz2ha4bahqvqfi71slz"
            },
            {
                "selected": false,
                "feedback": "Student geeft vrij vaak onvolledige en twijfelachtige informatie, die vragen oproept. Niet alle informatie is opgenomen in de antwoorden.",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "fufp9nyhm59tpv834p7s5",
                "level_id": "ewl5t7raruutqf4gudx15"
            },
            {
                "selected": false,
                "feedback": "Student geeft zo goed als altijd onvolledige en twijfelachtige informatie die vragen oproept. De antwoorden bevatten amper informatie.",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "fufp9nyhm59tpv834p7s5",
                "level_id": "fcd66dsoj78g8jq0diks3b"
            },
            {
                "selected": false,
                "feedback": "De student geeft zijn mening onderbouwd en overtuigend.",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "yjz8854ozprzhr2hw45wup",
                "level_id": "ll1mno0a18hjedwy6w3jt"
            },
            {
                "selected": false,
                "feedback": "De student geeft zijn mening, maar onderbouwt deze niet altijd even goed.",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "yjz8854ozprzhr2hw45wup",
                "level_id": "icoz2ha4bahqvqfi71slz"
            },
            {
                "selected": false,
                "feedback": "De student geeft zijn mening, maar neemt daarbij vooral de mening over van anderen (bv. filosofen die aan bod kwamen, medestudenten) of onderbouwt deze niet.",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "yjz8854ozprzhr2hw45wup",
                "level_id": "ewl5t7raruutqf4gudx15"
            },
            {
                "selected": false,
                "feedback": "De student geeft geen eigen mening.",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "yjz8854ozprzhr2hw45wup",
                "level_id": "fcd66dsoj78g8jq0diks3b"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "9ec44j2au3v1nl9sigksrq",
                "level_id": "ll1mno0a18hjedwy6w3jt"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "9ec44j2au3v1nl9sigksrq",
                "level_id": "icoz2ha4bahqvqfi71slz"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "9ec44j2au3v1nl9sigksrq",
                "level_id": "ewl5t7raruutqf4gudx15"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "9ec44j2au3v1nl9sigksrq",
                "level_id": "fcd66dsoj78g8jq0diks3b"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "xzcorbibce20cm5g54xemi",
                "level_id": "ll1mno0a18hjedwy6w3jt"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "xzcorbibce20cm5g54xemi",
                "level_id": "icoz2ha4bahqvqfi71slz"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "xzcorbibce20cm5g54xemi",
                "level_id": "ewl5t7raruutqf4gudx15"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "xzcorbibce20cm5g54xemi",
                "level_id": "fcd66dsoj78g8jq0diks3b"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "aas2bl49lrnfl4i1m7uwho",
                "level_id": "ll1mno0a18hjedwy6w3jt"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "aas2bl49lrnfl4i1m7uwho",
                "level_id": "icoz2ha4bahqvqfi71slz"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "aas2bl49lrnfl4i1m7uwho",
                "level_id": "ewl5t7raruutqf4gudx15"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "aas2bl49lrnfl4i1m7uwho",
                "level_id": "fcd66dsoj78g8jq0diks3b"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "b6fxxz8q2nq21595ncj6od",
                "level_id": "ll1mno0a18hjedwy6w3jt"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "b6fxxz8q2nq21595ncj6od",
                "level_id": "icoz2ha4bahqvqfi71slz"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "b6fxxz8q2nq21595ncj6od",
                "level_id": "ewl5t7raruutqf4gudx15"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "b6fxxz8q2nq21595ncj6od",
                "level_id": "fcd66dsoj78g8jq0diks3b"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "m6aub4lk7xb3j3njnqf63c",
                "level_id": "ll1mno0a18hjedwy6w3jt"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "m6aub4lk7xb3j3njnqf63c",
                "level_id": "icoz2ha4bahqvqfi71slz"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "m6aub4lk7xb3j3njnqf63c",
                "level_id": "ewl5t7raruutqf4gudx15"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "m6aub4lk7xb3j3njnqf63c",
                "level_id": "fcd66dsoj78g8jq0diks3b"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "0ws20lmnw5kk56h4mxnque",
                "level_id": "ll1mno0a18hjedwy6w3jt"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "0ws20lmnw5kk56h4mxnque",
                "level_id": "icoz2ha4bahqvqfi71slz"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "0ws20lmnw5kk56h4mxnque",
                "level_id": "ewl5t7raruutqf4gudx15"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "0ws20lmnw5kk56h4mxnque",
                "level_id": "fcd66dsoj78g8jq0diks3b"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "6h2a07o2caeqeypvf1n8nj",
                "level_id": "ll1mno0a18hjedwy6w3jt"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "6h2a07o2caeqeypvf1n8nj",
                "level_id": "icoz2ha4bahqvqfi71slz"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "6h2a07o2caeqeypvf1n8nj",
                "level_id": "ewl5t7raruutqf4gudx15"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "6h2a07o2caeqeypvf1n8nj",
                "level_id": "fcd66dsoj78g8jq0diks3b"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "xkisqg35b4897yv42v0uwh",
                "level_id": "ll1mno0a18hjedwy6w3jt"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "xkisqg35b4897yv42v0uwh",
                "level_id": "icoz2ha4bahqvqfi71slz"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "xkisqg35b4897yv42v0uwh",
                "level_id": "ewl5t7raruutqf4gudx15"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "xkisqg35b4897yv42v0uwh",
                "level_id": "fcd66dsoj78g8jq0diks3b"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "npq74gmgw7gykpvuyzai",
                "level_id": "ll1mno0a18hjedwy6w3jt"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "npq74gmgw7gykpvuyzai",
                "level_id": "icoz2ha4bahqvqfi71slz"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "npq74gmgw7gykpvuyzai",
                "level_id": "ewl5t7raruutqf4gudx15"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "npq74gmgw7gykpvuyzai",
                "level_id": "fcd66dsoj78g8jq0diks3b"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "6m1j1p07g5yb4jn8rxfds",
                "level_id": "ll1mno0a18hjedwy6w3jt"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "6m1j1p07g5yb4jn8rxfds",
                "level_id": "icoz2ha4bahqvqfi71slz"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "6m1j1p07g5yb4jn8rxfds",
                "level_id": "ewl5t7raruutqf4gudx15"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "6m1j1p07g5yb4jn8rxfds",
                "level_id": "fcd66dsoj78g8jq0diks3b"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "0ckexyst4tadt2vppdqhbct",
                "level_id": "ll1mno0a18hjedwy6w3jt"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "0ckexyst4tadt2vppdqhbct",
                "level_id": "icoz2ha4bahqvqfi71slz"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "0ckexyst4tadt2vppdqhbct",
                "level_id": "ewl5t7raruutqf4gudx15"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "0ckexyst4tadt2vppdqhbct",
                "level_id": "fcd66dsoj78g8jq0diks3b"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "hwdfiaeimmqk6tg4xv9d4",
                "level_id": "ll1mno0a18hjedwy6w3jt"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "hwdfiaeimmqk6tg4xv9d4",
                "level_id": "icoz2ha4bahqvqfi71slz"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "hwdfiaeimmqk6tg4xv9d4",
                "level_id": "ewl5t7raruutqf4gudx15"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "hwdfiaeimmqk6tg4xv9d4",
                "level_id": "fcd66dsoj78g8jq0diks3b"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "odvm3c1nde9gslxuas5q1m",
                "level_id": "ll1mno0a18hjedwy6w3jt"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "odvm3c1nde9gslxuas5q1m",
                "level_id": "icoz2ha4bahqvqfi71slz"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "odvm3c1nde9gslxuas5q1m",
                "level_id": "ewl5t7raruutqf4gudx15"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "odvm3c1nde9gslxuas5q1m",
                "level_id": "fcd66dsoj78g8jq0diks3b"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "a9rm6of2j6ox13skroxg6",
                "level_id": "ll1mno0a18hjedwy6w3jt"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "a9rm6of2j6ox13skroxg6",
                "level_id": "icoz2ha4bahqvqfi71slz"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "a9rm6of2j6ox13skroxg6",
                "level_id": "ewl5t7raruutqf4gudx15"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "a9rm6of2j6ox13skroxg6",
                "level_id": "fcd66dsoj78g8jq0diks3b"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "7yh29o4t4zbuwdezsqiy08",
                "level_id": "ll1mno0a18hjedwy6w3jt"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "7yh29o4t4zbuwdezsqiy08",
                "level_id": "icoz2ha4bahqvqfi71slz"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "7yh29o4t4zbuwdezsqiy08",
                "level_id": "ewl5t7raruutqf4gudx15"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "7yh29o4t4zbuwdezsqiy08",
                "level_id": "fcd66dsoj78g8jq0diks3b"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "3bypc8f2th99zqdvfl5r9",
                "level_id": "ll1mno0a18hjedwy6w3jt"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "3bypc8f2th99zqdvfl5r9",
                "level_id": "icoz2ha4bahqvqfi71slz"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "3bypc8f2th99zqdvfl5r9",
                "level_id": "ewl5t7raruutqf4gudx15"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "3bypc8f2th99zqdvfl5r9",
                "level_id": "fcd66dsoj78g8jq0diks3b"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "tua60ec3j5oas4ki7sbkqk",
                "level_id": "ll1mno0a18hjedwy6w3jt"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "tua60ec3j5oas4ki7sbkqk",
                "level_id": "icoz2ha4bahqvqfi71slz"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "tua60ec3j5oas4ki7sbkqk",
                "level_id": "ewl5t7raruutqf4gudx15"
            },
            {
                "selected": false,
                "feedback": "",
                "has_fixed_score": false,
                "fixed_score": 10,
                "criterium_id": "tua60ec3j5oas4ki7sbkqk",
                "level_id": "fcd66dsoj78g8jq0diks3b"
            }
        ]
    },
    rubricResults: {
        "evaluators": [
            { "userId": 0, "name": "Bob", "role": "student", "targetUserId": 0, "targetName": "Bob", "date": "2020-06-15T10:30:35+0200" },
            { "userId": 1, "name": "Alice", "role": "teacher", "targetUserId": 0, "targetName": "Bob", "date": "2020-06-17T13:25:00+0200" },
            { "userId": 2, "name": "Fred", "role": "coach", "targetUserId": 0, "targetName": "Bob", "date": "2020-06-17T11:05:00+0200" }
        ],
        "evaluations": {
            0: [
                { "treeNodeId": "fufp9nyhm59tpv834p7s5", "levelId": "ll1mno0a18hjedwy6w3jt", "feedback": "Ik vond het best moeilijk maar uiteindelijk lukte het wel." },
                { "treeNodeId": "yjz8854ozprzhr2hw45wup", "levelId": "ll1mno0a18hjedwy6w3jt", "feedback": "" },
                { "treeNodeId": "xzcorbibce20cm5g54xemi", "levelId": "icoz2ha4bahqvqfi71slz", "feedback": "" },
                { "treeNodeId": "aas2bl49lrnfl4i1m7uwho", "levelId": "icoz2ha4bahqvqfi71slz", "feedback": "" },
                { "treeNodeId": "9ec44j2au3v1nl9sigksrq", "levelId": "icoz2ha4bahqvqfi71slz", "feedback": "" }
            ],
            1: [
                { "treeNodeId": "fufp9nyhm59tpv834p7s5", "levelId": "ll1mno0a18hjedwy6w3jt", "feedback": "Uitstekend!" },
                { "treeNodeId": "yjz8854ozprzhr2hw45wup", "levelId": "ll1mno0a18hjedwy6w3jt", "feedback": "Flink gedaan!" },
                { "treeNodeId": "xzcorbibce20cm5g54xemi", "levelId": "ll1mno0a18hjedwy6w3jt", "feedback": "" },
                { "treeNodeId": "aas2bl49lrnfl4i1m7uwho", "levelId": "ewl5t7raruutqf4gudx15", "feedback": "Hier had ik toch meer van verwacht" },
                { "treeNodeId": "9ec44j2au3v1nl9sigksrq", "levelId": "icoz2ha4bahqvqfi71slz", "feedback": "" }
            ],
            2: []
        }
    }
});

;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricBuilderDemoWrapper.vue?vue&type=script&lang=ts




let RubricBuilderDemoWrapper = class RubricBuilderDemoWrapper extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    config = {
        'addLevelURL': 'https://test',
        'addTreeNodeURL': 'https://test',
        'deleteLevelURL': 'https://test',
        'deleteTreeNodeURL': 'https://test',
        'moveLevelURL': 'https://test',
        'moveTreeNodeURL': 'https://test',
        'updateChoiceURL': 'https://test',
        'updateLevelURL': 'https://test',
        'updateTreeNodeURL': 'https://test',
        'updateRubricURL': 'https://test',
        'resetRubricAbsoluteWeightsURL': 'https://test'
    };
    store = store;
    onRubricUpdated(rubric) {
        for (let member in this.store.rubricData) {
            delete this.store.rubricData[member];
        }
        Object.assign(this.store.rubricData, rubric.toJSON());
    }
};
RubricBuilderDemoWrapper = __decorate([
    vue_class_component_esm({
        components: {
            RubricBuilder: Views_RubricBuilder
        },
    })
], RubricBuilderDemoWrapper);
/* harmony default export */ var RubricBuilderDemoWrappervue_type_script_lang_ts = (RubricBuilderDemoWrapper);

;// CONCATENATED MODULE: ./src/Views/RubricBuilderDemoWrapper.vue?vue&type=script&lang=ts
 /* harmony default export */ var Views_RubricBuilderDemoWrappervue_type_script_lang_ts = (RubricBuilderDemoWrappervue_type_script_lang_ts); 
;// CONCATENATED MODULE: ./src/Views/RubricBuilderDemoWrapper.vue





/* normalize component */
;
var RubricBuilderDemoWrapper_component = normalizeComponent(
  Views_RubricBuilderDemoWrappervue_type_script_lang_ts,
  RubricBuilderDemoWrappervue_type_template_id_d9a1de18_render,
  RubricBuilderDemoWrappervue_type_template_id_d9a1de18_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Views_RubricBuilderDemoWrapper = (RubricBuilderDemoWrapper_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricPreviewDemoWrapper.vue?vue&type=template&id=307e3472
var RubricPreviewDemoWrappervue_type_template_id_307e3472_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticStyle:{"margin-top":"-20px"},attrs:{"id":"app"}},[(_vm.rubric)?_c('rubric-entry',{attrs:{"rubric":_vm.rubric,"preview":true,"ui-state":_vm.store.uiState.preview,"options":{ isPreviewDemo: true }}}):_vm._e()],1)
}
var RubricPreviewDemoWrappervue_type_template_id_307e3472_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricPreviewDemoWrapper.vue?vue&type=script&lang=ts





let RubricPreviewDemoWrapper = class RubricPreviewDemoWrapper extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    rubric;
    store = store;
    created() {
        this.rubric = Rubric.fromJSON(this.store.rubricData);
    }
};
RubricPreviewDemoWrapper = __decorate([
    vue_class_component_esm({
        components: {
            RubricEntry: Views_RubricEntry
        },
    })
], RubricPreviewDemoWrapper);
/* harmony default export */ var RubricPreviewDemoWrappervue_type_script_lang_ts = (RubricPreviewDemoWrapper);

;// CONCATENATED MODULE: ./src/Views/RubricPreviewDemoWrapper.vue?vue&type=script&lang=ts
 /* harmony default export */ var Views_RubricPreviewDemoWrappervue_type_script_lang_ts = (RubricPreviewDemoWrappervue_type_script_lang_ts); 
;// CONCATENATED MODULE: ./src/Views/RubricPreviewDemoWrapper.vue





/* normalize component */
;
var RubricPreviewDemoWrapper_component = normalizeComponent(
  Views_RubricPreviewDemoWrappervue_type_script_lang_ts,
  RubricPreviewDemoWrappervue_type_template_id_307e3472_render,
  RubricPreviewDemoWrappervue_type_template_id_307e3472_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Views_RubricPreviewDemoWrapper = (RubricPreviewDemoWrapper_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricEntryDemoWrapper.vue?vue&type=template&id=d561ccf2
var RubricEntryDemoWrappervue_type_template_id_d561ccf2_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticStyle:{"margin-top":"-20px"},attrs:{"id":"app"}},[_c('rubric-entry',{attrs:{"rubric":_vm.rubric,"rubric-evaluation":_vm.getRubricEvaluation(_vm.evaluator),"ui-state":_vm.store.uiState.entry,"options":_vm.store.uiState.entry.options},on:{"level-selected":_vm.selectLevel,"criterium-feedback-changed":_vm.updateFeedback},scopedSlots:_vm._u([{key:"demoEvaluator",fn:function(){return [_c('li',{staticClass:"app-tool-item"},[_vm._v("Demo: "),_c('select',{directives:[{name:"model",rawName:"v-model",value:(_vm.evaluator),expression:"evaluator"}],on:{"change":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.evaluator=$event.target.multiple ? $$selectedVal : $$selectedVal[0]},function($event){_vm.store.uiState.entry.options.evaluator = _vm.evaluator}]}},[_c('option',{attrs:{"disabled":""},domProps:{"value":null}},[_vm._v(_vm._s(_vm.$t('select')))]),_vm._l((_vm.store.rubricResults.evaluators),function(evaluator){return _c('option',{domProps:{"value":evaluator}},[_vm._v(_vm._s(evaluator.name))])})],2)])]},proxy:true}])})],1)
}
var RubricEntryDemoWrappervue_type_template_id_d561ccf2_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricEntryDemoWrapper.vue?vue&type=script&lang=ts







let RubricEntryDemoWrapper = class RubricEntryDemoWrapper extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    rubric;
    store = store;
    evaluatorEvaluations = [];
    evaluator = null;
    getTreeNodeEvaluations(evaluator) {
        if (!evaluator) {
            return [];
        }
        const evaluatorEvaluation = this.evaluatorEvaluations.find(evaluatorEvaluation => evaluatorEvaluation.evaluator.userId === evaluator.userId);
        if (!evaluatorEvaluation) {
            throw new Error(`No evaluation data found for evaluator: ${evaluator.name}`);
        }
        return evaluatorEvaluation.treeNodeEvaluations;
    }
    getRubricEvaluation(evaluator) {
        if (!this.rubric) {
            throw new Error('Rubric hasn\'t fully loaded yet');
        }
        return RubricEvaluation.fromEntry(this.rubric, this.getTreeNodeEvaluations(evaluator));
    }
    selectLevel(treeNode, level) {
        if (!this.evaluator) {
            return;
        }
        const evaluations = store.rubricResults.evaluations[this.evaluator.userId];
        const evaluation = evaluations.find((evaluation) => evaluation.treeNodeId === treeNode.id);
        if (!evaluation) {
            evaluations.push({ treeNodeId: treeNode.id, levelId: level.id, feedback: '' });
        }
        else {
            evaluation.levelId = level.id;
        }
    }
    updateFeedback(treeNode, feedback) {
        if (!this.evaluator) {
            return;
        }
        const evaluations = store.rubricResults.evaluations[this.evaluator.userId];
        const evaluation = evaluations.find((evaluation) => evaluation.treeNodeId === treeNode.id);
        if (!evaluation) {
            evaluations.push({ treeNodeId: treeNode.id, levelId: this.rubric.levels.find(level => level.isDefault)?.id || null, feedback });
        }
        else {
            evaluation.feedback = feedback;
        }
    }
    initData() {
        const rubric = this.rubric = Rubric.fromJSON(this.store.rubricData);
        const defaultLevel = rubric.levels.find(level => level.isDefault) || null;
        const rubricDefaultEvaluation = rubric.getAllTreeNodes().map(treeNode => ({ treeNode, level: treeNode instanceof Criterium ? defaultLevel : null, score: treeNode instanceof Criterium ? (defaultLevel ? rubric.getChoiceScore(treeNode, defaultLevel) : 0) : null, feedback: '' }));
        const evaluators = this.store.rubricResults.evaluators;
        this.evaluator = this.store.uiState.entry.options.evaluator;
        this.evaluatorEvaluations = evaluators.map((evaluator) => {
            const evaluations = this.store.rubricResults.evaluations[evaluator.userId];
            const treeNodeEvaluations = rubricDefaultEvaluation.map(defaultCriteriumEvaluation => {
                const storeEvaluation = evaluations.find((evaluation) => evaluation.treeNodeId === defaultCriteriumEvaluation.treeNode.id);
                if (storeEvaluation) {
                    const level = rubric.levels.find(level => level.id === storeEvaluation.levelId) || null;
                    const score = (level && defaultCriteriumEvaluation.treeNode instanceof Criterium) ? rubric.getChoiceScore(defaultCriteriumEvaluation.treeNode, level) : null;
                    return { treeNode: defaultCriteriumEvaluation.treeNode, level, score, feedback: storeEvaluation.feedback };
                }
                else {
                    return { ...defaultCriteriumEvaluation };
                }
            });
            return { evaluator, treeNodeEvaluations };
        });
    }
    created() {
        this.initData();
    }
};
RubricEntryDemoWrapper = __decorate([
    vue_class_component_esm({
        components: {
            RubricEntry: Views_RubricEntry
        },
    })
], RubricEntryDemoWrapper);
/* harmony default export */ var RubricEntryDemoWrappervue_type_script_lang_ts = (RubricEntryDemoWrapper);

;// CONCATENATED MODULE: ./src/Views/RubricEntryDemoWrapper.vue?vue&type=script&lang=ts
 /* harmony default export */ var Views_RubricEntryDemoWrappervue_type_script_lang_ts = (RubricEntryDemoWrappervue_type_script_lang_ts); 
// EXTERNAL MODULE: ../../../../../../../../node_modules/@intlify/vue-i18n-loader/lib/index.js!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricEntryDemoWrapper.vue?vue&type=custom&index=0&blockType=i18n
var RubricEntryDemoWrappervue_type_custom_index_0_blockType_i18n = __webpack_require__(657);
var RubricEntryDemoWrappervue_type_custom_index_0_blockType_i18n_default = /*#__PURE__*/__webpack_require__.n(RubricEntryDemoWrappervue_type_custom_index_0_blockType_i18n);
;// CONCATENATED MODULE: ./src/Views/RubricEntryDemoWrapper.vue?vue&type=custom&index=0&blockType=i18n
 /* harmony default export */ var Views_RubricEntryDemoWrappervue_type_custom_index_0_blockType_i18n = ((RubricEntryDemoWrappervue_type_custom_index_0_blockType_i18n_default())); 
;// CONCATENATED MODULE: ./src/Views/RubricEntryDemoWrapper.vue





/* normalize component */
;
var RubricEntryDemoWrapper_component = normalizeComponent(
  Views_RubricEntryDemoWrappervue_type_script_lang_ts,
  RubricEntryDemoWrappervue_type_template_id_d561ccf2_render,
  RubricEntryDemoWrappervue_type_template_id_d561ccf2_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* custom blocks */
;
if (typeof Views_RubricEntryDemoWrappervue_type_custom_index_0_blockType_i18n === 'function') Views_RubricEntryDemoWrappervue_type_custom_index_0_blockType_i18n(RubricEntryDemoWrapper_component)

/* harmony default export */ var Views_RubricEntryDemoWrapper = (RubricEntryDemoWrapper_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricResultDemoWrapper.vue?vue&type=template&id=70b89842
var RubricResultDemoWrappervue_type_template_id_70b89842_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticStyle:{"margin-top":"-20px"},attrs:{"id":"app"}},[(_vm.rubric)?_c('rubric-result',{attrs:{"rubric":_vm.rubric,"rubric-evaluation":_vm.rubricEvaluation,"options":{ isDemo: true }}}):_vm._e()],1)
}
var RubricResultDemoWrappervue_type_template_id_70b89842_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricResultDemoWrapper.vue?vue&type=script&lang=ts







let RubricResultDemoWrapper = class RubricResultDemoWrapper extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    rubric;
    store = store;
    rubricEvaluation;
    initData() {
        const rubric = Rubric.fromJSON(this.store.rubricData);
        const results = this.store.rubricResults;
        const evaluators = results.evaluators;
        const treeNodeResults = this.processTreeNodeResults(rubric, results, evaluators);
        this.rubric = rubric;
        this.rubricEvaluation = RubricEvaluation.fromResults(this.rubric, evaluators, treeNodeResults);
    }
    processTreeNodeResults(rubric, results, evaluators) {
        const defaultLevel = rubric.levels.find(level => level.isDefault) || null;
        return rubric.getAllTreeNodes().map(treeNode => {
            const defaultEvaluation = {
                treeNode,
                level: defaultLevel,
                score: treeNode instanceof Criterium ? (defaultLevel ? rubric.getChoiceScore(treeNode, defaultLevel) : 0) : null,
                feedback: ''
            };
            const evaluations = evaluators.map((evaluator) => {
                const treeNodeEvaluation = { ...defaultEvaluation };
                const evaluations = results.evaluations[evaluator.userId];
                const treeNodeEvaluationInput = evaluations.find((o) => o.treeNodeId === treeNode.id);
                if (treeNodeEvaluationInput) {
                    treeNodeEvaluation.feedback = treeNodeEvaluationInput.feedback;
                    const chosenLevel = rubric.levels.find(level => level.id === treeNodeEvaluationInput.levelId);
                    if (chosenLevel) {
                        treeNodeEvaluation.level = chosenLevel;
                        if (treeNode instanceof Criterium) {
                            treeNodeEvaluation.score = rubric.getChoiceScore(treeNode, chosenLevel);
                        }
                    }
                }
                return { evaluator, treeNodeEvaluation };
            });
            return { treeNode, evaluations };
        });
    }
    created() {
        this.initData();
    }
};
RubricResultDemoWrapper = __decorate([
    vue_class_component_esm({
        components: {
            RubricResult: Views_RubricResult
        },
    })
], RubricResultDemoWrapper);
/* harmony default export */ var RubricResultDemoWrappervue_type_script_lang_ts = (RubricResultDemoWrapper);

;// CONCATENATED MODULE: ./src/Views/RubricResultDemoWrapper.vue?vue&type=script&lang=ts
 /* harmony default export */ var Views_RubricResultDemoWrappervue_type_script_lang_ts = (RubricResultDemoWrappervue_type_script_lang_ts); 
;// CONCATENATED MODULE: ./src/Views/RubricResultDemoWrapper.vue





/* normalize component */
;
var RubricResultDemoWrapper_component = normalizeComponent(
  Views_RubricResultDemoWrappervue_type_script_lang_ts,
  RubricResultDemoWrappervue_type_template_id_70b89842_render,
  RubricResultDemoWrappervue_type_template_id_70b89842_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Views_RubricResultDemoWrapper = (RubricResultDemoWrapper_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Levels/LevelsView.vue?vue&type=template&id=78b088e8&scoped=true
var LevelsViewvue_type_template_id_78b088e8_scoped_true_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:"levels-view"},[_c('h1',{staticClass:"title"},[_vm._v(_vm._s(_vm.$t('levels')))]),_c('div',{staticClass:"controls"},[_c('div',[_c('on-off-switch',{staticClass:"switch",attrs:{"id":"use-scores-check","value":_vm.rubric.useScores,"on-value":_vm.$t('with-scores'),"off-value":_vm.$t('without-scores')},on:{"input":_vm.onUseScoresChanged}})],1),(_vm.rubric.useScores && !_vm.rubric.hasAbsoluteWeights)?_c('div',{staticClass:"m-mx"},[_c('button',{staticClass:"btn-check",class:{ 'checked': _vm.rubric.useRelativeWeights },attrs:{"aria-pressed":_vm.rubric.useRelativeWeights ? 'true' : 'false'},on:{"click":_vm.onUseRelativeWeightsChanged}},[_c('span',{staticClass:"lbl-check",attrs:{"tabindex":"-1"}},[_c('i',{staticClass:"btn-icon-check fa",attrs:{"aria-hidden":"true"}}),_vm._v(_vm._s(_vm.$t('weights-per-total')))])])]):_vm._e()]),_c('levels',{attrs:{"rubric":_vm.rubric,"data-connector":_vm.dataConnector}})],1)
}
var LevelsViewvue_type_template_id_78b088e8_scoped_true_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/OnOffSwitch.vue?vue&type=template&id=2aff4d20
var OnOffSwitchvue_type_template_id_2aff4d20_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:"onoffswitch"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.mValue),expression:"mValue"}],staticClass:"onoffswitch-checkbox",attrs:{"type":"checkbox","id":_vm.id},domProps:{"checked":Array.isArray(_vm.mValue)?_vm._i(_vm.mValue,null)>-1:(_vm.mValue)},on:{"change":function($event){var $$a=_vm.mValue,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.mValue=$$a.concat([$$v]))}else{$$i>-1&&(_vm.mValue=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.mValue=$$c}}}}),_c('label',{staticClass:"onoffswitch-label",attrs:{"for":_vm.id}},[_c('span',{staticClass:"onoffswitch-inner"},[_c('span',{staticClass:"onoffswitch-inner-before"},[_vm._v(_vm._s(_vm.onValue))]),_c('span',{staticClass:"onoffswitch-inner-after"},[_vm._v(_vm._s(_vm.offValue))])]),_c('span',{staticClass:"onoffswitch-switch"})])])
}
var OnOffSwitchvue_type_template_id_2aff4d20_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/OnOffSwitch.vue?vue&type=script&lang=ts


let OnOffSwitch = class OnOffSwitch extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    value;
    id;
    onValue;
    offValue;
    get mValue() {
        return this.value;
    }
    set mValue(val) {
        this.$emit('input', val);
    }
};
__decorate([
    Prop({ type: Boolean, required: true }),
    __metadata("design:type", Boolean)
], OnOffSwitch.prototype, "value", void 0);
__decorate([
    Prop({ type: String, default: 'myId' }),
    __metadata("design:type", String)
], OnOffSwitch.prototype, "id", void 0);
__decorate([
    Prop({ type: String, default: 'ON' }),
    __metadata("design:type", String)
], OnOffSwitch.prototype, "onValue", void 0);
__decorate([
    Prop({ type: String, default: 'OFF' }),
    __metadata("design:type", String)
], OnOffSwitch.prototype, "offValue", void 0);
OnOffSwitch = __decorate([
    vue_class_component_esm({
        name: 'on-off-switch'
    })
], OnOffSwitch);
/* harmony default export */ var OnOffSwitchvue_type_script_lang_ts = (OnOffSwitch);

;// CONCATENATED MODULE: ./src/Components/OnOffSwitch.vue?vue&type=script&lang=ts
 /* harmony default export */ var Components_OnOffSwitchvue_type_script_lang_ts = (OnOffSwitchvue_type_script_lang_ts); 
;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-66.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-66.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-66.use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-66.use[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/OnOffSwitch.vue?vue&type=style&index=0&id=2aff4d20&prod&lang=scss
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Components/OnOffSwitch.vue?vue&type=style&index=0&id=2aff4d20&prod&lang=scss

;// CONCATENATED MODULE: ./src/Components/OnOffSwitch.vue



;


/* normalize component */

var OnOffSwitch_component = normalizeComponent(
  Components_OnOffSwitchvue_type_script_lang_ts,
  OnOffSwitchvue_type_template_id_2aff4d20_render,
  OnOffSwitchvue_type_template_id_2aff4d20_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Components_OnOffSwitch = (OnOffSwitch_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Levels/LevelsView.vue?vue&type=script&lang=ts
var LevelsViewvue_type_script_lang_ts_a, LevelsViewvue_type_script_lang_ts_b;






let LevelsView = class LevelsView extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    rubric;
    dataConnector;
    onUseScoresChanged(useScores) {
        this.rubric.useScores = useScores;
        this.dataConnector?.updateRubric(this.rubric);
        if (useScores && !this.rubric.useRelativeWeights) {
            this.rubric.hasAbsoluteWeights = Rubric.usesAbsoluteWeights(this.rubric);
        }
        else if (!useScores) {
            this.rubric.hasAbsoluteWeights = false;
        }
    }
    onUseRelativeWeightsChanged() {
        this.rubric.useRelativeWeights = !this.rubric.useRelativeWeights;
        this.dataConnector?.updateRubric(this.rubric);
    }
};
__decorate([
    Prop({ type: Rubric, required: true }),
    __metadata("design:type", typeof (LevelsViewvue_type_script_lang_ts_a = typeof Rubric !== "undefined" && Rubric) === "function" ? LevelsViewvue_type_script_lang_ts_a : Object)
], LevelsView.prototype, "rubric", void 0);
__decorate([
    Prop(DataConnector),
    __metadata("design:type", Object)
], LevelsView.prototype, "dataConnector", void 0);
LevelsView = __decorate([
    vue_class_component_esm({
        name: 'levels-view',
        components: {
            OnOffSwitch: Components_OnOffSwitch, Levels: Levels_Levels
        },
    })
], LevelsView);
/* harmony default export */ var LevelsViewvue_type_script_lang_ts = (LevelsView);

;// CONCATENATED MODULE: ./src/Components/Builder/Levels/LevelsView.vue?vue&type=script&lang=ts
 /* harmony default export */ var Levels_LevelsViewvue_type_script_lang_ts = (LevelsViewvue_type_script_lang_ts); 
;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-66.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-66.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-66.use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-66.use[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Levels/LevelsView.vue?vue&type=style&index=0&id=78b088e8&prod&lang=scss&scoped=true
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Components/Builder/Levels/LevelsView.vue?vue&type=style&index=0&id=78b088e8&prod&lang=scss&scoped=true

;// CONCATENATED MODULE: ../../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-66.use[0]!../../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-66.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../../../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-66.use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-66.use[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Levels/LevelsView.vue?vue&type=style&index=1&id=78b088e8&prod&lang=scss
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/Components/Builder/Levels/LevelsView.vue?vue&type=style&index=1&id=78b088e8&prod&lang=scss

// EXTERNAL MODULE: ../../../../../../../../node_modules/@intlify/vue-i18n-loader/lib/index.js!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Components/Builder/Levels/LevelsView.vue?vue&type=custom&index=0&blockType=i18n
var LevelsViewvue_type_custom_index_0_blockType_i18n = __webpack_require__(397);
var LevelsViewvue_type_custom_index_0_blockType_i18n_default = /*#__PURE__*/__webpack_require__.n(LevelsViewvue_type_custom_index_0_blockType_i18n);
;// CONCATENATED MODULE: ./src/Components/Builder/Levels/LevelsView.vue?vue&type=custom&index=0&blockType=i18n
 /* harmony default export */ var Levels_LevelsViewvue_type_custom_index_0_blockType_i18n = ((LevelsViewvue_type_custom_index_0_blockType_i18n_default())); 
;// CONCATENATED MODULE: ./src/Components/Builder/Levels/LevelsView.vue



;



/* normalize component */

var LevelsView_component = normalizeComponent(
  Levels_LevelsViewvue_type_script_lang_ts,
  LevelsViewvue_type_template_id_78b088e8_scoped_true_render,
  LevelsViewvue_type_template_id_78b088e8_scoped_true_staticRenderFns,
  false,
  null,
  "78b088e8",
  null
  
)

/* custom blocks */
;
if (typeof Levels_LevelsViewvue_type_custom_index_0_blockType_i18n === 'function') Levels_LevelsViewvue_type_custom_index_0_blockType_i18n(LevelsView_component)

/* harmony default export */ var Levels_LevelsView = (LevelsView_component.exports);
;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricBuilderPreview.vue?vue&type=template&id=d8c98aca
var RubricBuilderPreviewvue_type_template_id_d8c98aca_render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return (_vm.rubric)?_c('rubric-entry',{attrs:{"rubric":_vm.rubric,"preview":true,"ui-state":_vm.uiState}}):_vm._e()
}
var RubricBuilderPreviewvue_type_template_id_d8c98aca_staticRenderFns = []


;// CONCATENATED MODULE: ../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??clonedRuleSet-84.use[1]!../../../../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/Views/RubricBuilderPreview.vue?vue&type=script&lang=ts
var RubricBuilderPreviewvue_type_script_lang_ts_a;




let RubricBuilderPreview = class RubricBuilderPreview extends (external_commonjs_vue_commonjs2_vue_root_Vue_default()) {
    rubric;
    uiState;
};
__decorate([
    Prop({ type: Rubric, required: true }),
    __metadata("design:type", typeof (RubricBuilderPreviewvue_type_script_lang_ts_a = typeof Rubric !== "undefined" && Rubric) === "function" ? RubricBuilderPreviewvue_type_script_lang_ts_a : Object)
], RubricBuilderPreview.prototype, "rubric", void 0);
__decorate([
    Prop({ type: Object }),
    __metadata("design:type", Object)
], RubricBuilderPreview.prototype, "uiState", void 0);
RubricBuilderPreview = __decorate([
    vue_class_component_esm({
        components: {
            RubricEntry: Views_RubricEntry
        },
    })
], RubricBuilderPreview);
/* harmony default export */ var RubricBuilderPreviewvue_type_script_lang_ts = (RubricBuilderPreview);

;// CONCATENATED MODULE: ./src/Views/RubricBuilderPreview.vue?vue&type=script&lang=ts
 /* harmony default export */ var Views_RubricBuilderPreviewvue_type_script_lang_ts = (RubricBuilderPreviewvue_type_script_lang_ts); 
;// CONCATENATED MODULE: ./src/Views/RubricBuilderPreview.vue





/* normalize component */
;
var RubricBuilderPreview_component = normalizeComponent(
  Views_RubricBuilderPreviewvue_type_script_lang_ts,
  RubricBuilderPreviewvue_type_template_id_d8c98aca_render,
  RubricBuilderPreviewvue_type_template_id_d8c98aca_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Views_RubricBuilderPreview = (RubricBuilderPreview_component.exports);
;// CONCATENATED MODULE: ./src/Router/router.ts











external_commonjs_vue_commonjs2_vue_root_Vue_default().use(VueRouter$1);
const builderRoutes = [
    {
        path: '/',
        name: 'BuilderPreview',
        component: Views_RubricBuilderPreview,
    },
    {
        path: '/builder',
        name: 'Builder',
        component: Rubric_ScoreRubricView,
    },
    {
        path: '/levels',
        name: 'BuilderLevels',
        component: Levels_LevelsView,
    },
    {
        path: '/full-view',
        name: 'BuilderFull',
        component: Views_RubricBuilderFull,
    }
];
const demoRoutes = [
    {
        path: '/',
        name: 'Home',
        component: RubricDemoHome,
        props: true
    },
    {
        path: '/builder',
        component: Views_RubricBuilderDemoWrapper,
        children: [
            {
                path: '',
                name: 'BuilderPreview',
                component: Views_RubricBuilderPreview
            },
            {
                path: 'builder',
                name: 'Builder',
                component: Rubric_ScoreRubricView,
            },
            {
                path: 'levels',
                name: 'BuilderLevels',
                component: Levels_LevelsView,
            },
            {
                path: 'full-view',
                name: 'BuilderFull',
                component: Views_RubricBuilderFull,
            }
        ]
    },
    {
        path: '/preview',
        name: 'Preview',
        component: Views_RubricPreviewDemoWrapper
    },
    {
        path: '/entry',
        name: 'Entry',
        component: Views_RubricEntryDemoWrapper,
        props: true
    },
    {
        path: '/results',
        name: 'Results',
        component: Views_RubricResultDemoWrapper,
        props: true
    }
];
const routers = {
    getRouter: (name, mode = 'hash') => {
        if (['demo', 'builder'].indexOf(name) === -1) {
            throw new Error(`No router with name '${name}' available.`);
        }
        return new VueRouter$1({
            mode,
            linkExactActiveClass: 'active-link',
            routes: (name === 'builder') ? builderRoutes : demoRoutes
        });
    }
};
/* harmony default export */ var router = (routers);

;// CONCATENATED MODULE: ./src/plugin.ts







/* harmony default export */ var src_plugin = ({
    install(Vue, options) {
        Vue.component('RubricDemoWrapper', Views_RubricDemoWrapper);
        Vue.component('RubricBuilderWrapper', Views_RubricBuilderWrapper);
        Vue.component('RubricPreviewWrapper', Views_RubricPreviewWrapper);
        Vue.component('RubricEntryWrapper', Views_RubricEntryWrapper);
        Vue.component('RubricResultWrapper', Views_RubricResultWrapper);
        // console.log('adding method to proto');
        Vue.prototype.$getRouter = function (name) {
            return router.getRouter(name);
        };
        Vue.prototype.$getRubricFromJSON = function (rubricJSON) {
            return Rubric.fromJSON(rubricJSON);
        };
    }
});

;// CONCATENATED MODULE: ../../../../../../../../node_modules/@vue/cli-service/lib/commands/build/entry-lib.js


/* harmony default export */ var entry_lib = (src_plugin);


}();
/******/ 	return __webpack_exports__;
/******/ })()
;
});
//# sourceMappingURL=cosnics-rubric.umd.js.map