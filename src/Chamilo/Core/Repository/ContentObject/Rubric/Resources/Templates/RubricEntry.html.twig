<div>
    {% set appContext = 'Chamilo\\Core\\Repository\\ContentObject\\Rubric' %}

    {{ getJavascript('Builder/cosnics-rubric.umd.js', appContext) }}
    {{ getCss('cosnics-rubric.css', appContext) }}

    <style type="text/css">
        .col-xs-12 #rubric-entry {
            margin: 0 -10px;
        }
    </style>

    <div id="rubric-entry">
        <h4 style="margin: 0 10px 10px 10px">{{ 'RubricEntry'|trans({}, appContext) }}</h4>

        <rubric-entry-wrapper v-if="rubricData" :rubric-data="rubricData" :rubric-results="rubricResults" :show-errors="hasErrors" @on-save="saveRubric">
            <template v-slot:slot-outer>
                <div style="left: 0; margin-left: .5em; margin-top: .5em; position: absolute;">
                    <button class="btn btn-primary" @click="saveRubric" v-html="$t('save')"></button>
                </div>
            </template>
        </rubric-entry-wrapper>
        {{ form_start(FORM) }}
        {{ form_widget(FORM.rubric_results, {'attr': {':value': 'rubricResultsJSON'} }) }}
        {{ form_end(FORM) }}
    </div>
    <script>
        Vue.use(BootstrapVue);
        Vue.use(VueI18n);
        Vue.use(this['cosnics-rubric'].default);

        var messages = {
            'en': {
                'save': 'Save'
            },
            'fr': {
                'save': 'Sauvegarder'
            },
            'nl': {
                'save': 'Opslaan'
            }
        };

        /*var data = JSON.parse(rubricDataJSON);*/
        var data = {{ RUBRIC_DATA_JSON|raw }};

        var lang;
        try {
            lang = '{{ LANGUAGE|raw }}';
        } catch (err) {
            console.warn('Language could not be set, defaulting to English instead.');
            lang = 'en';
        }

        new Vue({
            i18n: new VueI18n({ locale: lang, messages }),
            el: '#rubric-entry',
            data: {
                rubricData: data,
                hasErrors: false,
                rubricResults: { results: [] }
            },
            computed: {
                rubricResultsJSON: function() {
                    var res = JSON.stringify(this.rubricResults.results);
                    return res;
                }
            },
            methods: {
                saveRubric: function(event) {
                    event.preventDefault();
                    var i, results = this.rubricResults.results;
                    if (results.length === 0) {
                        this.hasErrors = true;
                        return;
                    }
                    for (i = 0; i < results.length; i++) {
                        if (typeof results[i].level_id !== 'number') {
                            this.hasErrors = true;
                            return;
                        }
                    }
                    this.hasErrors = false;
                    var form = document.querySelector('[name=entry_form]');
                    if (form) {
                        form.submit();
                    }
                }
            }
        });
    </script>

</div>
