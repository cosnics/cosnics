{{ HEADER|raw }}

{% set appContext = 'Chamilo\\Core\\Repository\\ContentObject\\GradeBook\\Display' %}
{% set commonContext = 'Chamilo\\Libraries' %}

{{ getJavascript('cosnics-gradebook.umd.js', 'Chamilo\\Core\\Repository\\ContentObject\\GradeBook') }}
{{ getCss('cosnics-gradebook.css', 'Chamilo\\Core\\Repository\\ContentObject\\GradeBook') }}

<h3 style="margin-left: 15px;color: #507177;margin-top: 0;">{{ CONTENT_OBJECT_TITLE }}</h3>
<!--<div id="app"></div>-->
<div id="app">
    <grade-book-app :api-config="apiConfig"></grade-book-app>
</div>

<!--<script src="http://localhost:8080/js/chunk-vendors.js"></script>
<script src="http://localhost:8080/js/app.js"></script>-->

<script>
    Vue.use(BootstrapVue);
    Vue.use(this['cosnics-gradebook'].default);
    Vue.use(VueI18n);

    const messages = { 'en': {}, 'nl': {} };

    let lang;
    try {
        lang = '{{ LANGUAGE|raw }}';
    } catch (err) {
        console.warn('Language could not be set, defaulting to English instead.');
        lang = 'en';
    }
    const i18n = new VueI18n({ locale: lang, messages });

    const apiConfig = {
        gradeBookRootURL: '{{ GRADEBOOK_ROOT_URL|raw }}',
        gradeBookImportCsvURL: '{{ GRADEBOOK_IMPORT_CSV_URL|raw }}',
        loadGradeBookDataURL: '{{ LOAD_GRADEBOOK_DATA_URL|raw }}',
        addCategoryURL: '{{ ADD_CATEGORY_URL|raw }}',
        updateCategoryURL: '{{ UPDATE_CATEGORY_URL|raw }}',
        moveCategoryURL: '{{ MOVE_CATEGORY_URL|raw }}',
        removeCategoryURL : '{{ REMOVE_CATEGORY_URL|raw }}',
        addColumnURL: '{{ ADD_COLUMN_URL|raw }}',
        updateColumnURL: '{{ UPDATE_COLUMN_URL|raw }}',
        updateColumnCategoryURL: '{{ UPDATE_COLUMN_CATEGORY_URL|raw }}',
        moveColumnURL: '{{ MOVE_COLUMN_URL|raw }}',
        addColumnSubItemURL: '{{  ADD_COLUMN_SUBITEM_URL|raw }}',
        removeColumnSubItemURL: '{{  REMOVE_COLUMN_SUBITEM_URL|raw }}',
        removeColumnURL: '{{ REMOVE_COLUMN_URL|raw }}',
        synchronizeGradeBookURL: '{{ SYNCHRONIZE_GRADEBOOK_URL|raw }}',
        overwriteScoreURL: '{{ OVERWRITE_SCORE_URL|raw }}',
        revertOverwrittenScoreURL: '{{ REVERT_OVERWRITTEN_SCORE_URL|raw }}',
        updateScoreCommentURL: '{{ UPDATE_SCORE_COMMENT_URL|raw }}',
        calculateTotalScoresURL: '{{ CALCULATE_TOTAL_SCORES_URL|raw }}',
        csrfToken: '{{ csrf_token('ComponentToken') }}'
    };

    new Vue({
        i18n: i18n,
        el: '#app',
        data: {
            apiConfig: apiConfig
        }
    });

    /*new Vue({
        render: h => h(window.App, {attrs: {apiConfig}}),
        i18n
    }).$mount('#app');*/
</script>

{{ FOOTER|raw }}