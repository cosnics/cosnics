{{ HEADER|raw }}

{% set appContext = 'Chamilo\\Core\\Repository\\ContentObject\\Evaluation\\Display' %}

<style>
    td.table-lastname {
      text-transform: uppercase;
    }
    td.table-fb-count {
        text-align: center;
    }
    .tbl-no-sort {
        pointer-events: none
    }

    .presence {
        border-radius: 4px;
        flex: 1;
        text-align: center;
    }

    .presence-absent {
        background-color: #eb6a38;
        padding: 0 5px;
        color: white;
    }

    .presence-present {
        background-color: #ddf8e1;
        color: #027461;
    }

    .fa.btn-icon-absent::before {
        content: '\f0a2';
    }

    .fa.btn-icon-present::before, .fa.btn-icon-neutral::before {
        content: '\f1f7';
    }

    .tbl-sort-option {
        background-position: right calc(.75rem / 2) center;
        background-repeat: no-repeat;
        background-size: .65em 1em;
        cursor: pointer;
        display: inline-block;
        padding-right: calc(.75rem + .85em);
        pointer-events: all;
    }
    .tbl-sort-option[aria-sort=none] {
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='101' height='101' view-box='0 0 101 101' preserveAspectRatio='none'%3e%3cpath fill='black' opacity='.3' d='M51 1l25 23 24 22H1l25-22zM51 101l25-23 24-22H1l25 22z'/%3e%3c/svg%3e");
    }
    .tbl-sort-option[aria-sort=ascending] {
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='101' height='101' view-box='0 0 101 101' preserveAspectRatio='none'%3e%3cpath fill='black' d='M51 1l25 23 24 22H1l25-22z'/%3e%3cpath fill='black' opacity='.3' d='M51 101l25-23 24-22H1l25 22z'/%3e%3c/svg%3e");
    }
    .tbl-sort-option[aria-sort=descending] {
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='101' height='101' view-box='0 0 101 101' preserveAspectRatio='none'%3e%3cpath fill='black' opacity='.3' d='M51 1l25 23 24 22H1l25-22z'/%3e%3cpath fill='black' d='M51 101l25-23 24-22H1l25 22z'/%3e%3c/svg%3e");
    }
    .form-control-sm {
        height: calc(1.5em + .5rem + 2px);
        padding: .25rem .5rem;
        font-size: 1.3rem;
        line-height: 1.5;
        border-radius: .2rem;
    }
    .form-control-sm.mod-score {
        /*height: calc(1.9em + .5rem + 2px);*/
    }
    /*td.table-score {
        display: flex;
        align-items: center;
    }*/
    table.isScoresEditable td.table-score {
        padding: 5px 8px!important;
        width: 8rem;
    }
    .form-control[type="text"].mod-score {
        padding: .25rem .5rem;
        min-width: 46px;
    }
    .table.mod-col-fit > thead > tr > th.col-fit {
        width: 1px;
        white-space: nowrap;
        padding-right: 30px!important;
    }
    /*.table[css-grid] {
        display: grid;
        border-collapse: collapse;
        min-width: 100%;
        grid-template-columns:
            minmax(60px, .33fr)
            minmax(240px, 1fr)
            minmax(130px, 1fr)
            minmax(80px, .33fr)
            minmax(150px, 5fr)
    }
    .table[css-grid] thead,
    .table[css-grid] tbody,
    .table[css-grid] tr {
        display: contents;
    }

    .table[css-grid] th,
    .table[css-grid] td {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .table[css-grid] th {
        position: sticky;
        top: 0;
        background: white;
        text-align: left;
    }

    .table[css-grid] th {
        border-bottom: 1px solid #ddd;
    }

    .table[css-grid] td {
        padding-top: 10px;
        padding-bottom: 10px;
        color: #808080;
    }

    .table[css-grid] tr:nth-child(even) td {
        background: rgb(249, 249, 249);
    }*/
    {% if not HAS_RUBRIC %}
    /* TODO: I copied these styles from rubrics but they should be global */
    .btn-check {
        background: none;
        border: none;
        color: #888;
        cursor: default;
        margin: 0;
        padding: 0;
    }
    .btn-icon-check {
        margin-right: .3em;
        width: 1em;
    }
    .btn-icon-check:before {
        content: "\f096";
    }
    .btn-check.checked .btn-icon-check:before {
        content: "\f046";
    }
    .lbl-check {
        border: 1px solid transparent;
        border-radius: 3px;
    }
    .btn-check:focus, .btn-check:hover {
        color: #1d4567;
    }
    .btn-check, .lbl-check:focus {
        outline: none;
    }
    {% endif %}
    .panel .list-group-item:nth-child(odd) {
        background-color: #e0e0e0;
    }
    .panel .list-group-item {
        padding-top: 20px;
    }

</style>

{% set entityTypesPlural = ['UsersEntity', 'CourseGroupsEntity', 'PlatformGroupsEntity'] %}

<h3>{{ CONTENT_OBJECT_TITLE }}</h3>

<ul class="nav nav-tabs dynamic-visual-tabs" role="tablist">
    <li role="presentation" class="active"><a href="#entities" aria-controls="entities" role="tab" data-toggle="tab">{{ entityTypesPlural[ENTITY_TYPE]|trans({}, appContext) }}</a></li>
    <li role="presentation"><a href="#properties" aria-controls="properties" role="tab" data-toggle="tab">{{ 'Properties'|trans({}, appContext) }}</a></li>
    <li role="presentation"><a href="#rubric" aria-controls="properties" role="tab" data-toggle="tab">{{ 'Rubric'|trans({}, appContext) }}</a></li>
</ul>

<div class="dynamic-visual-tab-content tab-content">
    <div role="tabpanel" class="tab-pane tab-pane-with-border active" id="entities">
        <!--Entity type: ${ entityType }<br />
        Context: ${ context }-->
        <div style="display: flex; gap: 45px;">
            <div style="display: inline-block;max-width:100%">
                <div style="display: flex; align-items: center;">
                    <div class="btn-toolbar btn-action-toolbar">
                        <div class="form-inline" style="display: flex; justify-content: flex-start;margin-left:5px;margin-top:15px">
                            <div class="action-bar input-group">
                                <b-form-input class="form-group form-control action-bar-search" v-model="globalSearchQuery" @input="onFilterChanged"
                                              type="text" placeholder="{{ 'Search'|trans({}, appContext) }}" debounce="750" autocomplete="off"></b-form-input>
                                <div class="input-group-btn">
                                    <button name="clear" class="btn btn-default" value="clear" @click="onFilterCleared">
                                        <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div style="margin-left:15px;margin-right: auto">
                        <button aria-label="" aria-expanded="false" class="btn-check" :class="{ 'checked': scoresEditable }" @click="scoresEditable = !scoresEditable"><span tabindex="-1" class="lbl-check"><i aria-hidden="true" class="btn-icon-check fa"></i>{{ 'EditScores'|trans({}, appContext) }}</span></button>
                    </div>
                    <div style="min-width: fit-content">
                        <a class="btn btn-default btn-sm" disabled>{{ 'Import'|trans({}, appContext) }}</a>
                        <a class="btn btn-default btn-sm" href="{{ EXPORT_URL }}">{{ 'Export'|trans({}, appContext) }}</a>
                    </div>
                </div>

                <b-table striped bordered
                    :items="entitiesProvider"
                    :fields="fields"
                    :sort-by.sync="sortBy"
                    :sort-desc.sync="sortDesc"
                    :filter="globalSearchQuery"
                    :per-page="pagination.perPage"
                    :current-page="pagination.currentPage"
                    class="mod-col-fit" :class="{ 'isScoresEditable': scoresEditable }" style="width: initial">
                    <template #head(fullname)="data">
                        <a class="tbl-sort-option" :aria-sort="getSortStatus('lastname')" @click="sortByNameField('lastname')">{{ 'Lastname'|trans({}, 'Chamilo\\Core\\User')|upper }}</a>
                        <a class="tbl-sort-option" :aria-sort="getSortStatus('firstname')" @click="sortByNameField('firstname')">{{ 'Firstname'|trans({}, 'Chamilo\\Core\\User') }}</a>
                    </template>
                    <template #cell(fullname)="data">
                        <a :href="getUrl(data.item.id)">${data.item.lastname.toUpperCase()}, ${data.item.firstname}</a>
                    </template>
                    <template #cell(score)="data">
                        <div style="display: flex; align-items: center">
                            <span v-if="isLabelShown(data.item)" :class="['presence', 'presence-' + data.item.presence_status]">
                                ${data.item.presence_status === 'present' ? data.item.score : 'absent'}
                            </span>
                            <b-form-input v-if="isInputShown(data.item)" class="form-control form-control-sm mod-score" v-model="data.item.score" type="text" debounce="750" @update="onScoreUpdated(data.item, $event)"></b-form-input>
                            <button v-if="scoresEditable" class="btn btn-default btn-sm" @click.prevent="onPresenceStatusUpdated(data.item)" style="padding: 2px 5px; font-size: 14px; margin-left: 5px" :title="'Markeer als ' + (data.item.presence_status === 'absent' ? 'aanwezig' : 'afwezig')">
                                <span aria-hidden="true" :class="['fa', 'btn-icon-' + data.item.presence_status]"></span><span class="sr-only">Markeer als ${data.item.presence_status === 'absent' ? 'aanwezig' : 'afwezig'}</span>
                            </button>
                        </div>
                    </template>
                    <template #cell(feedback_count)="data"><a @click="loadFeedback(data.item)" style="cursor:pointer;padding:6px">${ data.item.feedback_count }</a>
                    </template>
                    <template #cell(actions)="data">
                        <a class="btn btn-default btn-link" :href="getUrl(data.item.id)" style="text-decoration: none;padding:3px"><i class="fa fa-search" style="display:block;margin-top:-2px"></i><span class="sr-only">edit</span></a>
                    </template>
                </b-table>
                <div class="pagination-container" style="display: flex; justify-content: flex-end;">
                    <b-pagination v-model="pagination.currentPage" :total-rows="pagination.total" :per-page="pagination.perPage"
                                  aria-controls="data-table"></b-pagination>
                    <ul class="pagination">
                        <li class="page-item active"><a class="page-link">Totaal ${ pagination.total }</a></li>
                    </ul>
                </div>
            </div>
            <div v-if="feedback.length" class="panel panel-default panel-feedback" style="margin-top: 64px;margin-right:30px;max-width: 80ch;flex-grow:1;border:none">
                <h3>Feedback</h3>
                <div class="list-group">
                    <div v-for="item in feedback" :key="item.id" class="list-group-item">
                        <div style="display:flex;">
                            <img class="panel-feedback-profile" :src="item.photo" />
                            <h4 class="list-group-item-heading" style="flex-grow: 2;">${item.user}<div class="feedback-date">${item.date}</div></h4>
                        </div>
                        <div class="list-group-item-text feedback-content" v-html="item.content"></div>
                    </div>
                    <div style="padding: 0 10px 0 70px;margin-top:20px">
                        <h4>Nieuwe feedback</h4>
                        <textarea style="width: 100%;padding:5px;" name="comment" v-model="newFeedback"></textarea>
                        <div><label for="#is_private">Private</label><input type="checkbox" v-model="isFeedbackPrivate" id="is_private" name="is_private" /></div>
                        <button class="btn btn-default" style="margin-top:10px" @click="createFeedback">Save</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div role="tabpanel" class="tab-pane tab-pane-with-border" id="properties">
        <h3>{{ CONTENT_OBJECT_TITLE }}</h3>
        {{ CONTENT_OBJECT_RENDITION|raw }}
    </div>
    {% if SUPPORTS_RUBRICS %}
    <div role="tabpanel" class="tab-pane tab-pane-with-border" id="rubric">
        {% if HAS_RUBRIC %}
            {% if CAN_BUILD_RUBRIC %}
            <a href="{{ BUILD_RUBRIC_URL }}#/builder" class="btn btn-primary">{{ 'BuildRubric'|trans({}, appContext) }}</a>
                <form action="{{ REMOVE_RUBRIC_URL }}" method="post" style="display: contents">
                    <button class="btn btn-primary" onclick="return confirm('{{ 'ConfirmRemoveRubric'|trans({}, appContext) }}')">{{ 'RemoveRubric'|trans({}, appContext) }}</button>
                </form>
            {% else %}
                <div class="alert alert-warning">
                    {{ 'RubricHasResults'|trans({}, 'Chamilo\\Core\\Repository\\ContentObject\\Rubric') }}
                </div>
            {% endif %}
            <div class="clearfix"></div>
            <div>{{ RUBRIC_PREVIEW|raw }}</div>
        {% else %}
            <div class="alert alert-info">{{ 'RubricNotPublishedMessage'|trans({}, appContext) }}</div>
            <a href="{{ ADD_RUBRIC_URL }}" class="btn btn-success">{{ 'AddRubric'|trans({}, appContext) }}</a>
        {% endif %}
    </div>
    {% endif %}
</div>
<script>
    $('document').ready(function () {
        new Vue({
            el: '#entities',
            delimiters: ['${', '}'],
            data: {
                entityType: {{ ENTITY_TYPE }},
                context: '',
                fields: [
                    { key: 'fullname', sortable: false, thClass: 'tbl-no-sort col-fit'},
                    { key: 'official_code', label: '{{ 'OfficialCode'|trans({}, 'Chamilo\\Core\\User') }}', sortable: true, thClass: 'col-fit' },
                    { key: 'score', sortable: false, thClass: 'tbl-no-sort col-fit', variant: 'score' },
                    { key: 'feedback_count', label: '{{ 'NumberOfFeedbacks'|trans({}, 'Chamilo\\Application\\Weblcms') }}', sortable: false, thClass: 'tbl-no-sort', variant: 'fb-count'  }//,
                ],
                sortBy: 'lastname',
                sortDesc: false,
                pagination: {
                    currentPage: 1,
                    perPage: 20, //3,
                    total: 0
                },
                globalSearchQuery: '',
                requestCount: true,
                scoresEditable: false,
                feedback: [],
                feedbackEntity: null,
                newFeedback: '',
                isFeedbackPrivate: false
            },

            methods: {
                isLabelShown(entity) {
                    return entity.presence_status === 'absent' || (entity.presence_status === 'present' && !this.scoresEditable);
                },
                isInputShown(entity) {
                    return entity.presence_status !== 'absent' && this.scoresEditable;
                },
                getUrl(entityId)
                {
                    return '{{ ENTITY_BASE_URL|raw }}&entity_type=' + this.entityType + '&entity_id=' + entityId;
                },
                loadFeedback(entity) {
                    $.ajax({
                        url: '{{ LOAD_FEEDBACK_URL|raw }}',
                        method: 'get',
                        data: {
                            entity_id: entity.id
                        }
                    }).done(function (data) {
                        this.feedback = data.properties;
                        this.feedbackEntity = entity;
                    }.bind(this));
                },
                createFeedback() {
                    $.ajax({
                        url: '{{ SAVE_NEW_FEEDBACK_URL|raw }}',
                        method: 'post',
                        data: {
                            entity_id: this.feedbackEntity.id,
                            comment: this.newFeedback,
                            is_private: this.isFeedbackPrivate
                        }
                    }).done(function (data) {
                        this.newFeedback = '';
                        this.isFeedbackPrivate = false;
                        console.log(data);
                    }.bind(this));
                },
                onScoreUpdated(entity, score) {
                    $.ajax({
                        url: '{{ SAVE_SCORE_URL|raw }}',
                        method: 'post',
                        data: {
                            entity_id: entity.id,
                            score: score
                        }
                    }).done(function(data) {
                        entity.presence_status = data.properties.presence_status;
                    });
                },
                onPresenceStatusUpdated(entity) {
                    $.ajax({
                        url: '{{ SAVE_PRESENCE_STATUS_URL|raw }}',
                        method: 'post',
                        data: {
                            entity_id: entity.id,
                            presence_status: entity.presence_status === 'absent'
                        }
                    }).done(function(data) {
                        entity.presence_status = data.properties.presence_status;
                    });
                },
                getSortStatus(name) {
                    if (this.sortBy !== name) { return 'none'; }
                    return this.sortDesc ? 'descending' : 'ascending';
                },
                sortByNameField(namefield) {
                    if (this.sortBy === namefield) {
                        this.sortDesc = !this.sortDesc;
                        return;
                    }
                    this.sortBy = namefield;
                    this.sortDesc = false;
                },
                onFilterChanged: function() {
                    this.requestCount = true;
                },
                onFilterCleared: function() {
                    if (this.globalSearchQuery !== '') {
                        this.globalSearchQuery = '';
                        this.requestCount = true;
                    }
                },
                entitiesProvider: function(ctx, callback) {
                    $.ajax({
                        url: '{{ LOAD_ENTITIES_URL|raw }}',
                        data: {
                            global_search_query: ctx.filter,
                            sort_field: ctx.sortBy,
                            sort_direction: ctx.sortDesc ? 'desc' : 'asc',
                            items_per_page: ctx.perPage,
                            page_number: ctx.currentPage,
                            request_count: this.requestCount
                        }
                    }).done(function(data) {
                        var d = data.properties;
                        this.context = d.context;
                        if (d.count !== undefined) {
                            this.pagination.total = d.count;
                            this.requestCount = false;
                        }
                        callback(data.properties.entities);
                    }.bind(this));
                }
            }
        });
    });
</script>
{{ FOOTER|raw }}
